{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.10\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data: URL from public.photo\nexport function makeImageDataUrl(photo) {\n  if (photo) {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageDataUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType) {\n  let card = null;\n  fn = fn && fn.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1)\n      };\n    } else {\n      card.photo = {\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageDataUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageDataUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageDataUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageDataUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              {this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n                  <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n                </a>\n                :\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                  <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n                </a>\n              }\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageDataUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageDataUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageDataUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    this.setState({messageCount: topic.messageCount()});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageDataUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, theCard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, theCard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'lp',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn('Your browser does not support BroadcastChannel. Some features will not be available');\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageDataUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.warn(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.warn(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.warn(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[947](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageDataUrl","photo","data","type","startsWith","ref","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","indexOf","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","authorizeURL","sanitizeImageUrl","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","navigateTo","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","findMessage","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","reset","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","error","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"sourceRoot":""}