{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nexport default class Alert extends React.PureComponent {\r\n  render() {\r\n    return this.props.visible ?\r\n      <div className=\"alert-container\">\r\n        <div className=\"alert\">\r\n          <div className=\"title\">{this.props.title}</div>\r\n          <div className=\"content\">{this.props.content}</div>\r\n          <div className=\"dialog-buttons\">\r\n            {this.props.onReject ?\r\n              <button className=\"outline\" onClick={this.props.onReject}>\r\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\r\n              </button>\r\n              :\r\n              null\r\n            }\r\n            <button className=\"primary\" onClick={this.props.onConfirm}>\r\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    :\r\n    null;\r\n  }\r\n};\r\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.10\";\n","import { PACKAGE_VERSION } from './version.js';\r\n\r\n// Name of this application, used in the User-Agent.\r\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\r\n\r\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\r\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\r\n\r\n// The array of possible hosts to connect to.\r\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\r\n\r\n// Default host name and port to connect to.\r\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\r\n\r\n// Enable console logging.\r\nexport const LOGGING_ENABLED = true;\r\n\r\n// Minimum time between two keypress notifications, milliseconds.\r\nexport const KEYPRESS_DELAY = 3*1000;\r\n// Delay before sending a {note} for reciving a message, milliseconds.\r\nexport const RECEIVED_DELAY = 500;\r\n// Delay before sending a read notification, milliseconds.\r\nexport const READ_DELAY = 1000;\r\n\r\n// The default shortest allowed tag length. Matches the value on the server.\r\nexport const MIN_TAG_LENGTH = 2;\r\n// The default greatest allowed tag length. Matches the value on the server.\r\nexport const MAX_TAG_LENGTH = 96;\r\n// The default maximum number of tags allowed. Matches the value on the server.\r\nexport const MAX_TAG_COUNT = 16;\r\n\r\n// Access mode for P2P subscriptions initiated by the current user.\r\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\r\n// Access mode for new group topics created by the current user.\r\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\r\n// Access mode for a channel.\r\nexport const CHANNEL_ACCESS_MODE = 'JR';\r\n\r\n// Access mode for no access.\r\nexport const NO_ACCESS_MODE = 'N';\r\n\r\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\r\n// in @media (max-size: 640px) in base.css\r\nexport const MEDIA_BREAKPOINT = 640;\r\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\r\nexport const REM_SIZE = 13;\r\n\r\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\r\n// a square of this size.\r\nexport const AVATAR_SIZE = 128;\r\n\r\n// Size of the broken_image shown in MessagesView\r\nexport const BROKEN_IMAGE_SIZE = 32;\r\n\r\n// Number of chat messages to fetch in one call.\r\nexport const MESSAGES_PAGE = 24;\r\n\r\n// Default maximum in-band (included directly into the message) attachment size which fits into\r\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\r\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\r\n// for instance 1024 bytes.\r\n// Increase this limit to a greater value in production, if desired. Also increase\r\n// max_message_size in the server config.\r\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\r\n\r\n// Default absolute maximum attachment size to be used with the server = 8MB.\r\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\r\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\r\n\r\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\r\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\r\n// 2400 for production.\r\nexport const MAX_IMAGE_DIM = 1024;\r\n\r\n// Linear dimensions of image preview: shrink image under this size for previews.\r\nexport const IMAGE_PREVIEW_DIM = 64;\r\n\r\n// Maximum number of online users to be shown in a topic title bar. Others will be\r\n// hidden under \"+X more\"\r\nexport const MAX_ONLINE_IN_TOPIC = 4;\r\n\r\n// Maximum length of user name, topic title, and private comment.\r\nexport const MAX_TITLE_LENGTH = 60;\r\n\r\n// Length of message previews in chat list, in characters.\r\nexport const MESSAGE_PREVIEW_LENGTH = 80;\r\n\r\n// Link for \"Contact Us\".\r\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\r\n\r\n// Link to Privacy Policy.\r\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\r\n\r\n// Link to Terms of Service.\r\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\r\n","// Context Menu: popup/dropdown menu.\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { injectIntl, defineMessages } from 'react-intl';\r\n\r\nimport { REM_SIZE } from '../config.js';\r\nimport HashNavigation from '../lib/navigation.js';\r\n\r\nconst messages = defineMessages({\r\n  info: {\r\n    id: 'menu_item_info',\r\n    defaultMessage: 'Info',\r\n    description: 'Show extended topic information'\r\n  },\r\n  clear_messages: {\r\n    id: 'menu_item_clear_messages',\r\n    defaultMessage: 'Clear messages',\r\n    description: 'Delete all messages'\r\n  },\r\n  clear_for_all: {\r\n    id: 'menu_item_clear_messages_for_all',\r\n    defaultMessage: 'Clear for All',\r\n    description: 'Delete all message(s) for all members'\r\n  },\r\n  delete: {\r\n    id: 'menu_item_delete',\r\n    defaultMessage: 'Delete',\r\n    description: 'Delete selected messages'\r\n  },\r\n  delete_for_all: {\r\n    id: 'menu_item_delete_for_all',\r\n    defaultMessage: 'Delete for All',\r\n    description: 'Delete selected message(s) for all members'\r\n  },\r\n  send_retry: {\r\n    id: 'menu_item_send_retry',\r\n    defaultMessage: 'Retry',\r\n    description: 'Retry sending message'\r\n  },\r\n  mute: {\r\n    id: 'menu_item_mute',\r\n    defaultMessage: 'Mute',\r\n    description: 'Turn off notifications'\r\n  },\r\n  unmute: {\r\n    id: 'menu_item_unmute',\r\n    defaultMessage: 'Unmute',\r\n    description: 'Turn notifications on'\r\n  },\r\n  topic_delete: {\r\n    id: 'menu_item_delete_topic',\r\n    defaultMessage: 'Delete',\r\n    description: 'Delete entire topic'\r\n  },\r\n  topic_delete_warning: {\r\n    id: 'topic_delete_warning',\r\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\r\n    description: 'Alert warning when deleting entire topic'\r\n  },\r\n  delete_messages_warning: {\r\n    id: 'delete_messages_warning',\r\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\r\n    description: 'Alert dialog warning when hard-deleting all messages.'\r\n  },\r\n  unblock: {\r\n    id: 'menu_item_unblock',\r\n    defaultMessage: 'Unblock',\r\n    description: 'Unblock topic or user'\r\n  },\r\n  // Generic string suitable for either topic or user.\r\n  block: {\r\n    id: 'menu_item_block',\r\n    defaultMessage: 'Block',\r\n    description: 'Block topic or user'\r\n  },\r\n  topic_block_warning: {\r\n    id: 'topic_block_warning',\r\n    defaultMessage: 'Are you sure you want to block this conversation?',\r\n    description: 'Alert warning when blocking a topic.'\r\n  },\r\n  member_delete: {\r\n    id: 'menu_item_member_delete',\r\n    defaultMessage: 'Remove',\r\n    description: 'Remove user from topic'\r\n  },\r\n  archive: {\r\n    id: 'menu_item_archive_topic',\r\n    defaultMessage: 'Archive',\r\n    description: 'Move topic from the list of active chats to archive'\r\n  },\r\n  unarchive: {\r\n    id: 'menu_item_restore_topic',\r\n    defaultMessage: 'Restore',\r\n    description: 'Restore topic from archive'\r\n  },\r\n  edit_permissions: {\r\n    id: 'menu_item_edit_permissions',\r\n    defaultMessage: 'Edit permissions',\r\n    description: 'Menu item [Edit permissions]'\r\n  },\r\n  clear_messages_warning: {\r\n    id: 'clear_messages_warning',\r\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\r\n    description: 'Alert dialog warning when deleting all messages.'\r\n  },\r\n});\r\n\r\nclass ContextMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {formatMessage} = props.intl;\r\n\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    // Preconfigured menu items.\r\n    this.MenuItems = {\r\n      'topic_info': {\r\n        id: 'topic_info',\r\n        title: formatMessage(messages.info),\r\n        handler: null\r\n      },\r\n      'messages_clear': {\r\n        id: 'messages_clear',\r\n        title: formatMessage(messages.clear_messages),\r\n        handler: (params, errorHandler) => {\r\n          return props.onShowAlert(\r\n            formatMessage(messages.clear_messages), // title\r\n            formatMessage(messages.clear_messages_warning), // content\r\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\r\n            null, // \"OK\"\r\n            true, // Show Reject button\r\n            null  // \"Cancel\"\r\n          );\r\n        }\r\n      },\r\n      'messages_clear_hard': {\r\n        id: 'messages_clear_hard',\r\n        title: formatMessage(messages.clear_for_all),\r\n        handler: (params, errorHandler) => {\r\n          return props.onShowAlert(\r\n            formatMessage(messages.clear_for_all), // title\r\n            formatMessage(message.delete_messages_warning), // content\r\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\r\n            null, // \"OK\"\r\n            true, // Show Reject button\r\n            null  // \"Cancel\"\r\n          );\r\n        }\r\n      },\r\n      'message_delete': {\r\n        id: 'message_delete',\r\n        title: formatMessage(messages.delete),\r\n        handler: (params, errorHandler) => {\r\n          return this.deleteMessages(false, false, params, errorHandler);\r\n        }\r\n      },\r\n      'message_delete_hard': {\r\n        id: 'message_delete_hard',\r\n        title: formatMessage(messages.delete_for_all),\r\n        handler: (params, errorHandler) => {\r\n          return this.deleteMessages(false, true, params, errorHandler);\r\n        }\r\n      },\r\n      'menu_item_send_retry': {\r\n        id: 'menu_item_send_retry',\r\n        title: formatMessage(messages.send_retry),\r\n        handler: (params, errorHandler) => {\r\n          return this.retryMessage(params, errorHandler);\r\n        }\r\n      },\r\n      'topic_unmute': {\r\n        id: 'topic_unmute',\r\n        title: formatMessage(messages.unmute),\r\n        handler: this.topicPermissionSetter.bind(this, '+P')\r\n      },\r\n      'topic_mute': {\r\n        id: 'topic_mute',\r\n        title: formatMessage(messages.mute),\r\n        handler: this.topicPermissionSetter.bind(this, '-P')\r\n      },\r\n      'topic_unblock': {\r\n        id: 'topic_unblock',\r\n        title: formatMessage(messages.unblock),\r\n        handler: this.topicPermissionSetter.bind(this, '+JP')\r\n      },\r\n      'topic_block': {\r\n        id: 'topic_block',\r\n        title: formatMessage(messages.block),\r\n        handler: (params, errorHandler) => {\r\n          return props.onShowAlert(\r\n            formatMessage(messages.block), // title\r\n            formatMessage(messages.topic_block_warning), // content\r\n            (() => {\r\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\r\n                this.props.onTopicRemoved(params.topicName);\r\n                return ctrl;\r\n              });\r\n            }),\r\n            null, // \"OK\"\r\n            true, // Show Reject button\r\n            null  // \"Cancel\"\r\n          );\r\n        }\r\n      },\r\n      'topic_delete': {\r\n        id: 'topic_delete',\r\n        title: formatMessage(messages.topic_delete),\r\n        handler: (params, errorHandler) => {\r\n          return props.onShowAlert(\r\n            formatMessage(messages.topic_delete), // title\r\n            formatMessage(messages.topic_delete_warning), // content\r\n            (() => {\r\n              const topic = this.props.tinode.getTopic(params.topicName);\r\n              if (!topic) {\r\n                console.log(\"Topic not found: \", params.topicName);\r\n                return;\r\n              }\r\n              return topic.delTopic(true).catch((err) => {\r\n                if (errorHandler) {\r\n                  errorHandler(err.message, 'err');\r\n                }\r\n              });\r\n            }),\r\n            null, // \"OK\"\r\n            true, // Show Reject button\r\n            null  // \"Cancel\"\r\n          );\r\n        }\r\n      },\r\n      'topic_archive': {\r\n        id: 'topic_archive',\r\n        title: formatMessage(messages.archive),\r\n        handler: (params, errorHandler) => {\r\n          const topic = this.props.tinode.getTopic(params.topicName);\r\n          if (!topic) {\r\n            console.log(\"Topic not found: \", params.topicName);\r\n            return;\r\n          }\r\n          return topic.archive(true).catch((err) => {\r\n            if (errorHandler) {\r\n              errorHandler(err.message, 'err');\r\n            }\r\n          });\r\n        }\r\n      },\r\n      'topic_restore': {\r\n        id: 'topic_restore',\r\n        title: formatMessage(messages.unarchive),\r\n        handler: (params, errorHandler) => {\r\n          const topic = this.props.tinode.getTopic(params.topicName);\r\n          if (!topic) {\r\n            console.log(\"Topic not found: \", params.topicName);\r\n            return;\r\n          }\r\n          return topic.archive(false).catch((err) => {\r\n            if (errorHandler) {\r\n              errorHandler(err.message, 'err');\r\n            }\r\n          });\r\n        }\r\n      },\r\n      // menu_item_edit_permissions is defined elsewhere.\r\n      'permissions': {\r\n        id: 'permissions',\r\n        title: formatMessage(messages.edit_permissions),\r\n        handler: null\r\n      },\r\n      'member_delete': {\r\n        id: 'member_delete',\r\n        title: formatMessage(messages.member_delete),\r\n        handler: (params, errorHandler) => {\r\n          const topic = this.props.tinode.getTopic(params.topicName);\r\n          if (!topic || !params.user) {\r\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\r\n            return;\r\n          }\r\n          return topic.delSubscription(params.user).catch((err) => {\r\n            if (errorHandler) {\r\n              errorHandler(err.message, 'err');\r\n            }\r\n          });\r\n        }\r\n      },\r\n      'member_mute': {\r\n        id: 'member_mute',\r\n        title: formatMessage(messages.mute),\r\n        handler: this.topicPermissionSetter.bind(this, '-P')\r\n      },\r\n      'member_unmute': {\r\n        id: 'member_unmute',\r\n        title: formatMessage(messages.unmute),\r\n        handler: this.topicPermissionSetter.bind(this, '+P')\r\n      },\r\n      'member_block': {\r\n        id: 'member_block',\r\n        title: formatMessage(messages.block),\r\n        handler: this.topicPermissionSetter.bind(this, '-JP')\r\n      },\r\n      'member_unblock': {\r\n        id: 'member_unblock',\r\n        title: formatMessage(messages.unblock),\r\n        handler: this.topicPermissionSetter.bind(this, '+JP')\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handlePageClick, false);\r\n    document.addEventListener('keyup', this.handleEscapeKey, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handlePageClick, false);\r\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\r\n  }\r\n\r\n  handlePageClick(e) {\r\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.props.hide();\r\n  }\r\n\r\n  handleEscapeKey(e) {\r\n    if (e.keyCode === 27) {\r\n      this.props.hide();\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.props.hide();\r\n    let item = this.props.items[e.currentTarget.dataset.id];\r\n    if (typeof item == 'string') {\r\n      item = this.MenuItems[item];\r\n    }\r\n\r\n    if (!item) {\r\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\r\n    } else {\r\n      this.props.onAction(\r\n        item.id,\r\n        item.handler(this.props.params, this.props.onError),\r\n        this.props.params);\r\n    }\r\n  }\r\n\r\n  // Menu Actions\r\n\r\n  deleteMessages(all, hard, params, errorHandler) {\r\n    const topic = this.props.tinode.getTopic(params.topicName);\r\n    if (!topic) {\r\n      console.log(\"Topic not found: \", params.topicName);\r\n      return;\r\n    }\r\n\r\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\r\n    // so try cancelling first. No harm if we can't cancel.\r\n    // The message can be cancelled if transmission to the server has not\r\n    // started yet or if the message send has failed.\r\n    if (!all && topic.cancelSend(params.seq)) {\r\n      return;\r\n    }\r\n    // Can't cancel. Delete instead.\r\n    const promise = all ?\r\n      topic.delMessagesAll(hard) :\r\n      topic.delMessagesList([params.seq], hard);\r\n\r\n    return promise.catch((err) => {\r\n      if (errorHandler) {\r\n        errorHandler(err.message, 'err');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Retries sending failed message.\r\n  retryMessage(params, errorHandler) {\r\n    const topic = this.props.tinode.getTopic(params.topicName);\r\n    // Remove the existing message entry.\r\n    if (!topic || !topic.flushMessage(params.seq)) {\r\n      return;\r\n    }\r\n    const msg = topic.createMessage(params.content, false);\r\n    return topic.publishDraft(msg).catch((err) => {\r\n      if (errorHandler) {\r\n        errorHandler(err.message, 'err');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function is used by context menu to set permissions.\r\n  topicPermissionSetter(mode, params, errorHandler) {\r\n    const topic = this.props.tinode.getTopic(params.topicName);\r\n    if (!topic) {\r\n      console.log(\"Topic not found\", params.topicName);\r\n      return;\r\n    }\r\n\r\n    let result = topic.updateMode(params.user, mode);\r\n    if (errorHandler) {\r\n      result = result.catch((err) => {\r\n        errorHandler(err.message, 'err');\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    let count = 0;\r\n    let menu = [];\r\n    this.props.items.map((item) => {\r\n      if (typeof item == 'string') {\r\n        item = this.MenuItems[item];\r\n      }\r\n      if (item && item.title) {\r\n        menu.push(\r\n          item.title == '-' ?\r\n            <li className=\"separator\" key={count} />\r\n            :\r\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\r\n        );\r\n      }\r\n      count++;\r\n    });\r\n\r\n    // Ensure that menu is inside the app-container.\r\n    const hSize = 12 * REM_SIZE;\r\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\r\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\r\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\r\n        (this.props.clickAt.x - this.props.bounds.left);\r\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\r\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\r\n        (this.props.clickAt.y - this.props.bounds.top);\r\n\r\n    const position = {\r\n      left: left + 'px',\r\n      top: top + 'px'\r\n    };\r\n\r\n    return (\r\n      <ul className=\"menu\" style={position}>\r\n        {menu}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ContextMenu);\r\n","// Short representation of time in the past.\r\nexport function shortDateFormat(then, locale) {\r\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\r\n  const now = new Date();\r\n  if (then.getFullYear() == now.getFullYear()) {\r\n    // Same year.\r\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\r\n      // Same month and day, show time only.\r\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\r\n    }\r\n    // Different month and/or day, show month day, time.\r\n    return then.toLocaleDateString(locale,\r\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\r\n  }\r\n  // Different year: just show the date.\r\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\r\n}\r\n\r\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\r\nexport function secondsToTime(seconds) {\r\n  const min = Math.floor(seconds / 60);\r\n  let sec = seconds % 60;\r\n  sec = sec < 10 ? `0${sec}` : sec;\r\n  return `${min}:${sec}`;\r\n}\r\n\r\n// Convert a number of bytes to human-readable format.\r\nexport function bytesToHumanSize(bytes) {\r\n  if (!bytes || bytes == 0) {\r\n    return '0 Bytes';\r\n  }\r\n\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\r\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\r\n  const count = bytes / Math.pow(1024, bucket);\r\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\r\n  return count.toFixed(round) + ' ' + sizes[bucket];\r\n}\r\n\r\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\r\n// as Java's String#hash().\r\nexport function stringHash(value) {\r\n  let hash = 0;\r\n  value = '' + value;\r\n  for (let i = 0; i < value.length; i++) {\r\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\r\n    hash = hash & hash; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n}\r\n","import React from 'react';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport { stringHash } from '../lib/strformat.js';\r\n\r\nexport default class LetterTile extends React.PureComponent {\r\n  render() {\r\n    let avatar;\r\n    if (this.props.avatar === true) {\r\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\r\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\r\n        + (Math.abs(stringHash(this.props.topic)) % 16);\r\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\r\n        const letter = this.props.title.trim().charAt(0);\r\n        const className = 'lettertile ' + iconColor;\r\n        avatar = (<div className={className}><div>{letter}</div></div>)\r\n      } else {\r\n        const className = 'material-icons ' + iconColor;\r\n        avatar = isGroup ?\r\n          <i className={className}>group</i> : <i className={className}>person</i>;\r\n      }\r\n    } else if (this.props.avatar) {\r\n      // If avatar image is invalid, show a placeholder.\r\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\r\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\r\n    } else {\r\n      avatar = null;\r\n    }\r\n    return avatar;\r\n  }\r\n}\r\n","// File and image helper functions.\r\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\r\nimport { bytesToHumanSize } from './strformat.js'\r\n\r\n// Supported image MIME types and corresponding file extensions.\r\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\r\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\r\n\r\n// Make a data: URL from public.photo\r\nexport function makeImageDataUrl(photo) {\r\n  if (photo) {\r\n    if (photo.data && photo.type) {\r\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\r\n      return 'data:' + mime + ';base64,' + photo.data;\r\n    }\r\n    return photo.ref;\r\n  }\r\n  return null;\r\n}\r\n\r\n// Calculate linear dimensions for scaling image down to fit under a certain size.\r\n// Returns an object which contains destination sizes, source sizes, and offsets\r\n// into source (when making square images).\r\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\r\n  // Sanitize input\r\n  width = width | 0;\r\n  height = height | 0;\r\n  maxWidth = maxWidth | 0;\r\n  maxHeight = maxHeight | 0;\r\n\r\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\r\n    return null;\r\n  }\r\n\r\n  if (forceSquare) {\r\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\r\n  }\r\n\r\n  const scale = Math.min(\r\n    Math.min(width, maxWidth) / width,\r\n    Math.min(height, maxHeight) / height\r\n  );\r\n\r\n  const size = {\r\n    dstWidth: (width * scale) | 0,\r\n    dstHeight: (height * scale) | 0,\r\n  };\r\n\r\n  if (forceSquare) {\r\n    // Also calculate parameters for making the image square.\r\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\r\n    size.srcWidth = size.srcHeight = Math.min(width, height);\r\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\r\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\r\n  } else {\r\n    size.xoffset = size.yoffset = 0;\r\n    size.srcWidth = width;\r\n    size.srcHeight = height;\r\n  }\r\n  return size;\r\n}\r\n\r\n// Ensure file's extension matches mime content type\r\nexport function fileNameForMime(fname, mime) {\r\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\r\n  if (idx < 0 || !fname) {\r\n    // Unknown mime or empty name.\r\n    return fname;\r\n  }\r\n  const ext = MIME_EXTENSIONS[idx];\r\n\r\n  const at = fname.lastIndexOf('.');\r\n  if (at >= 0) {\r\n    fname = fname.substring(0, at);\r\n  }\r\n  return fname + '.' + ext;\r\n}\r\n\r\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\r\n// On success calls onSuccess callback with the scaled image as Blob.\r\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\r\n  const img = new Image();\r\n  img.crossOrigin = 'Anonymous';\r\n  img.onerror = function(err) {\r\n    onError(\"Image format unrecognized\");\r\n  }\r\n  img.onload = async function() {\r\n    // Once the image is loaded, the URL is no longer needed.\r\n    URL.revokeObjectURL(img.src);\r\n\r\n    // Calculate the desired image dimensions.\r\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\r\n    if (!dim) {\r\n      onError(\"Invalid image\");\r\n      return;\r\n    }\r\n    let canvas = document.createElement('canvas');\r\n    canvas.width = dim.dstWidth;\r\n    canvas.height = dim.dstHeight;\r\n    let ctx = canvas.getContext('2d');\r\n    ctx.imageSmoothingEnabled = true;\r\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\r\n      0, 0, dim.dstWidth, dim.dstHeight);\r\n\r\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\r\n    // Generate blob to check size of the image.\r\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\r\n    if (!blob) {\r\n      onError(\"Unsupported image format\");\r\n      return;\r\n    }\r\n\r\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\r\n    // Do nothing if maxsize is <= 0.\r\n    while (maxSize > 0 && blob.length > maxSize) {\r\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\r\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\r\n      canvas.width = dim.dstWidth;\r\n      canvas.height = dim.dstHeight;\r\n      ctx = canvas.getContext('2d');\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\r\n        0, 0, dim.dstWidth, dim.dstHeight);\r\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\r\n    }\r\n\r\n    canvas = null;\r\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\r\n  };\r\n  img.src = URL.createObjectURL(fileOrBlob);\r\n}\r\n\r\n// Convert File to base64 string.\r\nexport function fileToBase64(file, onSuccess) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', function() {\r\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\r\n  });\r\n  reader.readAsDataURL(file);\r\n}\r\n\r\n// Convert Blob to base64 string.\r\nexport function blobToBase64(blob, onSuccess) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', function() {\r\n    onSuccess(blob.type, reader.result.split(',')[1]);\r\n  });\r\n  reader.readAsDataURL(blob);\r\n}\r\n\r\n// File pasted from the clipboard. It's either an inline image or a file attachment.\r\n// FIXME: handle large files out of band.\r\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\r\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\r\n  for (var i in items) {\r\n    var item = items[i];\r\n    if (item.kind === 'file') {\r\n      var file = item.getAsFile();\r\n      if (!file) {\r\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\r\n        continue;\r\n      }\r\n      if (file.type && file.type.split('/')[0] == 'image') {\r\n        // Handle inline image\r\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\r\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\r\n        } else {\r\n          imageFileToBase64(file, onImageSuccess, onError);\r\n        }\r\n      } else {\r\n        // Handle file attachment\r\n        fileToBase64(file, onAttachmentSuccess, onError)\r\n      }\r\n      // Indicate that the pasted data contains a file.\r\n      return true;\r\n    }\r\n  }\r\n  // No file found.\r\n  return false;\r\n}\r\n\r\n// Get mime type from data URL header.\r\nexport function getMimeType(header) {\r\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\r\n  return (mime && mime.length > 1) ? mime[1] : null;\r\n}\r\n\r\n// Given length of a binary object in bytes, calculate the length after\r\n// base64 encoding.\r\nexport function base64EncodedLen(n) {\r\n  return Math.floor((n + 2) / 3) * 4;\r\n}\r\n\r\n// Given length of a base64-encoded object, calculate decoded size of the\r\n// pbject in bytes.\r\nexport function base64DecodedLen(n) {\r\n  return Math.floor(n / 4) * 3;\r\n}\r\n\r\n// Re-encode string to standard base64 encoding with padding.\r\n// The string may be base64-URL encoded without the padding.\r\nexport function base64ReEncode(str) {\r\n  if (str) {\r\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    try {\r\n      str = btoa(atob(str));\r\n    } catch(err) {\r\n      console.log(\"Failed to base64 re-encode string.\", err);\r\n      str = null;\r\n    }\r\n  }\r\n  return str;\r\n}\r\n","import React from 'react';\r\n\r\nimport LetterTile from './letter-tile.jsx';\r\n\r\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\r\nimport { imageScaled, blobToBase64, makeImageDataUrl } from '../lib/blob-helpers.js';\r\n\r\nexport default class AvatarUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataUrl: props.avatar\r\n    };\r\n\r\n    this.handleFileUpload = this.handleFileUpload.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.avatar != prevProps.avatar) {\r\n      this.setState({dataUrl: this.props.avatar})\r\n    }\r\n  }\r\n\r\n  handleFileUpload(e) {\r\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\r\n      // Image successfully scaled and converted.\r\n      (mime, blob) => {\r\n        // Convert blob to base64-encoded bits.\r\n        blobToBase64(blob, (unused, base64bits) => {\r\n          const du = makeImageDataUrl({data: base64bits, type: mime});\r\n          this.setState({dataUrl: du});\r\n          this.props.onImageChanged(du);\r\n        });\r\n      },\r\n      // Failure\r\n      (err) => {\r\n        this.props.onError(err, 'err');\r\n      });\r\n    // Clear the value so the same file can be uploaded again.\r\n    e.target.value = '';\r\n  }\r\n\r\n  render() {\r\n    // Randomize id value in case more than one AvatarUpload is shown\r\n    // at the same time.\r\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\r\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\r\n    return (\r\n      <div className={className}>\r\n        {this.props.readOnly || !this.state.dataUrl ?\r\n          null :\r\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\r\n            <i className=\"material-icons\">clear</i>\r\n          </a>}\r\n        {this.state.dataUrl ?\r\n          <img src={this.state.dataUrl} className=\"preview\" /> :\r\n          this.props.readOnly && this.props.uid ?\r\n            <div className=\"avatar-box\">\r\n              <LetterTile\r\n                avatar={true}\r\n                topic={this.props.uid}\r\n                title={this.props.title} />\r\n            </div>\r\n            :\r\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\r\n        {this.props.readOnly ? null :\r\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\r\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\r\n        {this.props.readOnly ? null :\r\n        <label htmlFor={randId} className=\"round\">\r\n          <i className=\"material-icons\">file_upload</i>\r\n        </label>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\n/* BEGIN CheckBox: styled checkbox */\r\nexport default class CheckBox extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange() {\r\n    this.props.onChange(this.props.name, !this.props.checked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.props.onChange ? (\r\n        this.props.checked ?\r\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\r\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\r\n        ) : (\r\n          this.props.checked ?\r\n            <i className=\"material-icons\">check_box</i> :\r\n            <i className=\"material-icons\">check_box_outline_blank</i>\r\n        )\r\n    );\r\n  }\r\n}\r\n/* END CheckBox */\r\n","import React from 'react';\r\n\r\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\r\n\r\n/* Contact's labels: [you], or icons [muted], [blocked] */\r\nexport default class ContactBadges extends React.PureComponent {\r\n    render() {\r\n      let badges = null;\r\n      if (this.props.badges && this.props.badges.length > 0) {\r\n        badges = [];\r\n        this.props.badges.map(function(b) {\r\n          if (b.icon) {\r\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\r\n          } else {\r\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\r\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\r\n          }\r\n        });\r\n        return <>{badges}</>;\r\n      }\r\n      return null;\r\n    }\r\n};\r\n","// Odds and ends\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\n// Make shortcut icon appear with a green dot + show unread count in title.\r\nexport function updateFavicon(count) {\r\n  const oldIcon = document.getElementById('shortcut-icon');\r\n  const head = document.head || document.getElementsByTagName('head')[0];\r\n  const newIcon = document.createElement('link');\r\n  newIcon.type = 'image/png';\r\n  newIcon.id = 'shortcut-icon';\r\n  newIcon.rel = 'shortcut icon';\r\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\r\n  if (oldIcon) {\r\n    head.removeChild(oldIcon);\r\n  }\r\n  head.appendChild(newIcon);\r\n\r\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\r\n}\r\n\r\n// Create theCard which represents user's or topic's \"public\" info.\r\nexport function theCard(fn, imageUrl, imageMimeType) {\r\n  let card = null;\r\n  fn = fn && fn.trim();\r\n\r\n  if (fn) {\r\n    card = {\r\n      fn: fn\r\n    };\r\n  }\r\n\r\n  if (imageUrl) {\r\n    card = card || {};\r\n    let mimeType = imageMimeType;\r\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\r\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\r\n    if (matches) {\r\n      mimeType = matches[1];\r\n      card.photo = {\r\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1)\r\n      };\r\n    } else {\r\n      card.photo = {\r\n        ref: imageUrl\r\n      };\r\n    }\r\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\r\n  }\r\n\r\n  return card;\r\n}\r\n\r\n// Deep-shallow compare two arrays: shallow compare each element.\r\nexport function arrayEqual(a, b) {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n\r\n  if (!Array.isArray(a) || !Array.isArray(b)) {\r\n    return false;\r\n  }\r\n\r\n  // Compare lengths first.\r\n  if (a.length != b.length) {\r\n    return false;\r\n  }\r\n  // Order of elements is ignored.\r\n  a.sort();\r\n  b.sort();\r\n  for (let i = 0, l = a.length; i < l; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\r\n// as close to E.164 as possible.\r\nexport function asPhone(val) {\r\n  val = val.trim();\r\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\r\n    return val.replace(/[- ().]*/, '');\r\n  }\r\n  return null;\r\n}\r\n\r\n// Checks (loosely) if the given string is an email. If so returns the email.\r\nexport function asEmail(val) {\r\n  val = val.trim();\r\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\r\n    return val;\r\n  }\r\n  return null;\r\n}\r\n\r\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\r\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\r\n// example.html - ok\r\n// https:example.com - not ok.\r\n// http:/example.com - not ok.\r\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\r\nexport function isUrlRelative(url) {\r\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\r\n}\r\n\r\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\r\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\r\n// If apikey and/or token is defined, it's appended to relative URL.\r\nexport function sanitizeUrl(url, allowedSchemes) {\r\n  if (!url) {\r\n    return null;\r\n  }\r\n\r\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\r\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\r\n\r\n  // Relative URLs are safe.\r\n  // Relative URL does not start with ':', abcd123: or '//'.\r\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\r\n    return url;\r\n  }\r\n\r\n  // Blob URLs are safe.\r\n  if (/^blob:http/.test(url)) {\r\n    return url;\r\n  }\r\n\r\n  // Absolute URL. Accept only safe schemes, or no scheme.\r\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\r\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\r\n  if (!re.test(url)) {\r\n    return null;\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\r\n// have http:, https:, blob: or data: scheme.\r\n// The relative URL is appended with the API key and/or auth token.\r\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\r\nexport function sanitizeImageUrl(url) {\r\n  if (!url) {\r\n    return null;\r\n  }\r\n\r\n  const sanitizedUrl = sanitizeUrl(url);\r\n  if (sanitizedUrl) {\r\n    return sanitizedUrl;\r\n  }\r\n\r\n  // Is this a data: URL of an image?\r\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\r\n    return url;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// Given message's received status, return name and color of a delivery indicator icon.\r\nexport function deliveryMarker(received) {\r\n  switch (received) {\r\n    case Tinode.MESSAGE_STATUS_SENDING:\r\n      return { name: 'access_time' }; // watch face\r\n    case Tinode.MESSAGE_STATUS_FAILED:\r\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\r\n    case Tinode.MESSAGE_STATUS_SENT:\r\n      return { name: 'done' }; // checkmark\r\n    case Tinode.MESSAGE_STATUS_RECEIVED:\r\n      return { name: 'done_all' }; // double checkmark\r\n    case Tinode.MESSAGE_STATUS_READ:\r\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\r\n  }\r\n  return null;\r\n}\r\n","// Received/read indicator.\r\nimport React from 'react';\r\nimport { defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport { shortDateFormat } from '../lib/strformat.js';\r\nimport { deliveryMarker } from '../lib/utils.js';\r\n\r\nconst messages = defineMessages({\r\n  message_sending: {\r\n    id: 'message_sending',\r\n    defaultMessage: 'sending...',\r\n    description: 'Message being sent, in place of time stamp'\r\n  },\r\n  message_sending_failed: {\r\n    id: 'message_sending_failed',\r\n    defaultMessage: 'failed',\r\n    description: 'Failed to send message, in place of time stamp'\r\n  }\r\n});\r\n\r\nclass ReceivedMarker extends React.PureComponent {\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    let timestamp;\r\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\r\n      timestamp = formatMessage(messages.message_sending);\r\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\r\n      timestamp = formatMessage(messages.message_sending_failed);\r\n    } else {\r\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\r\n    }\r\n\r\n    const icon = deliveryMarker(this.props.received);\r\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\r\n\r\n    return (\r\n      <span className=\"timestamp\">\r\n        {timestamp}{'\\u00a0'}{marker}\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(ReceivedMarker);\r\n","// The counter of unread messages in the topic.\r\nimport React from 'react';\r\n\r\nexport default class UnreadBadge extends React.PureComponent {\r\n  render() {\r\n    return (this.props.count > 0 ?\r\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\r\n      : null);\r\n  }\r\n};\r\n","// A single topic or user.\r\nimport React from 'react';\r\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nimport ContactBadges from './contact-badges.jsx';\r\nimport LetterTile from './letter-tile.jsx';\r\nimport ReceivedMarker from './received-marker.jsx'\r\nimport UnreadBadge from './unread-badge.jsx';\r\n\r\nimport { Drafty } from 'tinode-sdk';\r\n\r\nimport { deliveryMarker } from '../lib/utils.js';\r\n\r\nconst messages = defineMessages({\r\n  drafty_image: {\r\n    id: 'drafty_image',\r\n    defaultMessage: 'Picture',\r\n    description: 'Comment for embedded images in drafty preview'\r\n  },\r\n  drafty_form: {\r\n    id: 'drafty_form',\r\n    defaultMessage: 'Form: ',\r\n    description: 'Comment for form in drafty preview'\r\n  },\r\n  drafty_attachment: {\r\n    id: 'drafty_attachment',\r\n    defaultMessage: 'Attachment',\r\n    description: 'Comment for attachment in drafty preview'\r\n  },\r\n});\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleContextClick = this.handleContextClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (this.props.onSelected) {\r\n      // Index this.props.index is used by GroupManager.\r\n      this.props.onSelected(this.props.item, this.props.index);\r\n    }\r\n  }\r\n\r\n  handleContextClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\r\n  }\r\n\r\n  render() {\r\n    let title = this.props.title;\r\n    if (!title) {\r\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\r\n        description=\"Title shown when the topic has no name\" /></i>;\r\n    } else if (title.length > 30) {\r\n      // FIXME: this is probably wrong for RTL languages.\r\n      title = title.substring(0, 28) + '…';\r\n    }\r\n    const online = this.props.now ? 'online' : 'offline';\r\n    const avatar = this.props.avatar ? this.props.avatar : true;\r\n    const badges = this.props.badges ? this.props.badges.slice() : [];\r\n    const icon_badges = [];\r\n    if (this.props.acs) {\r\n      if (this.props.showMode) {\r\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\r\n      }\r\n      if (this.props.acs.isMuted()) {\r\n        icon_badges.push({icon: 'muted'});\r\n      }\r\n      if (!this.props.acs.isJoiner()) {\r\n        icon_badges.push({icon: 'banned'});\r\n      }\r\n    }\r\n\r\n    const subtitle = this.props.preview ?\r\n      (typeof this.props.preview == 'string' ? this.props.preview :\r\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\r\n      this.props.comment;\r\n\r\n    const icon = deliveryMarker(this.props.received);\r\n    const marker = icon ? <i className={'material-icons small space-right' +\r\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\r\n\r\n    return (\r\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\r\n        <div className=\"avatar-box\">\r\n          <LetterTile\r\n            avatar={avatar}\r\n            title={this.props.title}\r\n            topic={this.props.item} />\r\n          {this.props.showOnline ? <span className={online} /> :\r\n            (this.props.showCheckmark && this.props.selected ?\r\n            <i className=\"checkmark material-icons\">check_circle</i>\r\n            : null)}\r\n        </div>\r\n        <div className=\"text-box\">\r\n          <div><span className=\"contact-title\">{title}</span>\r\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\r\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\r\n          </div>\r\n          {this.props.showMode ?\r\n            <span><ContactBadges badges={badges} /></span> :\r\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\r\n        </div>\r\n        {this.props.showContextMenu ?\r\n          <span className=\"menuTrigger\">\r\n            <a href=\"#\" onClick={this.handleContextClick}>\r\n              <i className=\"material-icons\">expand_more</i>\r\n            </a>\r\n          </span> : null}\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n// Converts Drafty object into a one-line preview.\r\nfunction draftyFormatter(style, data, values, key) {\r\n  let el = Drafty.tagName(style);\r\n  const attr = { key: key };\r\n  if (el) {\r\n    const { formatMessage } = this.props.intl;\r\n    switch (style) {\r\n      case 'BR':\r\n        // Replace new line with a space.\r\n        el = React.Fragment;\r\n        values = [' '];\r\n        break;\r\n      case 'HL':\r\n        // Make highlight less prominent in preview.\r\n        attr.className = 'highlight preview';\r\n        break;\r\n      case 'LN':\r\n        // Disable links in previews.\r\n        el = 'span';\r\n        break;\r\n      case 'IM':\r\n        // Replace image with '[icon] Image'.\r\n        el = React.Fragment;\r\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\r\n        break;\r\n      case 'BN':\r\n        el = 'span';\r\n        attr.className = 'flat-button faux';\r\n        break;\r\n      case 'FM':\r\n        el = React.Fragment;\r\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\r\n          formatMessage(messages.drafty_form)].concat(values || []);\r\n        break;\r\n      case 'RW':\r\n        el = React.Fragment;\r\n        break;\r\n      case 'EX':\r\n        if (data && data.mime == 'application/json') {\r\n          // Ignore JSON attachments: they are form response payloads.\r\n          return null;\r\n        }\r\n        el = React.Fragment;\r\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\r\n        break;\r\n      default:\r\n        if (el == '_UNKN') {\r\n          el = React.Fragment;\r\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\r\n        }\r\n        break;\r\n    }\r\n    return React.createElement(el, attr, values);\r\n  } else {\r\n    return values;\r\n  }\r\n};\r\n\r\nexport default injectIntl(Contact);\r\n","// A panel included into a list of contacts with an action text.\r\nimport React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nclass ContactAction extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.props.onAction(this.props.action);\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    return (\r\n      <li onClick={this.handleClick} className=\"action\">\r\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(ContactAction);\r\n","// ContactList: component for showing a list of contacts,\r\n// such as a list of group members in a group chat.\r\nimport React from 'react';\r\nimport { defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport { Drafty } from 'tinode-sdk';\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport Contact from './contact.jsx';\r\nimport ContactAction from './contact-action.jsx';\r\n\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\n\r\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\r\n\r\nconst messages = defineMessages({\r\n  badge_you: {\r\n    id: 'badge_you',\r\n    defaultMessage: 'you',\r\n    description: 'Badge for indicating the current user'\r\n  },\r\n  badge_owner: {\r\n    id: 'badge_owner',\r\n    defaultMessage: 'owner',\r\n    description: 'Badge for indicating the owner'\r\n  }\r\n});\r\n\r\nclass ContactList extends React.Component {\r\n  render() {\r\n    const { formatMessage } = this.props.intl;\r\n    const showCheckmark = Array.isArray(this.props.topicSelected);\r\n    const contactNodes = [];\r\n    let contactsCount = 0;\r\n    if (this.props.contacts && this.props.contacts.length > 0) {\r\n      this.props.contacts.map((c) => {\r\n        if (c.action) {\r\n          // Action item\r\n          contactNodes.push(\r\n            <ContactAction\r\n              title={c.title} action={c.action} values={c.values}\r\n              key={c.action}\r\n              onAction={this.props.onAction}\r\n              />);\r\n        } else {\r\n          // Normal contact\r\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\r\n          // If filter function is provided, filter out the items\r\n          // which don't satisfy the condition.\r\n          if (this.props.filterFunc && this.props.filter) {\r\n            const filterOn = [key];\r\n            if (c.private && c.private.comment) {\r\n              filterOn.push(('' + c.private.comment).toLowerCase());\r\n            }\r\n            if (c.public && c.public.fn) {\r\n              filterOn.push(('' + c.public.fn).toLowerCase());\r\n            }\r\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\r\n              return;\r\n            }\r\n          }\r\n\r\n          const isChannel = Tinode.isChannelTopicName(key);\r\n          const selected = showCheckmark ?\r\n            (this.props.topicSelected.indexOf(key) > -1) :\r\n            (this.props.topicSelected === key);\r\n          const badges = [];\r\n          if (this.props.showMode) {\r\n            if (key == this.props.myUserId) {\r\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\r\n            }\r\n            if (c.acs && c.acs.isOwner()) {\r\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\r\n            }\r\n          }\r\n\r\n          const comment = Array.isArray(c.private) ?\r\n            c.private.join(',') : (c.private ? c.private.comment : null);\r\n          let preview;\r\n          let deliveryStatus;\r\n          if (!this.props.showMode && c.latestMessage) {\r\n            const msg = c.latestMessage(true);\r\n            if (msg) {\r\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\r\n              preview = typeof msg.content == 'string' ?\r\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\r\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\r\n            }\r\n          }\r\n          contactNodes.push(\r\n            <Contact\r\n              title={c.public ? c.public.fn : null}\r\n              avatar={makeImageDataUrl(c.public ? c.public.photo : null)}\r\n              comment={comment}\r\n              preview={preview}\r\n              received={deliveryStatus}\r\n              unread={this.props.showUnread ? c.unread : 0}\r\n              now={c.online && this.props.connected}\r\n              acs={c.acs}\r\n              showMode={this.props.showMode}\r\n              badges={badges}\r\n              showCheckmark={showCheckmark}\r\n              selected={selected}\r\n              showOnline={this.props.showOnline && !isChannel}\r\n              isChannel={isChannel}\r\n              onSelected={this.props.onTopicSelected}\r\n              showContextMenu={this.props.showContextMenu}\r\n              item={key}\r\n              index={contactNodes.length}\r\n              key={key} />\r\n          );\r\n          contactsCount ++;\r\n        }\r\n      }, this);\r\n    }\r\n\r\n    return (\r\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\r\n        {contactsCount == 0 ?\r\n          <div className=\"center-medium-text\"\r\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\r\n          :\r\n          null\r\n        }\r\n        {contactNodes.length > 0 ?\r\n          <ul className=\"contact-box\">\r\n            {contactNodes}\r\n          </ul>\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(ContactList);\r\n","// The X menu to be displayed in title bars.\r\nimport React from 'react';\r\n\r\nexport default class MenuCancel extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\r\n        <i className=\"material-icons\">close</i>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport MenuCancel from './menu-cancel.jsx';\r\n\r\nexport default class ErrorPanel extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n\r\n    this.hide = this.hide.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.level !== this.props.level) {\r\n      this.setState({\r\n        show: !(!this.props.level)\r\n      });\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.setState({show: false});\r\n    if (this.props.onClearError) {\r\n      this.props.onClearError();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\r\n    const level = icons[this.props.level] || '';\r\n    const className = 'info-box ' + level;\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\r\n        <span>\r\n          {this.props.text}\r\n          {this.props.action ?\r\n            <>\r\n              &#32;<a href=\"#\"\r\n                style={{ whiteSpace: 'nowrap' }}\r\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\r\n                {this.props.actionText}\r\n              </a>\r\n            </>\r\n          : null}\r\n        </span>\r\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport LetterTile from './letter-tile.jsx';\r\n\r\nexport default class Chip extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  handleCancel(e) {\r\n    e.preventDefault();\r\n    this.props.onCancel(this.props.topic, this.props.index);\r\n  }\r\n\r\n  render() {\r\n    const title = this.props.title || this.props.topic;\r\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\r\n    return (\r\n      <div className={className}>\r\n        {this.props.noAvatar ?\r\n          <span className=\"spacer\" /> :\r\n          <div className=\"avatar-box\">\r\n            <LetterTile\r\n              avatar={this.props.avatar || true}\r\n              topic={this.props.topic}\r\n              title={this.props.title} />\r\n          </div>\r\n        }\r\n        <span>{title}</span>\r\n        {this.props.onCancel && !this.props.required ?\r\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\r\n          : <span className=\"spacer\" />}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport Chip from './chip.jsx';\r\n\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\n\r\n/* BEGIN ChipInput: group membership widget */\r\nexport default class ChipInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = ChipInput.deriveStateFromProps(props);\r\n    this.state.input = '';\r\n    this.state.focused = false;\r\n\r\n    this.handleTextInput = this.handleTextInput.bind(this);\r\n    this.removeChipAt = this.removeChipAt.bind(this);\r\n    this.handleChipCancel = this.handleChipCancel.bind(this);\r\n    this.handleFocusGained = this.handleFocusGained.bind(this);\r\n    this.handleFocusLost = this.handleFocusLost.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  static deriveStateFromProps(props) {\r\n    return {\r\n      placeholder: props.chips ? '' : props.prompt,\r\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\r\n      chipIndex: ChipInput.indexChips(props.chips)\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.chips != this.props.chips ||\r\n      prevProps.staticMembers != this.props.staticMembers ||\r\n      prevProps.prompt != this.props.prompt) {\r\n      this.setState(ChipInput.deriveStateFromProps(this.props));\r\n    }\r\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\r\n      this.setState({input: ''});\r\n    }\r\n  }\r\n\r\n  // Map chip index to user name\r\n  static indexChips(chips) {\r\n    const index = {};\r\n    let count = 0;\r\n    chips.map((item) => {\r\n      index[item.user] = count;\r\n      count ++;\r\n    });\r\n    return index;\r\n  }\r\n\r\n  // Have non-removable chips appear before all other chips.\r\n  static sortChips(chips, keep) {\r\n    const required = [];\r\n    const normal = [];\r\n    chips.map((item) => {\r\n      if (keep && keep.includes(item.user)) {\r\n        required.push(item);\r\n      } else {\r\n        normal.push(item);\r\n      }\r\n    });\r\n    return required.concat(normal);\r\n  }\r\n\r\n  handleTextInput(e) {\r\n    this.setState({input: e.target.value});\r\n    if (this.props.filterFunc) {\r\n      this.props.filterFunc(e.target.value);\r\n    }\r\n  }\r\n\r\n  removeChipAt(idx) {\r\n    const removed = this.state.sortedChips[idx];\r\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\r\n  }\r\n\r\n  handleChipCancel(item, idx) {\r\n    this.removeChipAt(idx);\r\n  }\r\n\r\n  handleFocusGained() {\r\n    this.setState({focused: true});\r\n  }\r\n\r\n  handleFocusLost() {\r\n    this.setState({focused: false});\r\n    if (this.props.onFocusLost) {\r\n      this.props.onFocusLost(this.state.input);\r\n    }\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.key === 'Backspace') {\r\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\r\n        const at = this.state.sortedChips.length - 1;\r\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\r\n          this.removeChipAt(at);\r\n        }\r\n      }\r\n    } else if (e.key === 'Enter') {\r\n      if (this.props.onEnter) {\r\n        this.props.onEnter(this.state.input);\r\n      }\r\n    } else if (e.key === 'Escape') {\r\n      if (this.props.onCancel) {\r\n        this.props.onCancel();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const chips = [];\r\n    let count = 0;\r\n    const staticMembers = this.props.staticMembers || [];\r\n    this.state.sortedChips.map((item) => {\r\n      chips.push(\r\n        <Chip\r\n          onCancel={this.handleChipCancel}\r\n          avatar={makeImageDataUrl(item.public ? item.public.photo : null)}\r\n          title={item.public ? item.public.fn : undefined}\r\n          noAvatar={this.props.avatarDisabled}\r\n          topic={item.user}\r\n          required={staticMembers.includes(item.user)}\r\n          invalid={item.invalid}\r\n          index={count}\r\n          key={item.user} />\r\n      );\r\n      count++;\r\n    });\r\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\r\n    return (\r\n      <div className={className}>\r\n        {chips}\r\n        <input type=\"text\"\r\n          placeholder={this.state.placeholder}\r\n          onChange={this.handleTextInput}\r\n          onFocus={this.handleFocusGained}\r\n          onBlur={this.handleFocusLost}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={this.state.input}\r\n          autoFocus />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// GroupMembers: control for managing a list of group members.\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport ChipInput from './chip-input.jsx';\r\nimport ContactList from './contact-list.jsx';\r\n\r\nconst messages = defineMessages({\r\n  no_contacts: {\r\n    id: 'no_contacts',\r\n    defaultMessage: 'You have no contacts :-(',\r\n    description: 'Shown in ContactsView when the user has no contacts'\r\n  },\r\n  contacts_not_found_short: {\r\n    id: 'contacts_not_found_short',\r\n    defaultMessage: \"No contacts match ''{query}''\",\r\n    description: 'Shown in ContactsView when search returned no results'\r\n  }\r\n});\r\n\r\nclass GroupManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // Array of topic members\r\n      members: props.members,\r\n      index: GroupManager.indexMembers(props.members),\r\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\r\n      contactFilter: '',\r\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\r\n      selectedContacts: GroupManager.selectedContacts(props.members)\r\n    };\r\n\r\n    this.handleContactSelected = this.handleContactSelected.bind(this);\r\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\r\n    this.handleContactFilter = this.handleContactFilter.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  static indexMembers(members) {\r\n    let index = {};\r\n    members.map((m) => {\r\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\r\n    });\r\n    return index;\r\n  }\r\n\r\n  static staticMembers(members, keepInitial, requiredMember) {\r\n    let stat = [];\r\n    members.map((m) => {\r\n      if (keepInitial || m.user == requiredMember) {\r\n        stat.push(m.user);\r\n      }\r\n    });\r\n    return stat;\r\n  }\r\n\r\n  static selectedContacts(members) {\r\n    let sel = [];\r\n    members.map((m) => {\r\n      sel.push(m.user);\r\n    });\r\n    return sel;\r\n  }\r\n\r\n  handleContactSelected(userId, index) {\r\n    let status = this.state.index[userId];\r\n    if (status) {\r\n      if (status.present) {\r\n        // Prevent duplicate members\r\n        return;\r\n      }\r\n      status.delta += 1;\r\n      status.present = true;\r\n    } else {\r\n      status = {delta: 1, present: true};\r\n    }\r\n\r\n    let m = this.state.members.slice();\r\n    m.push(this.props.contacts[index]);\r\n\r\n    const sel = GroupManager.selectedContacts(m);\r\n\r\n    const i = this.state.index;\r\n    i[userId] = status;\r\n\r\n    this.setState({members: m, index: i, selectedContacts: sel});\r\n  }\r\n\r\n  handleMemberRemoved(userId, index) {\r\n    const status = this.state.index[userId];\r\n    if (!status || !status.present) {\r\n      return;\r\n    }\r\n    status.present = false;\r\n    status.delta -= 1;\r\n\r\n    let m = this.state.members.slice();\r\n    m.splice(index, 1);\r\n\r\n    const sel = GroupManager.selectedContacts(m);\r\n\r\n    const i = this.state.index;\r\n    i[userId] = status;\r\n\r\n    this.setState({members: m, index: i, selectedContacts: sel});\r\n  }\r\n\r\n  handleContactFilter(val) {\r\n    const {formatMessage} = this.props.intl;\r\n    const msg = !val ?\r\n      formatMessage(messages.no_contacts) :\r\n      formatMessage(messages.contacts_not_found_short, {query: val});\r\n\r\n    this.setState({contactFilter: val, noContactsMessage: msg});\r\n  }\r\n\r\n  static doContactFiltering(filter, values) {\r\n    if (filter) {\r\n      for (let i=0; i<values.length; i++) {\r\n        if (values[i].indexOf(filter) >= 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleSubmit() {\r\n    var instance = this;\r\n    var members = [];\r\n    var added = [];\r\n    var removed = [];\r\n\r\n    var keys = Object.keys(this.state.index);\r\n    keys.map(function(k) {\r\n      if (instance.state.index[k].present) {\r\n        members.push(k);\r\n      }\r\n\r\n      if (instance.state.index[k].delta > 0) {\r\n        added.push(k);\r\n      } else if (instance.state.index[k].delta < 0) {\r\n        removed.push(k);\r\n      }\r\n    });\r\n    this.props.onSubmit(members, added, removed);\r\n  }\r\n\r\n  handleCancel() {\r\n    this.props.onCancel();\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    return (\r\n      <div id=\"group-manager\">\r\n        <div className=\"panel-form-row\">\r\n          <label className=\"small\">\r\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\r\n          </label>\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <ChipInput\r\n            chips={this.state.members}\r\n            staticMembers={this.state.staticMembers}\r\n            prompt=\"add members\"\r\n            filterFunc={this.handleContactFilter}\r\n            onChipRemoved={this.handleMemberRemoved} />\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <label className=\"small\">\r\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\r\n              description=\"Section title [All Contacts]\" />\r\n          </label>\r\n        </div>\r\n        <ContactList\r\n          contacts={this.props.contacts}\r\n          myUserId={this.props.myUserId}\r\n          topicSelected={this.state.selectedContacts}\r\n          filter={this.state.contactFilter}\r\n          filterFunc={GroupManager.doContactFiltering}\r\n          emptyListMessage={this.state.noContactsMessage}\r\n          showOnline={false}\r\n          showUnread={false}\r\n          onTopicSelected={this.handleContactSelected} />\r\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\r\n          <button className=\"primary\" onClick={this.handleSubmit}>\r\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\r\n          </button>\r\n          <button className=\"secondary\" onClick={this.handleCancel}>\r\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(GroupManager);\r\n","// Password with a visiblity toggle.\r\nimport React from 'react';\r\n\r\nexport default class VisiblePassword extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: this.props.value,\r\n      visible: false\r\n    };\r\n\r\n    this.handleVisibility = this.handleVisibility.bind(this);\r\n    this.handeTextChange = this.handeTextChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\r\n  }\r\n\r\n  handeTextChange(e) {\r\n    this.setState({value: e.target.value});\r\n    if (this.props.onChange) {\r\n      this.props.onChange(e);\r\n    }\r\n  }\r\n\r\n  handleVisibility(e) {\r\n    e.preventDefault();\r\n    this.setState({visible: !this.state.visible});\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.keyCode == 27) {\r\n      // Escape pressed\r\n      this.setState({value: this.props.value, visible: false});\r\n      if (this.props.onFinished) {\r\n        this.props.onFinished();\r\n      }\r\n    } else if (e.keyCode == 13) {\r\n      // Enter pressed\r\n      this.handleEditingFinished();\r\n    }\r\n  }\r\n\r\n  handleEditingFinished(e) {\r\n    if (e) {\r\n      let currentTarget = e.currentTarget;\r\n      setTimeout(() => {\r\n        if (!currentTarget.contains(document.activeElement)) {\r\n          if (this.props.onFinished) {\r\n            this.props.onFinished(this.state.value);\r\n          }\r\n        }\r\n      }, 0);\r\n    } else if (this.props.onFinished) {\r\n      this.props.onFinished(this.state.value.trim());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div tabIndex=\"-1\" className=\"group-focus\"\r\n        onBlur={this.handleEditingFinished}>\r\n        <input className=\"with-visibility\"\r\n          type={this.state.visible ? \"text\" : \"password\"}\r\n          value={this.state.value}\r\n          placeholder={this.props.placeholder}\r\n          required={this.props.required ? 'required' : ''}\r\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\r\n          autoComplete={this.props.autoComplete}\r\n          onChange={this.handeTextChange}\r\n          onKeyDown={this.handleKeyDown} />\r\n        <span onClick={this.handleVisibility}>\r\n          <i className=\"material-icons clickable light-gray\">\r\n            {this.state.visible ? 'visibility' : 'visibility_off'}\r\n          </i>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport VisiblePassword from './visible-password.jsx';\r\n\r\nexport default class InPlaceEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      active: props.active,\r\n      initialValue: props.value || '',\r\n      value: props.value || ''\r\n    };\r\n\r\n    this.handeTextChange = this.handeTextChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleStartEditing = this.handleStartEditing.bind(this);\r\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\r\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // If text has changed while in read mode, update text and discard changes.\r\n    // Ignore update if in edit mode.\r\n    const newValue = this.props.value || '';\r\n    if (prevState.initialValue != newValue && !prevState.active) {\r\n      this.setState({\r\n        initialValue: newValue,\r\n        value: newValue\r\n      });\r\n    }\r\n  }\r\n\r\n  handeTextChange(e) {\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.keyCode === 27) {\r\n      // Escape pressed\r\n      this.setState({value: this.props.value, active: false});\r\n    } else if (e.keyCode === 13) {\r\n      // Enter pressed\r\n      this.handleEditingFinished(e);\r\n    }\r\n  }\r\n\r\n  handleStartEditing() {\r\n    if (!this.props.readOnly) {\r\n      ReactDOM.findDOMNode(this).focus();\r\n      this.setState({active: true});\r\n    }\r\n  }\r\n\r\n  handleEditingFinished(event) {\r\n    if (this.props.required && !event.target.checkValidity()) {\r\n      // Empty input\r\n      this.setState({value: this.props.value, active: false});\r\n      return;\r\n    }\r\n    this.setState({active: false});\r\n    let value = this.state.value.trim();\r\n    if ((value || this.props.value) && (value !== this.props.value)) {\r\n      this.props.onFinished(value);\r\n    }\r\n  }\r\n\r\n  handlePasswordFinished(value) {\r\n    this.setState({active: false});\r\n    if (value && (value !== this.props.value)) {\r\n      this.props.onFinished(value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.active) {\r\n      var fieldType = this.props.type || 'text';\r\n    } else {\r\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\r\n      var spanClass = 'in-place-edit' +\r\n        (this.props.readOnly ? ' disabled' : '');\r\n      if (!spanText) {\r\n        spanText = this.props.placeholder;\r\n        spanClass += ' placeholder';\r\n      }\r\n      if (spanText.length > 20) {\r\n        // FIXME: this is wrong for RTL languages.\r\n        spanText = spanText.substring(0, 19) + '...';\r\n      }\r\n    }\r\n    return (\r\n      this.state.active ?\r\n        (fieldType == 'password' ?\r\n          <VisiblePassword\r\n            value={this.state.value}\r\n            placeholder={this.props.placeholder}\r\n            required={this.props.required ? 'required' : ''}\r\n            autoComplete={this.props.autoComplete}\r\n            autoFocus={true}\r\n            onFinished={this.handlePasswordFinished}/>\r\n          :\r\n          <input type={fieldType}\r\n            value={this.state.value}\r\n            placeholder={this.props.placeholder}\r\n            required={this.props.required ? 'required' : ''}\r\n            autoComplete={this.props.autoComplete}\r\n            autoFocus\r\n            onChange={this.handeTextChange}\r\n            onKeyDown={this.handleKeyDown}\r\n            onBlur={this.handleEditingFinished} />\r\n        )\r\n        :\r\n        <span className={spanClass} onClick={this.handleStartEditing}>\r\n          <span className=\"content\">{spanText}</span>\r\n        </span>\r\n    );\r\n  }\r\n};\r\n","// Toggle [Title text >] -> [Title text v]\r\n\r\nimport React from 'react';\r\n\r\nexport default class MoreButton extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: props.open\r\n    };\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleToggle() {\r\n    const open = !this.state.open;\r\n    this.setState({open: open});\r\n    if (this.props.onToggle) {\r\n      this.props.onToggle(open);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\r\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\r\n        <i className=\"material-icons\">chevron_right</i>}\r\n      </label>);\r\n  }\r\n}\r\n","// PermissionsEditor: Component for editing permissions\r\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport CheckBox from './checkbox.jsx';\r\nimport Contact from './contact.jsx';\r\n\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\n\r\n// Translatable permission names.\r\nconst messages = defineMessages({\r\n  joiner: {\r\n    id: 'permission_join',\r\n    defaultMessage: \"Join ({val})\",\r\n    description: 'Name of J permission'\r\n  },\r\n  reader: {\r\n    id: 'permission_read',\r\n    defaultMessage: \"Read ({val})\",\r\n    description: 'Name of R permission'\r\n  },\r\n  writer: {\r\n    id: 'permission_write',\r\n    defaultMessage: \"Write ({val})\",\r\n    description: 'Name of W permission'\r\n  },\r\n  preser: {\r\n    id: 'permission_pres',\r\n    defaultMessage: \"Get notified ({val})\",\r\n    description: 'Name of P permission'\r\n  },\r\n  approver: {\r\n    id: 'permission_admin',\r\n    defaultMessage: \"Approve ({val})\",\r\n    description: 'Name of A permission'\r\n  },\r\n  sharer: {\r\n    id: 'permission_share',\r\n    defaultMessage: \"Share ({val})\",\r\n    description: 'Name of S permission'\r\n  },\r\n  deleter: {\r\n    id: 'permission_delete',\r\n    defaultMessage: \"Delete ({val})\",\r\n    description: 'Name of D permission'\r\n  },\r\n  owner: {\r\n    id: 'permission_owner',\r\n    defaultMessage: \"Owner ({val})\",\r\n    description: 'Name of O permission'\r\n  }\r\n});\r\n\r\nclass PermissionsEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mode: (props.mode || '').replace('N', '')\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  handleChange(val) {\r\n    let mode = this.state.mode;\r\n    let idx = mode.indexOf(val);\r\n    if (idx == -1) {\r\n      mode += val;\r\n    } else {\r\n      mode = mode.replace(val, '');\r\n    }\r\n    this.setState({mode: mode});\r\n  }\r\n\r\n  handleSubmit() {\r\n    // Normalize string, otherwise cannot check if mode has changed.\r\n    var mode = (this.state.mode || 'N').split('').sort().join('');\r\n    var before = (this.props.mode || 'N').split('').sort().join('')\r\n    if (mode !== before) {\r\n      this.props.onSubmit(mode);\r\n    } else {\r\n      this.props.onCancel();\r\n    }\r\n  }\r\n\r\n  handleCancel() {\r\n    this.props.onCancel();\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    const all = 'JRWPASDO';\r\n    const names = {\r\n      'J': formatMessage(messages.joiner, {val: 'J'}),\r\n      'R': formatMessage(messages.reader, {val: 'R'}),\r\n      'W': formatMessage(messages.writer, {val: 'W'}),\r\n      'P': formatMessage(messages.preser, {val: 'P'}),\r\n      'A': formatMessage(messages.approver, {val: 'A'}),\r\n      'S': formatMessage(messages.sharer, {val: 'S'}),\r\n      'D': formatMessage(messages.deleter, {val: 'D'}),\r\n      'O': formatMessage(messages.owner, {val: 'O'})\r\n    };\r\n\r\n    let skip = this.props.skip || '';\r\n    let mode = this.state.mode;\r\n    let compare = (this.props.compare || '').replace('N', '');\r\n    let items = [];\r\n    for (let i=0; i<all.length; i++) {\r\n      let c = all.charAt(i);\r\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\r\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\r\n        continue;\r\n      }\r\n      items.push(\r\n        <tr key={c}>\r\n          <td>{names[c]}</td>\r\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\r\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\r\n            :\r\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\r\n          }</td>{this.props.compare ? <td className=\"checkbox\">\r\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\r\n          </td> : null}\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"panel-form-column\">\r\n        {this.props.userTitle ?\r\n          <ul className=\"contact-box\"><Contact\r\n            item={this.props.item}\r\n            title={this.props.userTitle}\r\n            avatar={makeImageDataUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\r\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\r\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\r\n        <table className=\"permission-editor\">\r\n        {this.props.compare ?\r\n          <thead><tr>\r\n            <th></th><th>{this.props.modeTitle}</th>\r\n            <th>{this.props.compareTitle}</th>\r\n          </tr></thead> :\r\n          null}\r\n        <tbody>\r\n          {items}\r\n        </tbody></table>\r\n        <br />\r\n        <div className=\"dialog-buttons\">\r\n          <button className=\"outline\" onClick={this.handleCancel}>\r\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\r\n          </button>\r\n          <button className=\"primary\" onClick={this.handleSubmit}>\r\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(PermissionsEditor);\r\n","// TagManager: edit topic or user tags.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport ChipInput from './chip-input.jsx';\r\n\r\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\r\nimport { arrayEqual } from '../lib/utils.js';\r\n\r\nexport default class TagManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tags: this.props.tags,\r\n      tagInput: '',\r\n      activated: this.props.activated\r\n    };\r\n\r\n    this.handleTagInput = this.handleTagInput.bind(this);\r\n    this.handleAddTag = this.handleAddTag.bind(this);\r\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\r\n      return {tags: nextProps.tags};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleTagInput(text) {\r\n    this.setState({tagInput: text});\r\n    if (text.length > 0) {\r\n      const last = text[text.length-1];\r\n      if (text[0] == '\"') {\r\n        // This is a quoted string.\r\n        if (text.length > 1 && last == '\"') {\r\n          this.handleAddTag(text.substring(1, text.length-1));\r\n        }\r\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\r\n        // User entered ',', ' ' or ';'\r\n        this.handleAddTag(text.substring(0, text.length-1).trim());\r\n      }\r\n    }\r\n  }\r\n\r\n  handleAddTag(tag) {\r\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\r\n\r\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\r\n      const tags = this.state.tags.slice(0);\r\n      tags.push(tag);\r\n\r\n      this.setState({tags: tags, tagInput: ''});\r\n      if (this.props.onTagsChanged) {\r\n        this.props.onTagsChanged(tags);\r\n      }\r\n      return tags;\r\n    }\r\n    return this.state.tags;\r\n  }\r\n\r\n  handleRemoveTag(tag, index) {\r\n    const tags = this.state.tags.slice(0);\r\n    tags.splice(index, 1);\r\n    this.setState({tags: tags});\r\n    if (this.props.onTagsChanged) {\r\n      this.props.onTagsChanged(tags);\r\n    }\r\n  }\r\n\r\n  handleSubmit() {\r\n    // Add unprocessed input to tags, submit the list.\r\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\r\n    this.setState({activated: false, tags: this.props.tags});\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\r\n    if (this.props.onCancel) {\r\n      this.props.onCancel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\r\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\r\n\r\n    let tags = [];\r\n    if (this.state.activated) {\r\n      this.state.tags.map((tag) => {\r\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\r\n      });\r\n    } else {\r\n      this.state.tags.map((tag) => {\r\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\r\n      });\r\n      if (tags.length == 0) {\r\n        tags = (\r\n          <i>\r\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\r\n          </i>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"panel-form-column\">\r\n        <div className=\"panel-form-row\">\r\n          <label className=\"small\">{this.props.title}</label>\r\n        </div>\r\n        {this.state.activated ?\r\n        <div>\r\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\r\n            description=\"Tag editor prompt when no tags are found.\">{\r\n            (add_tags_prompt) => <ChipInput\r\n              chips={tags}\r\n              avatarDisabled={true}\r\n              prompt={add_tags_prompt}\r\n              onEnter={this.handleAddTag}\r\n              onFocusLost={this.handleAddTag}\r\n              onCancel={this.handleCancel}\r\n              onChipRemoved={this.handleRemoveTag}\r\n              filterFunc={this.handleTagInput} />\r\n          }</FormattedMessage>\r\n          {this.props.onSubmit || this.props.onCancel ?\r\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\r\n              <button className=\"outline\" onClick={this.handleCancel}>\r\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\r\n              </button>\r\n              <button className=\"primary\" onClick={this.handleSubmit}>\r\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\r\n              </button>\r\n            </div>\r\n          : null}\r\n        </div>\r\n        :\r\n        <div className=\"quoted\">\r\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\r\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\r\n              description=\"Section title for the list of tags\" />\r\n          </a>\r\n          <>{tags}</>\r\n        </div>\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// InfoView: panel with topic/user info.\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\r\nimport CheckBox from '../widgets/checkbox.jsx';\r\nimport ContactList from '../widgets/contact-list.jsx';\r\nimport ErrorPanel from '../widgets/error-panel.jsx';\r\nimport GroupManager from '../widgets/group-manager.jsx';\r\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\r\nimport MenuCancel from '../widgets/menu-cancel.jsx';\r\nimport MoreButton from '../widgets/more-button.jsx';\r\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\r\nimport TagManager from '../widgets/tag-manager.jsx';\r\n\r\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\r\n\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\nimport { arrayEqual, theCard } from '../lib/utils.js';\r\n\r\nconst messages = defineMessages({\r\n  requested: {\r\n    id: 'requested_permissions',\r\n    defaultMessage: 'Requested',\r\n    description: 'Title for permissions'\r\n  },\r\n  granted: {\r\n    id: 'granted_permissions',\r\n    defaultMessage: 'Granted',\r\n    description: 'Title for permissions'\r\n  },\r\n  edit_permissions: {\r\n    id: 'menu_item_edit_permissions',\r\n    defaultMessage: 'Edit permissions',\r\n    description: 'Menu item [Edit permissions]'\r\n  },\r\n  other_user: {\r\n    id: 'label_other_user',\r\n    defaultMessage: 'Other',\r\n    description: 'Label for the other user when the user is unnamed'\r\n  },\r\n  clear_messages: {\r\n    id: 'action_clear_messages',\r\n    defaultMessage: 'Clear Messages',\r\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\r\n  },\r\n  clear_messages_warning: {\r\n    id: 'clear_messages_warning',\r\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\r\n    description: 'Alert dialog warning when deleting all messages.'\r\n  },\r\n  delete_messages: {\r\n    id: 'action_delete_messages',\r\n    defaultMessage: 'Clear Messages for All',\r\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\r\n  },\r\n  delete_messages_warning: {\r\n    id: 'delete_messages_warning',\r\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\r\n    description: 'Alert dialog warning when hard-deleting all messages.'\r\n  },\r\n  topic_delete: {\r\n    id: 'topic_delete',\r\n    defaultMessage: 'Delete Conversation',\r\n    description: 'Alert title when deleting the topic.'\r\n  },\r\n  topic_delete_warning: {\r\n    id: 'topic_delete_warning',\r\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\r\n    description: 'Alert warning when deleting entire topic'\r\n  },\r\n  leave_chat: {\r\n    id: 'action_leave_chat',\r\n    defaultMessage: 'Leave Conversation',\r\n    description: 'Flat button [Leave Conversation]'\r\n  },\r\n  leave_chat_warning: {\r\n    id: 'leave_chat_warning',\r\n    defaultMessage: 'Are you sure you want to leave this conversation?',\r\n    description: 'Alert dialog warning when unsubscribing from a chat.'\r\n  },\r\n  block_contact: {\r\n    id: 'action_block_contact',\r\n    defaultMessage: \"Block Contact\",\r\n    description: \"Flat button [Block Contact]\"\r\n  },\r\n  block_contact_warning: {\r\n    id: 'block_contact_warning',\r\n    defaultMessage: 'Are you sure you want to block this contact?',\r\n    description: 'Alert dialog warning when blocking a contact.'\r\n  },\r\n  report_chat: {\r\n    id: 'action_report_chat',\r\n    defaultMessage: 'Report Conversation',\r\n    description: 'Flat button [Report Group]'\r\n  },\r\n  report_chat_warning: {\r\n    id: 'report_chat_warning',\r\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\r\n    description: 'Alert dialog warning when reporting a conversation for abuse'\r\n  },\r\n});\r\n\r\nclass InfoView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      topic: null,\r\n      owner: false,\r\n      admin: false,\r\n      sharer: false,\r\n      deleter: false,\r\n      muted: false,\r\n      address: null,\r\n      groupTopic: undefined,\r\n      channel: undefined,\r\n      fullName: undefined,\r\n      avatar: null,\r\n      private: null,\r\n      selectedContact: null,\r\n      access: null,\r\n      modeGiven: null,\r\n      modeWant: null,\r\n      modeGiven2: null, // P2P topic, the other user mode given\r\n      modeWant2: null,  // P2P topic, the other user mode want\r\n      auth: null,\r\n      anon: null,\r\n      contactList: [],\r\n      tags: [],\r\n      showMemberPanel: false,\r\n      showPermissionEditorFor: undefined,\r\n      moreInfoExpanded: false,\r\n      previousMetaDesc: undefined,\r\n      previousSubsUpdated: undefined,\r\n      previousTagsUpdated: undefined\r\n    };\r\n\r\n    this.resetSubs = this.resetSubs.bind(this);\r\n    this.resetDesc = this.resetDesc.bind(this);\r\n    this.onMetaDesc = this.onMetaDesc.bind(this);\r\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\r\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\r\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\r\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\r\n    this.handleImageChanged = this.handleImageChanged.bind(this);\r\n    this.handleMuted = this.handleMuted.bind(this);\r\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\r\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\r\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\r\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\r\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\r\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\r\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\r\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\r\n    this.handleLeave = this.handleLeave.bind(this);\r\n    this.handleBlock = this.handleBlock.bind(this);\r\n    this.handleReport = this.handleReport.bind(this);\r\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\r\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\r\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\r\n    this.handleContextMenu = this.handleContextMenu.bind(this);\r\n  }\r\n\r\n  // No need to separately handle component mount.\r\n  componentDidUpdate(props) {\r\n    const topic = this.props.tinode.getTopic(props.topic);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    if (this.onMetaDesc != topic.onMetaDesc) {\r\n      this.previousMetaDesc = topic.onMetaDesc;\r\n      topic.onMetaDesc = this.onMetaDesc;\r\n\r\n      this.previousSubsUpdated = topic.onSubsUpdated;\r\n      topic.onSubsUpdated = this.onSubsUpdated;\r\n\r\n      if (topic.getType() == 'grp') {\r\n        this.previousTagsUpdated = topic.onTagsUpdated;\r\n        topic.onTagsUpdated = this.onTagsUpdated;\r\n      } else {\r\n        this.previousTagsUpdated = undefined;\r\n      }\r\n    }\r\n\r\n    if (this.state.topic != props.topic) {\r\n      this.setState({topic: props.topic});\r\n      this.resetDesc(topic, props);\r\n      this.resetSubs(topic, props);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const topic = this.props.tinode.getTopic(this.props.topic);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n    this.setState({topic: null});\r\n    topic.onMetaDesc = this.previousMetaDesc;\r\n    topic.onSubsUpdated = this.previousSubsUpdated;\r\n    topic.onTagsUpdated = this.previousTagsUpdated;\r\n  }\r\n\r\n  resetSubs(topic, props) {\r\n    const newState = {contactList: []};\r\n    if (topic.getType() == 'p2p') {\r\n      // Fetch the other party in the p2p conversation.\r\n      // Topic may not be ready yet, so check if user is found.\r\n      const user2 = topic.subscriber(props.topic);\r\n      if (user2) {\r\n        newState.modeGiven2 = user2.acs.getGiven();\r\n        newState.modeWant2 = user2.acs.getWant();\r\n      } else {\r\n        newState.modeGiven2 = NO_ACCESS_MODE;\r\n        newState.modeWant2 = NO_ACCESS_MODE;\r\n      }\r\n    } else {\r\n      topic.subscribers((sub) => {\r\n        newState.contactList.push(sub);\r\n      }, this);\r\n    }\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetDesc(topic, props) {\r\n    const defacs = topic.getDefaultAccess() || {};\r\n    const acs = topic.getAccessMode();\r\n\r\n    this.setState({\r\n      owner: acs && acs.isOwner(),\r\n      admin: acs && acs.isAdmin(),\r\n      sharer: acs && acs.isSharer(),\r\n      deleter: acs && acs.isDeleter(),\r\n      muted: acs && acs.isMuted(),\r\n\r\n      fullName: topic.public ? topic.public.fn : undefined,\r\n      avatar: makeImageDataUrl(topic.public ? topic.public.photo : null),\r\n      private: topic.private ? topic.private.comment : null,\r\n      address: topic.name,\r\n      groupTopic: topic.isGroupType(),\r\n      channel: topic.isChannelType(),\r\n      showMemberPanel: false,\r\n      access: acs ? acs.getMode() : undefined,\r\n      modeGiven: acs ? acs.getGiven() : undefined,\r\n      modeWant: acs ? acs.getWant() : undefined,\r\n      auth: defacs.auth,\r\n      anon: defacs.anon\r\n    });\r\n\r\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\r\n      // Requesting tags: owner is editing the topic.\r\n      topic.getMeta(topic.startMetaQuery().withTags().build());\r\n    }\r\n  }\r\n\r\n  onMetaDesc(desc) {\r\n    const topic = this.props.tinode.getTopic(this.props.topic);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n    this.resetDesc(topic, this.props);\r\n\r\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\r\n      this.previousMetaDesc(desc);\r\n    }\r\n  }\r\n\r\n  onSubsUpdated(subs) {\r\n    const topic = this.props.tinode.getTopic(this.props.topic);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n    this.resetSubs(topic, this.props);\r\n\r\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\r\n      this.previousSubsUpdated(subs);\r\n    }\r\n  }\r\n\r\n  onTagsUpdated(tags) {\r\n    this.setState({tags: tags});\r\n\r\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\r\n      this.previousTagsUpdated();\r\n    }\r\n  }\r\n\r\n  handleFullNameUpdate(fn) {\r\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\r\n    if (this.state.fullName !== fn) {\r\n      this.setState({fullName: fn});\r\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\r\n    }\r\n  }\r\n\r\n  handlePrivateUpdate(comment) {\r\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\r\n    if (this.state.private !== comment) {\r\n      this.setState({private: comment});\r\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\r\n    }\r\n  }\r\n\r\n  handleImageChanged(img) {\r\n    this.setState({avatar: img});\r\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\r\n  }\r\n\r\n  handleMuted(ignored, checked) {\r\n    this.setState({muted: checked});\r\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\r\n  }\r\n\r\n  handlePermissionsChanged(perm) {\r\n    switch (this.state.showPermissionEditorFor) {\r\n      case 'auth':\r\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\r\n        break;\r\n      case 'anon':\r\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\r\n        break;\r\n      case 'mode':\r\n      case 'want':\r\n        this.props.onChangePermissions(this.props.topic, perm);\r\n        break;\r\n      case 'given':\r\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\r\n        break;\r\n      case 'user':\r\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\r\n        break;\r\n    }\r\n\r\n    this.setState({showPermissionEditorFor: undefined});\r\n  }\r\n\r\n  handleLaunchPermissionsEditor(which, uid) {\r\n    const {formatMessage} = this.props.intl;\r\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\r\n    switch (which) {\r\n      case 'mode':\r\n        toEdit = this.state.access;\r\n        break;\r\n      case 'want':\r\n        toEdit = this.state.modeWant;\r\n        toCompare = this.state.modeGiven;\r\n        if (this.state.owner) {\r\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\r\n          toSkip = 'O';\r\n        } else {\r\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\r\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\r\n          if (this.state.channel) {\r\n            // Channels are read-only.\r\n            toSkip += 'W';\r\n          }\r\n        }\r\n        titleEdit = formatMessage(messages.requested);\r\n        titleCompare = formatMessage(messages.granted);\r\n        break;\r\n      case 'given':\r\n        toEdit = this.state.modeGiven2;\r\n        toCompare = this.state.modeWant2;\r\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\r\n        titleEdit = formatMessage(messages.granted);\r\n        titleCompare = formatMessage(messages.requested);\r\n        break;\r\n      case 'auth':\r\n        toEdit = this.state.auth;\r\n        toSkip = 'O';\r\n        break;\r\n      case 'anon':\r\n        toEdit = this.state.anon;\r\n        toSkip = 'O';\r\n        break;\r\n      case 'user': {\r\n        const topic = this.props.tinode.getTopic(this.props.topic);\r\n        if (!topic) {\r\n          return;\r\n        }\r\n        const user = topic.subscriber(uid);\r\n        if (!user || !user.acs) {\r\n          return;\r\n        }\r\n        toEdit = user.acs.getGiven();\r\n        toCompare = user.acs.getWant();\r\n        toSkip = this.state.owner ? '' : 'O';\r\n        titleEdit = formatMessage(messages.granted);\r\n        titleCompare = formatMessage(messages.requested);\r\n        if (user.public) {\r\n          userTitle = user.public.fn;\r\n          userAvatar = user.public.photo;\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\r\n        break;\r\n    }\r\n    this.setState({\r\n      showPermissionEditorFor: which,\r\n      userPermissionsEdited: uid,\r\n      userPermissionsTitle: userTitle,\r\n      userPermissionsAvatar: userAvatar,\r\n      editedPermissions: toEdit,\r\n      immutablePermissions: toCompare,\r\n      editedPermissionsTitle: titleEdit,\r\n      immutablePermissionsTitle: titleCompare,\r\n      editedPermissionsSkipped: toSkip,\r\n    });\r\n  }\r\n\r\n  handleHidePermissionsEditor() {\r\n    this.setState({showPermissionEditorFor: undefined});\r\n  }\r\n\r\n  handleShowAddMembers(e) {\r\n    e.preventDefault();\r\n    this.props.onInitFind();\r\n    this.setState({showMemberPanel: true});\r\n  }\r\n\r\n  handleHideAddMembers() {\r\n    this.setState({showMemberPanel: false});\r\n  }\r\n\r\n  handleMemberUpdateRequest(members, added, removed) {\r\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\r\n    this.setState({showMemberPanel: false});\r\n  }\r\n\r\n  handleDeleteTopic(e) {\r\n    e.preventDefault();\r\n    const {formatMessage} = this.props.intl;\r\n    this.props.onShowAlert(\r\n      formatMessage(messages.topic_delete), // title\r\n      formatMessage(messages.topic_delete_warning), // content\r\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\r\n      null, // \"OK\"\r\n      true, // Show Reject button\r\n      null  // \"Cancel\"\r\n    );\r\n  }\r\n\r\n  handleDeleteMessages(e) {\r\n    e.preventDefault();\r\n    const {formatMessage} = this.props.intl;\r\n    this.props.onShowAlert(\r\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\r\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\r\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\r\n      null, // \"OK\"\r\n      true, // Show Reject button\r\n      null  // \"Cancel\"\r\n    );\r\n  }\r\n\r\n  handleLeave(e) {\r\n    e.preventDefault();\r\n    const {formatMessage} = this.props.intl;\r\n    this.props.onShowAlert(\r\n      formatMessage(messages.leave_chat), // title\r\n      formatMessage(messages.leave_chat_warning), // content\r\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\r\n      null, // \"OK\"\r\n      true, // Show Reject button\r\n      null  // \"Cancel\"\r\n    );\r\n  }\r\n\r\n  handleBlock(e) {\r\n    e.preventDefault();\r\n    const {formatMessage} = this.props.intl;\r\n    this.props.onShowAlert(\r\n      formatMessage(messages.block_contact), // title\r\n      formatMessage(messages.block_contact_warning), // content\r\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\r\n      null, // \"OK\"\r\n      true, // Show Reject button\r\n      null  // \"Cancel\"\r\n    );\r\n  }\r\n\r\n  handleReport(e) {\r\n    e.preventDefault();\r\n    const {formatMessage} = this.props.intl;\r\n    this.props.onShowAlert(\r\n      formatMessage(messages.report_chat), // title\r\n      formatMessage(messages.report_chat_warning), // content\r\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\r\n      null, // \"OK\"\r\n      true, // Show Reject button\r\n      null  // \"Cancel\"\r\n    );\r\n  }\r\n\r\n  handleMemberSelected(uid) {\r\n    this.setState({selectedContact: uid});\r\n  }\r\n\r\n  handleMoreInfo(open) {\r\n    this.setState({moreInfoExpanded: open});\r\n  }\r\n\r\n  handleTagsUpdated(tags) {\r\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\r\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\r\n    }\r\n  }\r\n\r\n  handleContextMenu(params) {\r\n    const {formatMessage} = this.props.intl;\r\n    const instance = this;\r\n    const topic = this.props.tinode.getTopic(this.props.topic);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n    const user = topic.subscriber(params.topicName);\r\n    if (!user || !user.acs) {\r\n      return;\r\n    }\r\n\r\n    const menuItems = [\r\n      {title: formatMessage(messages.edit_permissions), handler: function() {\r\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\r\n      }},\r\n      'member_delete',\r\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\r\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\r\n    ];\r\n    this.props.showContextMenu({\r\n      topicName: this.props.topic,\r\n      x: params.x,\r\n      y: params.y,\r\n      user: params.topicName}, menuItems);\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n\r\n    return (\r\n      <div id=\"info-view\">\r\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\r\n          <div className=\"panel-title\" id=\"info-title\">\r\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\r\n          </div>\r\n          <div>\r\n            <MenuCancel onCancel={this.props.onCancel} />\r\n          </div>\r\n        </div>\r\n        {this.props.displayMobile ?\r\n          <ErrorPanel\r\n            level={this.props.errorLevel}\r\n            text={this.props.errorText}\r\n            onClearError={this.props.onError} /> : null}\r\n        {this.state.showMemberPanel ?\r\n          <GroupManager\r\n            members={this.state.contactList}\r\n            requiredMember={this.props.myUserId}\r\n            keepInitialMembers={!this.state.admin && !this.state.owner}\r\n            myUserId={this.props.myUserId}\r\n            contacts={this.props.searchableContacts}\r\n            onCancel={this.handleHideAddMembers}\r\n            onSubmit={this.handleMemberUpdateRequest} />\r\n          :\r\n        this.state.showPermissionEditorFor ?\r\n          <PermissionsEditor\r\n            mode={this.state.editedPermissions}\r\n            compare={this.state.immutablePermissions}\r\n            skip={this.state.editedPermissionsSkipped}\r\n            modeTitle={this.state.editedPermissionsTitle}\r\n            compareTitle={this.state.immutablePermissionsTitle}\r\n            userTitle={this.state.userPermissionsTitle}\r\n            item={this.state.userPermissionsEdited}\r\n            userAvatar={this.state.userPermissionsAvatar}\r\n            onSubmit={this.handlePermissionsChanged}\r\n            onCancel={this.handleHidePermissionsEditor}\r\n            />\r\n          :\r\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\r\n            <div className=\"panel-form-row\">\r\n              <div className=\"panel-form-column\">\r\n                <div><label className=\"small\">\r\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\r\n                    description=\"Label for editing topic name\" />\r\n                </label></div>\r\n                <div><InPlaceEdit\r\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\r\n                    readOnly={!this.state.owner}\r\n                    value={this.state.fullName}\r\n                    required={true}\r\n                    onFinished={this.handleFullNameUpdate} /></div>\r\n                <div>\r\n                  <label className=\"small\">\r\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\r\n                      description=\"Label for editing 'private'\" />\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <FormattedMessage id=\"private_editing_placeholder\"\r\n                    defaultMessage=\"Visible to you only\"\r\n                    description=\"Placeholder for editing 'private'\">{\r\n                    (private_placeholder) => <InPlaceEdit\r\n                      placeholder={private_placeholder}\r\n                      value={this.state.private}\r\n                      onFinished={this.handlePrivateUpdate} />\r\n                  }</FormattedMessage>\r\n                </div>\r\n              </div>\r\n              <AvatarUpload\r\n                avatar={this.state.avatar}\r\n                readOnly={!this.state.owner}\r\n                uid={this.props.topic}\r\n                title={this.state.fullName}\r\n                onImageChanged={this.handleImageChanged}\r\n                onError={this.props.onError} />\r\n            </div>\r\n            <div className=\"hr\" />\r\n            <div className=\"panel-form-column\">\r\n              <div className=\"panel-form-row\">\r\n                <label>\r\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\r\n                    description=\"Label for Muting/unmuting the topic\" />\r\n                </label>\r\n                <CheckBox name=\"P\" checked={this.state.muted}\r\n                  onChange={this.handleMuted} />\r\n              </div>\r\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\r\n                description=\"Action for showing more content\">{\r\n                (more) => <MoreButton\r\n                  title={more}\r\n                  open={this.state.moreInfoExpanded}\r\n                  onToggle={this.handleMoreInfo} />\r\n              }</FormattedMessage>\r\n              {this.state.moreInfoExpanded ?\r\n                <div className=\"panel-form-column\">\r\n                  <div className=\"panel-form-row\">\r\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\r\n                      description=\"Label for user address (ID)\" /></label>\r\n                    <tt>{this.state.address}</tt>\r\n                  </div>\r\n                  {this.state.groupTopic ?\r\n                    <div className=\"panel-form-row\">\r\n                      <label>\r\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\r\n                          description=\"Label for current user permissions\" />\r\n                      </label>\r\n                      <tt className=\"clickable\"\r\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\r\n                        {this.state.access}\r\n                      </tt>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                      <div>\r\n                        <label className=\"small\">\r\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\r\n                            description=\"Section title\" />\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"quoted\">\r\n                        <div>\r\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\r\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\r\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\r\n                          {this.state.access}\r\n                        </tt></div>\r\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\r\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\r\n                          {this.state.modeGiven2}\r\n                          </tt>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\r\n                  <div>\r\n                    <div>\r\n                      <label className=\"small\">\r\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\r\n                          description=\"Section title\" />\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"quoted\">\r\n                      <div>Auth: {this.state.admin ?\r\n                        <tt className=\"clickable\"\r\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\r\n                          {this.state.auth}\r\n                        </tt>\r\n                        :\r\n                        <tt>{this.state.auth}</tt>\r\n                      }\r\n                      </div>\r\n                      <div>Anon: {this.state.admin ?\r\n                        <tt className=\"clickable\"\r\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\r\n                          {this.state.anon}\r\n                        </tt>\r\n                        :\r\n                        <tt>{this.state.anon}</tt>\r\n                      }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  :\r\n                  null\r\n                }\r\n                </div>\r\n              :\r\n              null\r\n              }\r\n            </div>\r\n            <div className=\"hr\" />\r\n            {this.state.owner ?\r\n              <>\r\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\r\n                  description=\"Section title for TagManager\">{\r\n                  (tags) => <TagManager\r\n                    title={tags}\r\n                    tags={this.state.tags}\r\n                    activated={false}\r\n                    tinode={this.props.tinode}\r\n                    onSubmit={this.handleTagsUpdated} />\r\n                }</FormattedMessage>\r\n                <div className=\"hr\" />\r\n              </>\r\n              :\r\n              null\r\n            }\r\n            <div className=\"panel-form-column\">\r\n              {!this.state.channel ?\r\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\r\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\r\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\r\n                  }\r\n                </a>\r\n                :\r\n                null\r\n              }\r\n              {this.state.owner ?\r\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\r\n                  <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\r\n                </a>\r\n                :\r\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\r\n                  <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\r\n                </a>\r\n              }\r\n              {!this.state.groupTopic ?\r\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\r\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\r\n                </a>\r\n                :\r\n                null\r\n              }\r\n              {!this.state.owner ?\r\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\r\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\r\n                </a>\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n            {this.state.groupTopic && this.state.sharer ?\r\n              <>\r\n                <div className=\"hr\" />\r\n                <div className=\"panel-form-column\">\r\n                  <div className=\"panel-form-row\">\r\n                    <label className=\"small\">\r\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\r\n                        description=\"Section title or label\" />\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"panel-form-row\">\r\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\r\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\r\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\r\n                    </a>\r\n                  </div>\r\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\r\n                    description=\"Shown in place of group members\">{\r\n                    (no_members) => <ContactList\r\n                      contacts={this.state.contactList}\r\n                      myUserId={this.props.myUserId}\r\n                      emptyListMessage={no_members}\r\n                      topicSelected={this.state.selectedContact}\r\n                      showOnline={false}\r\n                      showUnread={false}\r\n                      showMode={true}\r\n                      noScroll={true}\r\n                      onTopicSelected={this.handleMemberSelected}\r\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\r\n                    />\r\n                  }</FormattedMessage>\r\n                </div>\r\n              </>\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(InfoView);\r\n","// File uload/download progress indicator with a cancel inside.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nexport default class FileProgress extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"uploader\">\r\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\r\n        {this.props.progress < 0.999 ?\r\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\r\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\r\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\r\n          </a>\r\n          :\r\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\r\n            description=\"Notification that upload is finishing\" />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport FileProgress from './file-progress.jsx';\r\nimport { bytesToHumanSize } from '../lib/strformat.js';\r\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\r\n\r\nexport default class Attachment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      downloader: null,\r\n      progress: 0\r\n    };\r\n\r\n    this.downloadFile = this.downloadFile.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  downloadFile(url, filename, mimetype) {\r\n    if (!url) {\r\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\r\n      return;\r\n    }\r\n\r\n    const downloader = this.props.tinode.getLargeFileHelper();\r\n    this.setState({downloader: downloader});\r\n    downloader.download(url, filename, mimetype,\r\n      (loaded) => {\r\n        this.setState({progress: loaded / this.props.size});\r\n      },\r\n      (err) => {\r\n        this.props.onError(err, 'err');\r\n      }\r\n    ).then(() => {\r\n      this.setState({downloader: null, progress: 0});\r\n    }).catch((err) => {\r\n      if (err) {\r\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\r\n      }\r\n      this.setState({downloader: null, progress: 0});\r\n    });\r\n  }\r\n\r\n  handleCancel() {\r\n    if (this.props.uploading) {\r\n      this.props.onCancelUpload();\r\n    } else if (this.state.downloader) {\r\n      this.state.downloader.cancel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let filename = this.props.filename || 'file_attachment';\r\n    if (filename.length > 36) {\r\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\r\n    }\r\n    let size = this.props.size > 0 ?\r\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\r\n      null;\r\n\r\n    // Detect if the download URL is relative or absolute.\r\n    // If the URL is relative use LargeFileHelper to attach authentication\r\n    // credentials to the request.\r\n    let url, helperFunc;\r\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\r\n      // Relative URL. Use download helper.\r\n      url = '#';\r\n      helperFunc = (e) => {\r\n        e.preventDefault();\r\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\r\n      };\r\n    } else {\r\n      url = sanitizeUrl(this.props.downloadUrl);\r\n      helperFunc = null;\r\n    }\r\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\r\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\r\n    return (\r\n      <div className=\"attachment\">\r\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\r\n        <div className=\"flex-column\">\r\n          <div>{filename} {size}</div>\r\n          {this.props.uploading || this.state.downloader ?\r\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\r\n              onCancel={this.handleCancel} />\r\n            :\r\n            <div>{url ?\r\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\r\n              :\r\n              <span className=\"light-gray\">{downloadWidget}</span>\r\n            }</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Image view with progress bar and a cancel button.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport FileProgress from './file-progress.jsx';\r\n\r\nexport default class UploadingImage extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inline-image\">\r\n        {React.createElement('img', this.props)}\r\n        <div className=\"rounded-container\">\r\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Single message, sent or received.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Drafty } from 'tinode-sdk';\r\n\r\nimport Attachment from './attachment.jsx';\r\nimport LetterTile from './letter-tile.jsx';\r\nimport ReceivedMarker from './received-marker.jsx'\r\nimport UploadingImage from './uploading-image.jsx'\r\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\r\n\r\nexport default class ChatMessage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      progress: 0\r\n    };\r\n\r\n    if (props.uploader) {\r\n      props.uploader.onProgress = this.handleProgress.bind(this);\r\n    }\r\n\r\n    this.handleImagePreview = this.handleImagePreview.bind(this);\r\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\r\n    this.handleContextClick = this.handleContextClick.bind(this);\r\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\r\n  }\r\n\r\n  handleImagePreview(e) {\r\n    e.preventDefault();\r\n    this.props.onImagePreview({\r\n      url: e.target.src,\r\n      filename: e.target.title,\r\n      width: e.target.dataset.width,\r\n      height: e.target.dataset.height,\r\n      size: e.target.dataset.size,\r\n      type: e.target.dataset.mime\r\n    });\r\n  }\r\n\r\n  handleFormButtonClick(e) {\r\n    e.preventDefault();\r\n    const data = {\r\n      seq: this.props.seq\r\n    };\r\n    data.resp = {};\r\n    if (e.target.dataset.name) {\r\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\r\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\r\n    }\r\n    if (e.target.dataset.act == 'url') {\r\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\r\n    }\r\n    const text = e.target.dataset.title || 'unknown';\r\n    this.props.onFormResponse(e.target.dataset.act, text, data);\r\n  }\r\n\r\n  handleContextClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\r\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\r\n                                 y: e.pageY, x: e.pageX }, menuItems);\r\n  }\r\n\r\n  handleProgress(ratio) {\r\n    this.setState({progress: ratio});\r\n  }\r\n\r\n  handleCancelUpload() {\r\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\r\n  }\r\n\r\n  render() {\r\n    const sideClass = this.props.deleted ? 'center' :\r\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\r\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\r\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\r\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\r\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\r\n\r\n    let content = this.props.content;\r\n    const attachments = [];\r\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\r\n      Drafty.attachments(content, function(att, i) {\r\n        if (att.mime == 'application/json') {\r\n          // Don't show json objects as attachments.\r\n          // They are not meant for users.\r\n          return;\r\n        }\r\n        attachments.push(<Attachment\r\n          tinode={this.props.tinode}\r\n          downloadUrl={Drafty.getDownloadUrl(att)}\r\n          filename={att.name}\r\n          uploading={Drafty.isProcessing(att)}\r\n          mimetype={att.mime}\r\n          size={Drafty.getEntitySize(att)}\r\n          progress={this.state.progress}\r\n          onCancelUpload={this.handleCancelUpload}\r\n          onError={this.props.onError}\r\n          key={i} />);\r\n      }, this);\r\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\r\n    } else if (this.props.deleted) {\r\n      // Message represents a range of deleted messages.\r\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\r\n        <FormattedMessage id=\"deleted_content\"\r\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\r\n      </i></>\r\n    } else if (typeof content != 'string') {\r\n      content = <>\r\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\r\n            <FormattedMessage id=\"invalid_content\"\r\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\r\n        </>\r\n    }\r\n\r\n    return (\r\n      <li className={sideClass}>\r\n        {this.props.userFrom && this.props.response ?\r\n          <div className=\"avatar-box\">\r\n            {fullDisplay ?\r\n              <LetterTile\r\n                topic={this.props.userFrom}\r\n                title={this.props.userName}\r\n                avatar={avatar} /> :\r\n              null}\r\n          </div> :\r\n          null}\r\n        <div>\r\n          <div className={bubbleClass}>\r\n            <div className=\"content-meta\">\r\n              <div className=\"message-content\">\r\n                {content}\r\n                {attachments}\r\n              </div>\r\n              {this.props.timestamp ?\r\n                <ReceivedMarker\r\n                  timestamp={this.props.timestamp}\r\n                  received={this.props.received} />\r\n                : null}\r\n            </div>\r\n            {this.props.deleted || !this.props.showContextMenu ?\r\n              null :\r\n              <span className=\"menuTrigger\">\r\n                <a href=\"#\" onClick={this.handleContextClick}>\r\n                  <i className=\"material-icons\">expand_more</i>\r\n                </a>\r\n              </span>\r\n            }\r\n          </div>\r\n          {fullDisplay ?\r\n            <div className=\"author\">\r\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\r\n                description=\"In place of a user's full name when the user is not found.\">{\r\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\r\n              }</FormattedMessage>\r\n            </div>\r\n            : null\r\n          }\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\n// Convert Drafty object to a tree of React elements.\r\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\r\nimport { fitImageSize } from '../lib/blob-helpers.js';\r\n\r\n// Converts Drafty elements into React classes.\r\n// 'this' is set by the caller.\r\nfunction draftyFormatter(style, data, values, key) {\r\n  if (style == 'EX') {\r\n    // attachments are handled elsewhere.\r\n    return null;\r\n  }\r\n\r\n  let el = Drafty.tagName(style);\r\n  if (el) {\r\n    const attr = Drafty.attrValue(style, data) || {};\r\n    attr.key = key;\r\n    switch (style) {\r\n      case 'HL':\r\n        // Highlighted text. Assign class name.\r\n        attr.className = 'highlight';\r\n        break;\r\n      case 'IM':\r\n        // Additional processing for images\r\n        if (data) {\r\n          attr.className = 'inline-image';\r\n          const dim = fitImageSize(data.width, data.height,\r\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\r\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\r\n          attr.style = {\r\n            width: dim.dstWidth + 'px',\r\n            height: dim.dstHeight + 'px',\r\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\r\n            minWidth: dim.dstWidth + 'px',\r\n            minHeight: dim.dstHeight + 'px'\r\n          };\r\n          if (!Drafty.isProcessing(data)) {\r\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\r\n            attr.alt = data.name;\r\n            if (attr.src) {\r\n              attr.onClick = this.handleImagePreview;\r\n              attr.className += ' image-clickable';\r\n              attr.loading = 'lazy';\r\n            } else {\r\n              attr.src = 'img/broken_image.png';\r\n            }\r\n          } else {\r\n            // Use custom element instead of <img>.\r\n            el = UploadingImage;\r\n          }\r\n        }\r\n        break;\r\n      case 'BN':\r\n        // Button\r\n        attr.onClick = this.handleFormButtonClick;\r\n        let inner = React.Children.map(values, (child) => {\r\n          return typeof child == 'string' ? child : undefined;\r\n        });\r\n        if (!inner || inner.length == 0) {\r\n          inner = [attr.name]\r\n        }\r\n        // Get text which will be sent back when the button is clicked.\r\n        attr['data-title'] = inner.join('');\r\n        break;\r\n      case 'FM':\r\n        // Form\r\n        attr.className = 'bot-form';\r\n        break;\r\n      case 'RW':\r\n        // Form element formatting is dependent on element content.\r\n        break;\r\n      default:\r\n        if (el == '_UNKN') {\r\n          // Unknown element.\r\n          // TODO: make it prettier.\r\n          el = <><span className=\"material-icons\">extension</span></>;\r\n        }\r\n        break;\r\n    }\r\n    return React.createElement(el, attr, values);\r\n  } else {\r\n    return values;\r\n  }\r\n};\r\n","// Send message form.\r\nimport React from 'react';\r\nimport { defineMessages, injectIntl } from 'react-intl';\r\nimport { Drafty } from 'tinode-sdk';\r\n\r\nimport { KEYPRESS_DELAY } from '../config.js';\r\nimport { filePasted } from '../lib/blob-helpers.js';\r\n\r\nconst messages = defineMessages({\r\n  messaging_disabled: {\r\n    id: 'messaging_disabled_prompt',\r\n    defaultMessage: 'Messaging disabled',\r\n    description: 'Prompt in SendMessage in read-only topic'\r\n  },\r\n  type_new_message: {\r\n    id: 'new_message_prompt',\r\n    defaultMessage: 'New message',\r\n    description: 'Prompt in send message field'\r\n  },\r\n  add_image_caption: {\r\n    id: 'image_caption_prompt',\r\n    defaultMessage: 'Image caption',\r\n    description: 'Prompt in SendMessage for attached image'\r\n  },\r\n  file_attachment_too_large: {\r\n    id: 'file_attachment_too_large',\r\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\r\n    description: 'Error message when attachment is too large'\r\n  },\r\n  cannot_initiate_upload: {\r\n    id: 'cannot_initiate_file_upload',\r\n    defaultMessage: 'Cannot initiate file upload.',\r\n    description: 'Generic error messagewhen attachment fails'\r\n  },\r\n});\r\n\r\nclass SendMessage extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      message: '',\r\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\r\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\r\n    };\r\n\r\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\r\n    this.handleAttachImage = this.handleAttachImage.bind(this);\r\n    this.handleAttachFile = this.handleAttachFile.bind(this);\r\n    this.handleSend = this.handleSend.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.messageEditArea) {\r\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.messageEditArea) {\r\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.messageEditArea) {\r\n      this.messageEditArea.focus();\r\n    }\r\n  }\r\n\r\n  handlePasteEvent(e) {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n    // FIXME: handle large files too.\r\n    if (filePasted(e,\r\n      (bits, mime, width, height, fname) => {\r\n        this.props.onAttachImage(mime, bits, width, height, fname);\r\n      },\r\n      (mime, bits, fname) => {\r\n        this.props.onAttachFile(mime, bits, fname);\r\n      },\r\n      this.props.onError)) {\r\n\r\n      // If a file was pasted, don't paste base64 data into input field.\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleAttachImage(e) {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      this.props.onAttachImage(e.target.files[0]);\r\n    }\r\n    // Clear the value so the same file can be uploaded again.\r\n    e.target.value = '';\r\n  }\r\n\r\n  handleAttachFile(e) {\r\n    const {formatMessage} = this.props.intl;\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      this.props.onAttachFile(e.target.files[0]);\r\n    }\r\n    // Clear the value so the same file can be uploaded again.\r\n    e.target.value = '';\r\n  }\r\n\r\n  handleSend(e) {\r\n    e.preventDefault();\r\n    const message = this.state.message.trim();\r\n    if (message || this.props.acceptBlank || this.props.noInput) {\r\n      this.props.onSendMessage(message);\r\n      this.setState({message: ''});\r\n    }\r\n  }\r\n\r\n  /* Send on Enter key */\r\n  handleKeyPress(e) {\r\n    // Remove this if you don't want Enter to trigger send\r\n    if (e.key === 'Enter') {\r\n      // Have Shift-Enter insert a line break instead\r\n      if (!e.shiftKey) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.handleSend(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMessageTyping(e) {\r\n    const newState = {message: e.target.value};\r\n    if (this.props.onKeyPress) {\r\n      const now = new Date().getTime();\r\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\r\n        this.props.onKeyPress();\r\n        newState.keypressTimestamp = now;\r\n      }\r\n    }\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    const prompt = this.props.disabled ?\r\n      formatMessage(messages.messaging_disabled) :\r\n      (this.props.messagePrompt ?\r\n        formatMessage(messages[this.props.messagePrompt]) :\r\n        formatMessage(messages.type_new_message));\r\n    return (\r\n      <div id=\"send-message-panel\">\r\n        {!this.props.disabled ?\r\n          <>\r\n            {this.props.onAttachFile ?\r\n              <>\r\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\r\n                  <i className=\"material-icons secondary\">photo</i>\r\n                </a>\r\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\r\n                  <i className=\"material-icons secondary\">attach_file</i>\r\n                </a>\r\n              </>\r\n              :\r\n              null}\r\n            {this.props.noInput ?\r\n              <div className=\"hr thin\" /> :\r\n              <textarea id=\"sendMessage\" placeholder={prompt}\r\n                value={this.state.message} onChange={this.handleMessageTyping}\r\n                onKeyPress={this.handleKeyPress}\r\n                ref={(ref) => {this.messageEditArea = ref;}}\r\n                autoFocus />}\r\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\r\n              <i className=\"material-icons\">send</i>\r\n            </a>\r\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\r\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\r\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\r\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\r\n          </>\r\n          :\r\n          <div id=\"writing-disabled\">{prompt}</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(SendMessage);\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport SendMessage from '../widgets/send-message.jsx';\r\n\r\nimport { bytesToHumanSize } from '../lib/strformat.js';\r\n\r\n// Get material icon name from mime type.\r\nfunction iconFromMime(mime) {\r\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\r\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\r\n\r\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\r\n}\r\n\r\nexport default class DocPreview extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSendDoc = this.handleSendDoc.bind(this);\r\n  }\r\n\r\n  handleSendDoc(caption) {\r\n    this.props.onClose();\r\n    this.props.onSendMessage(this.props.content.file);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.content) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div id=\"image-preview\">\r\n        <div id=\"image-preview-caption-panel\">\r\n          <span>{this.props.content.filename}</span>\r\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\r\n        </div>\r\n        <div id=\"image-preview-container\">\r\n          <div className=\"flex-column narrow\">\r\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\r\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\r\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\r\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\r\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\r\n          </div>\r\n        </div>\r\n        <SendMessage\r\n          noInput={true}\r\n          onSendMessage={this.handleSendDoc}\r\n          onError={this.props.onError} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// GroupSubs: a list of group subscribers currently online.\r\n// Show in the topic title bar\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\r\n\r\nimport LetterTile from './letter-tile.jsx';\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\n\r\nexport default class GroupSubs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const usersOnline = [];\r\n    const totalCount = (this.props.subscribers || []).length;\r\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\r\n\r\n    (this.props.subscribers || []).some((sub) => {\r\n      usersOnline.push(\r\n        <div className=\"avatar-box\" key={sub.user}>\r\n          <LetterTile\r\n            topic={sub.user}\r\n            avatar={makeImageDataUrl(sub.public ? sub.public.photo : null) || true}\r\n            title={sub.public ? sub.public.fn : null} />\r\n        </div>\r\n      );\r\n      return usersOnline.length == countToShow;\r\n    });\r\n\r\n    return (\r\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\r\n        <span>\r\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\r\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\r\n              values={{ overflow: (totalCount - countToShow) }} />\r\n        </span> : null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport SendMessage from '../widgets/send-message.jsx';\r\n\r\nimport { REM_SIZE } from '../config.js';\r\nimport { fitImageSize } from '../lib/blob-helpers.js';\r\nimport { bytesToHumanSize } from '../lib/strformat.js';\r\n\r\nexport default class ImagePreview extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n\r\n    this.handleSendImage = this.handleSendImage.bind(this);\r\n  }\r\n\r\n  assignWidth(node) {\r\n    if (node && !this.state.width) {\r\n      const bounds = node.getBoundingClientRect();\r\n      this.setState({\r\n        width: bounds.width | 0,\r\n        height: bounds.height | 0\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSendImage(caption) {\r\n    this.props.onClose();\r\n    this.props.onSendMessage(caption, this.props.content.blob);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.content) {\r\n      return null;\r\n    }\r\n\r\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\r\n      this.state.width, this.state.height, false);\r\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\r\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\r\n    size.maxWidth = '100%';\r\n    size.maxHeight = '100%';\r\n\r\n    let filename = this.props.content.filename;\r\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\r\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\r\n    if (filename.length > maxlength) {\r\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\r\n    }\r\n    const width = this.props.content.width || '-';\r\n    const height = this.props.content.height || '-';\r\n    return (\r\n      <div id=\"image-preview\">\r\n        <div id=\"image-preview-caption-panel\">\r\n          {!this.props.onSendMessage ?\r\n            <a href={this.props.content.url} download={this.props.content.filename}>\r\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\r\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\r\n            </a>\r\n            :\r\n            <span>{this.props.content.filename}</span>\r\n          }\r\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\r\n        </div>\r\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\r\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\r\n        </div>\r\n        {this.props.onSendMessage ?\r\n          <SendMessage\r\n            messagePrompt=\"add_image_caption\"\r\n            acceptBlank={true}\r\n            onSendMessage={this.handleSendImage}\r\n            onError={this.props.onError} />\r\n          :\r\n          <div id=\"image-preview-footer\">\r\n            <div>\r\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\r\n                description=\"Label for a file name\" /></b></div>\r\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\r\n            </div>\r\n            <div>\r\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\r\n                description=\"Label for file content type (mime)\" /></b></div>\r\n              <div>{this.props.content.type}</div>\r\n            </div>\r\n            <div>\r\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\r\n                description=\"Label for file size\" /></b></div>\r\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\r\n            </div>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// A single topic or user.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nexport default class Invitation extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleButtonAction = this.handleButtonAction.bind(this);\r\n  }\r\n\r\n  handleButtonAction(evt, data) {\r\n    evt.preventDefault();\r\n    this.props.onAction(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"accept-invite-panel\">\r\n        <div className=\"title\">\r\n          <FormattedMessage id=\"chat_invitation\"\r\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\r\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\r\n            <FormattedMessage id=\"chat_invitation_accept\"\r\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\r\n          </button>\r\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\r\n            <FormattedMessage id=\"chat_invitation_ignore\"\r\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\r\n          </button>\r\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\r\n            <FormattedMessage id=\"chat_invitation_block\"\r\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport default class LoadSpinner extends React.PureComponent {\r\n  render() {\r\n    return (this.props.show ?\r\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\r\n  }\r\n}\r\n","/* This is just a static page to display when no conversation is selected. */\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport { APP_NAME } from '../config.js';\r\n\r\nexport default class LogoView extends React.PureComponent {\r\n  render() {\r\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\r\n    return (\r\n      <div id=\"dummy-view\">\r\n        <div>\r\n          <a href=\"https://github.com/tinode/chat/\">\r\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\r\n            <h2>Tinode Web</h2>\r\n          </a>\r\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \r\n            description=\"Label for a client version\" /> {version}</p>\r\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\r\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Utility class for hash navigation.\r\n\r\n// Parse hash as in http://www.example.com/path#hash as if it were\r\n// path and arguments.\r\nexport default class HashNavigation {\r\n  static parseUrlHash(hash) {\r\n    // Split path from args, path -> parts[0], args->path[1]\r\n    const parts = hash.split('?', 2);\r\n    const params = {};\r\n    let path = [];\r\n    if (parts[0]) {\r\n      path = parts[0].substr(1).split('/');\r\n    }\r\n    if (parts[1]) {\r\n      parts[1].split('&').forEach(function(part) {\r\n        let item = part.split('=');\r\n        if (item[0]) {\r\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\r\n        }\r\n      });\r\n    }\r\n    return {path: path, params: params};\r\n  }\r\n\r\n  static navigateTo(url) {\r\n    window.location.hash = url;\r\n  }\r\n\r\n  static composeUrlHash(path, params) {\r\n    let url = path.join('/');\r\n    const args = [];\r\n    for (const key in params) {\r\n      if (params.hasOwnProperty(key)) {\r\n        args.push(key + '=' + params[key]);\r\n      }\r\n    }\r\n    if (args.length > 0) {\r\n      url += '?' + args.join('&');\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static addUrlParam(hash, key, value) {\r\n    const parsed = this.parseUrlHash(hash);\r\n    parsed.params[key] = value;\r\n    return this.composeUrlHash(parsed.path, parsed.params);\r\n  }\r\n\r\n  static removeUrlParam(hash, key) {\r\n    const parsed = this.parseUrlHash(hash);\r\n    delete parsed.params[key];\r\n    return this.composeUrlHash(parsed.path, parsed.params);\r\n  }\r\n\r\n  static setUrlSidePanel(hash, sidepanel) {\r\n    const parsed = this.parseUrlHash(hash);\r\n    parsed.path[0] = sidepanel;\r\n    return this.composeUrlHash(parsed.path, parsed.params);\r\n  }\r\n\r\n  static setUrlTopic(hash, topic) {\r\n    const parsed = this.parseUrlHash(hash);\r\n    parsed.path[1] = topic;\r\n    // Close InfoView on topic change.\r\n    delete parsed.params.info;\r\n    return this.composeUrlHash(parsed.path, parsed.params);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\nconst Drafty = Tinode.Drafty;\r\n\r\nimport ChatMessage from '../widgets/chat-message.jsx';\r\nimport DocPreview from '../widgets/doc-preview.jsx';\r\nimport ErrorPanel from '../widgets/error-panel.jsx';\r\nimport GroupSubs from '../widgets/group-subs.jsx';\r\nimport ImagePreview from '../widgets/image-preview.jsx';\r\nimport Invitation from '../widgets/invitation.jsx';\r\nimport LetterTile from '../widgets/letter-tile.jsx';\r\nimport LoadSpinner from '../widgets/load-spinner.jsx';\r\nimport LogoView from './logo-view.jsx';\r\nimport SendMessage from '../widgets/send-message.jsx';\r\n\r\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\r\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\r\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\r\n  imageScaled, makeImageDataUrl } from '../lib/blob-helpers.js';\r\nimport HashNavigation from '../lib/navigation.js';\r\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\r\n\r\n// Run timer with this frequency (ms) for checking notification queue.\r\nconst NOTIFICATION_EXEC_INTERVAL = 300;\r\n\r\nconst messages = defineMessages({\r\n  online_now: {\r\n    id: 'online_now',\r\n    defaultMessage: 'online now',\r\n    description: 'Indicator that the user or topic is currently online',\r\n  },\r\n  last_seen: {\r\n    id: 'last_seen_timestamp',\r\n    defaultMessage: 'Last seen',\r\n    description: 'Label for the timestamp of when the user or topic was last online'\r\n  },\r\n  not_found: {\r\n    id: 'title_not_found',\r\n    defaultMessage: 'Not found',\r\n    description: 'Title shown when topic is not found'\r\n  },\r\n  channel: {\r\n    id: 'channel',\r\n    defaultMessage: 'channel',\r\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\r\n  },\r\n  file_attachment_too_large: {\r\n    id: 'file_attachment_too_large',\r\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\r\n    description: 'Error message when attachment is too large'\r\n  }\r\n});\r\n\r\n// Checks if the access permissions are granted but not yet accepted.\r\nfunction isUnconfirmed(acs) {\r\n  if (acs) {\r\n    const ex = acs.getExcessive() || '';\r\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isPeerRestricted(acs) {\r\n  if (acs) {\r\n    const ms = acs.getMissing() || '';\r\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\r\n  }\r\n  return false;\r\n}\r\n\r\nclass MessagesView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\r\n\r\n    this.leave = this.leave.bind(this);\r\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\r\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\r\n    this.sendKeyPress = this.sendKeyPress.bind(this);\r\n    this.handleScrollReference = this.handleScrollReference.bind(this);\r\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\r\n    this.handleDescChange = this.handleDescChange.bind(this);\r\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\r\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\r\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\r\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\r\n    this.handleImagePostview = this.handleImagePostview.bind(this);\r\n    this.handleClosePreview = this.handleClosePreview.bind(this);\r\n    this.handleFormResponse = this.handleFormResponse.bind(this);\r\n    this.handleContextClick = this.handleContextClick.bind(this);\r\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\r\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\r\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\r\n    this.handleAttachFile = this.handleAttachFile.bind(this);\r\n    this.handleAttachImage = this.handleAttachImage.bind(this);\r\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\r\n    this.postReadNotification = this.postReadNotification.bind(this);\r\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\r\n\r\n    this.readNotificationQueue = [];\r\n    this.readNotificationTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.propsChange(this.props, this.state);\r\n    if (this.messagesScroller) {\r\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.messagesScroller) {\r\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\r\n    }\r\n\r\n    // Flush all notifications.\r\n    this.clearNotificationQueue();\r\n  }\r\n\r\n  // Scroll last message into view on component update e.g. on message received\r\n  // or vertical shrinking.\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.messagesScroller) {\r\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\r\n        // New message\r\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\r\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\r\n        // Componet changed height.\r\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\r\n      }\r\n    }\r\n\r\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\r\n    if (this.state.topic != prevState.topic) {\r\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\r\n        this.leave(prevState.topic);\r\n      }\r\n\r\n      if (topic) {\r\n        topic.onData = this.handleMessageUpdate;\r\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\r\n        topic.onInfo = this.handleInfoReceipt;\r\n        topic.onMetaDesc = this.handleDescChange;\r\n        topic.onSubsUpdated = this.handleSubsUpdated;\r\n        topic.onPres = this.handleSubsUpdated;\r\n      }\r\n    }\r\n\r\n    if (!this.props.applicationVisible) {\r\n      // If application is not visible, flush all unsent 'read' notifications.\r\n      this.clearNotificationQueue();\r\n    } else {\r\n      // Otherwise assume there are unread messages.\r\n      this.postReadNotification(0);\r\n    }\r\n\r\n    if (topic && !topic.isSubscribed() && this.props.ready &&\r\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\r\n      // Is this a new topic?\r\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\r\n\r\n      // Don't request the tags. They are useless unless the user\r\n      // is the owner and is editing the topic.\r\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\r\n      if (this.state.isReader || newTopic) {\r\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\r\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\r\n        if (this.state.isReader) {\r\n          getQuery = getQuery.withLaterDel();\r\n        }\r\n        // And show \"loading\" spinner.\r\n        this.setState({ fetchingMessages: true });\r\n      }\r\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\r\n      topic.subscribe(getQuery.build(), setQuery)\r\n        .then((ctrl) => {\r\n          if (ctrl.code == 303) {\r\n            // Redirect to another topic requested.\r\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\r\n            return;\r\n          }\r\n          if (this.state.topic != ctrl.topic) {\r\n            this.setState({topic: ctrl.topic});\r\n          }\r\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\r\n          // If there are unsent messages, try sending them now.\r\n          topic.queuedMessages((pub) => {\r\n            if (!pub._sending && topic.isSubscribed()) {\r\n              topic.publishMessage(pub);\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Failed subscription to\", this.state.topic);\r\n          this.props.onError(err.message, 'err');\r\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\r\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\r\n          this.setState(blankState);\r\n        });\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let nextState = {};\r\n    if (!nextProps.topic) {\r\n      // Default state: no topic.\r\n      nextState = {\r\n        messageCount: 0,\r\n        latestClearId: -1,\r\n        onlineSubs: [],\r\n        topic: null,\r\n        title: '',\r\n        avatar: null,\r\n        docPreview: null,\r\n        imagePreview: null,\r\n        imagePostview: null,\r\n        typingIndicator: false,\r\n        scrollPosition: 0,\r\n        fetchingMessages: false,\r\n        peerMessagingDisabled: false,\r\n        channel: false\r\n      };\r\n    } else if (nextProps.topic != prevState.topic) {\r\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\r\n      nextState = {\r\n        topic: nextProps.topic,\r\n        docPreview: null,\r\n        imagePreview: null,\r\n        imagePostview: null,\r\n        typingIndicator: false,\r\n        scrollPosition: 0,\r\n        fetchingMessages: false\r\n      };\r\n\r\n      if (topic) {\r\n        // Topic exists.\r\n        const subs = [];\r\n\r\n        if (nextProps.connected) {\r\n          topic.subscribers((sub) => {\r\n            if (sub.online && sub.user != nextProps.myUserId) {\r\n              subs.push(sub);\r\n            }\r\n          });\r\n        }\r\n\r\n        Object.assign(nextState, {\r\n          onlineSubs: subs\r\n        });\r\n\r\n        if (topic.public) {\r\n          Object.assign(nextState, {\r\n            title: topic.public.fn,\r\n            avatar: makeImageDataUrl(topic.public.photo)\r\n          });\r\n        } else {\r\n          Object.assign(nextState, {\r\n            title: '',\r\n            avatar: null\r\n          });\r\n        }\r\n\r\n        const peer = topic.p2pPeerDesc();\r\n        if (peer) {\r\n          Object.assign(nextState, {\r\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\r\n          });\r\n        } else if (prevState.peerMessagingDisabled) {\r\n          Object.assign(nextState, {\r\n            peerMessagingDisabled: false\r\n          });\r\n        }\r\n        Object.assign(nextState, {\r\n          messageCount: topic.messageCount(),\r\n          latestClearId: topic.maxClearId(),\r\n          channel: topic.isChannelType()\r\n        });\r\n      } else {\r\n        // Invalid topic.\r\n        Object.assign(nextState, {\r\n          messageCount: 0,\r\n          latestClearId: -1,\r\n          onlineSubs: [],\r\n          title: '',\r\n          avatar: null,\r\n          peerMessagingDisabled: false,\r\n          channel: false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (nextProps.acs) {\r\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\r\n        nextState.isWriter = !prevState.isWriter;\r\n      }\r\n      if (nextProps.acs.isReader() != prevState.isReader) {\r\n        nextState.isReader = !prevState.isReader;\r\n      }\r\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\r\n        nextState.readingBlocked = !prevState.readingBlocked;\r\n      }\r\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\r\n        nextState.isSharer = !prevState.isSharer;\r\n      }\r\n    } else {\r\n      if (prevState.isWriter) {\r\n        nextState.isWriter = false;\r\n      }\r\n      if (prevState.isReader) {\r\n        nextState.isReader = false;\r\n      }\r\n      if (!prevState.readingBlocked) {\r\n        prevState.readingBlocked = true;\r\n      }\r\n      if (prevState.isSharer) {\r\n        nextState.isSharer = false;\r\n      }\r\n    }\r\n\r\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\r\n      nextState.unconfirmed = !prevState.unconformed;\r\n    }\r\n\r\n    // Clear subscribers online when there is no connection.\r\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\r\n      nextState.onlineSubs = [];\r\n    }\r\n\r\n    return nextState;\r\n  }\r\n\r\n  leave(oldTopicName) {\r\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\r\n      return;\r\n    }\r\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\r\n    if (oldTopic && oldTopic.isSubscribed()) {\r\n      oldTopic.leave(false)\r\n        .catch(() => { /* do nothing here */ })\r\n        .finally(() => {\r\n          // We don't care if the request succeeded or failed.\r\n          // The topic is dead regardless.\r\n          this.setState({fetchingMessages: false});\r\n          oldTopic.onData = undefined;\r\n          oldTopic.onAllMessagesReceived = undefined;\r\n          oldTopic.onInfo = undefined;\r\n          oldTopic.onMetaDesc = undefined;\r\n          oldTopic.onSubsUpdated = undefined;\r\n          oldTopic.onPres = undefined;\r\n        });\r\n    }\r\n  }\r\n\r\n  handleScrollReference(node) {\r\n    if (node) {\r\n      node.addEventListener('scroll', this.handleScrollEvent);\r\n      this.messagesScroller = node;\r\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\r\n    }\r\n  }\r\n\r\n  // Get older messages\r\n  handleScrollEvent(event) {\r\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\r\n    if (this.state.fetchingMessages) {\r\n      return;\r\n    }\r\n\r\n    if (event.target.scrollTop <= 0) {\r\n      const topic = this.props.tinode.getTopic(this.state.topic);\r\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\r\n        this.setState({fetchingMessages: true}, () => {\r\n          topic.getMessagesPage(MESSAGES_PAGE)\r\n            .catch((err) => this.props.onError(err.message, 'err'))\r\n            .finally(() => this.setState({fetchingMessages: false}));\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDescChange(desc) {\r\n    if (desc.public) {\r\n      this.setState({\r\n        title: desc.public.fn,\r\n        avatar: makeImageDataUrl(desc.public.photo)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        title: '',\r\n        avatar: null\r\n      });\r\n    }\r\n\r\n    if (desc.acs) {\r\n      this.setState({\r\n        isWriter: desc.acs.isWriter(),\r\n        isReader: desc.acs.isReader(),\r\n        readingBlocked: !desc.acs.isReader('given'),\r\n        unconfirmed: isUnconfirmed(desc.acs),\r\n      });\r\n    }\r\n  }\r\n\r\n  postReadNotification(seq) {\r\n    // Ignore notifications if the app is invisible.\r\n    if (!this.props.applicationVisible) {\r\n      return;\r\n    }\r\n\r\n    // Set up the timer if it's not running already.\r\n    if (!this.readNotificationTimer) {\r\n      this.readNotificationTimer = setInterval(() => {\r\n        if (this.readNotificationQueue.length == 0) {\r\n          // Shut down the timer if the queue is empty.\r\n          clearInterval(this.readNotificationTimer);\r\n          this.readNotificationTimer = null;\r\n          return;\r\n        }\r\n\r\n        let seq = -1;\r\n        while (this.readNotificationQueue.length > 0) {\r\n          const n = this.readNotificationQueue[0];\r\n          if (n.topicName != this.state.topic) {\r\n            // Topic has changed. Drop the notification.\r\n            this.readNotificationQueue.shift();\r\n            continue;\r\n          }\r\n\r\n          const now = new Date();\r\n          if (n.sendAt <= now) {\r\n            // Remove expired notification from queue.\r\n            this.readNotificationQueue.shift();\r\n            seq = Math.max(seq, n.seq);\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n\r\n        // Send only one notification for the whole batch of messages.\r\n        if (seq >= 0) {\r\n          const topic = this.props.tinode.getTopic(this.state.topic);\r\n          if (topic) {\r\n            topic.noteRead(seq);\r\n          }\r\n        }\r\n      }, NOTIFICATION_EXEC_INTERVAL);\r\n    }\r\n\r\n    const now = new Date();\r\n    this.readNotificationQueue.push({\r\n      topicName: this.state.topic,\r\n      seq: seq,\r\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\r\n    });\r\n  }\r\n\r\n  // Clear notification queue and timer.\r\n  clearNotificationQueue() {\r\n    this.readNotificationQueue = [];\r\n    if (this.readNotificationTimer) {\r\n      clearInterval(this.readNotificationTimer);\r\n      this.readNotificationTimer = null;\r\n    }\r\n  }\r\n\r\n  handleSubsUpdated() {\r\n    if (this.state.topic) {\r\n      const subs = [];\r\n      const topic = this.props.tinode.getTopic(this.state.topic);\r\n      topic.subscribers((sub) => {\r\n        if (sub.online && sub.user != this.props.myUserId) {\r\n          subs.push(sub);\r\n        }\r\n      });\r\n      const newState = {onlineSubs: subs};\r\n      const peer = topic.p2pPeerDesc();\r\n      if (peer) {\r\n        Object.assign(newState, {\r\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\r\n        });\r\n      } else if (this.state.peerMessagingDisabled) {\r\n        Object.assign(newState, {\r\n          peerMessagingDisabled: false\r\n        });\r\n      }\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // The 'msg' could be false-ish if some message ranges were deleted.\r\n  handleMessageUpdate(msg) {\r\n    const topic = this.props.tinode.getTopic(this.state.topic);\r\n    if (!msg) {\r\n      // msg could be null if one or more messages were deleted.\r\n      // Updating state to force redraw.\r\n      this.setState({latestClearId: topic.maxClearId()});\r\n      return;\r\n    }\r\n\r\n    this.setState({messageCount: topic.messageCount()});\r\n\r\n    // Scroll to the bottom if the message is added to the end of the message list.\r\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\r\n    if (topic.isNewMessage(msg.seq)) {\r\n      this.setState({scrollPosition: 0});\r\n    }\r\n\r\n    // Aknowledge messages except own messages. They are\r\n    // automatically assumed to be read and recived.\r\n    const status = topic.msgStatus(msg, true);\r\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\r\n      this.postReadNotification(msg.seq);\r\n    }\r\n    // This will send \"received\" notifications right away.\r\n    this.props.onData(msg);\r\n  }\r\n\r\n  handleAllMessagesReceived(count) {\r\n    this.setState({fetchingMessages: false});\r\n    if (count > 0) {\r\n      // 0 means \"latest\".\r\n      this.postReadNotification(0);\r\n    }\r\n  }\r\n\r\n  handleInfoReceipt(info) {\r\n    switch (info.what) {\r\n      case 'kp': {\r\n        clearTimeout(this.keyPressTimer);\r\n        var instance = this;\r\n        this.keyPressTimer = setTimeout(function() {\r\n          instance.setState({typingIndicator: false});\r\n        }, KEYPRESS_DELAY + 1000);\r\n        if (!this.state.typingIndicator) {\r\n          this.setState({typingIndicator: true});\r\n        }\r\n        break;\r\n      }\r\n      case 'read':\r\n      case 'recv':\r\n        // Redraw due to changed recv/read status.\r\n        this.forceUpdate();\r\n        break;\r\n      default:\r\n        console.log(\"Other change in topic: \", info.what);\r\n    }\r\n  }\r\n\r\n  handleImagePostview(content) {\r\n    this.setState({ imagePostview: content });\r\n  }\r\n\r\n  handleClosePreview() {\r\n    if (this.state.imagePreview && this.state.imagePreview.url) {\r\n      URL.revokeObjectURL(this.state.imagePreview.url);\r\n    }\r\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\r\n  }\r\n\r\n  handleFormResponse(action, text, data) {\r\n    if (action == 'pub') {\r\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\r\n    } else if (action == 'url') {\r\n      const url = new URL(data.ref);\r\n      const params = url.searchParams;\r\n      for (let key in data.resp) {\r\n        if (data.resp.hasOwnProperty(key)) {\r\n          params.set(key, data.resp[key]);\r\n        }\r\n      }\r\n      ['name', 'seq'].map((key) => {\r\n        if (data[key]) {\r\n          params.set(key, data[key]);\r\n        }\r\n      });\r\n      params.set('uid', this.props.myUserId);\r\n      params.set('topic', this.state.topic);\r\n      url.search = params;\r\n      window.open(url, '_blank');\r\n    } else {\r\n      console.log(\"Unknown action in form\", action);\r\n    }\r\n  }\r\n\r\n  handleContextClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\r\n  }\r\n\r\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\r\n    params.topicName = this.state.topic;\r\n    const menuItems = messageSpecificMenuItems || [];\r\n    const topic = this.props.tinode.getTopic(params.topicName);\r\n    if (topic) {\r\n      if (!topic.isChannelType()) {\r\n        menuItems.push('message_delete');\r\n      }\r\n      const acs = topic.getAccessMode();\r\n      if (acs && acs.isDeleter()) {\r\n        menuItems.push('message_delete_hard');\r\n      }\r\n    }\r\n    this.props.showContextMenu(params, menuItems);\r\n  }\r\n\r\n  handleNewChatAcceptance(action) {\r\n    this.props.onNewChat(this.state.topic, action);\r\n  }\r\n\r\n  handleEnablePeer(e) {\r\n    e.preventDefault();\r\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\r\n  }\r\n\r\n  sendKeyPress() {\r\n    const topic = this.props.tinode.getTopic(this.state.topic);\r\n    if (topic.isSubscribed()) {\r\n      topic.noteKeyPress();\r\n    }\r\n  }\r\n\r\n  // Send attachment as Drafty message:\r\n  // - if file is too large, upload it and send a s link.\r\n  // - if file is small enough, just send it in-band.\r\n  sendFileAttachment(file) {\r\n    // Server-provided limit reduced for base64 encoding and overhead.\r\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\r\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\r\n\r\n    if (file.size > maxInbandAttachmentSize) {\r\n      // Too large to send inband - uploading out of band and sending as a link.\r\n      const uploader = this.props.tinode.getLargeFileHelper();\r\n      if (!uploader) {\r\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\r\n        return;\r\n      }\r\n      const uploadCompletionPromise = uploader.upload(file);\r\n      const msg = Drafty.attachFile(null, {\r\n        mime: file.type,\r\n        filename: file.name,\r\n        size: file.size,\r\n        urlPromise: uploadCompletionPromise\r\n      });\r\n      // Pass data and the uploader to the TinodeWeb.\r\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\r\n    } else {\r\n      // Small enough to send inband.\r\n      fileToBase64(file,\r\n        (mime, bits, fname) => {\r\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\r\n        },\r\n        this.props.onError\r\n      );\r\n    }\r\n  }\r\n\r\n  // handleAttachFile method is called when [Attach file] button is clicked.\r\n  handleAttachFile(file) {\r\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\r\n\r\n    if (file.size > maxExternAttachmentSize) {\r\n      // Too large.\r\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\r\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\r\n    } else {\r\n      this.setState({ docPreview: {\r\n        file: file,\r\n        filename: file.name,\r\n        size: file.size,\r\n        type: file.type\r\n      }});\r\n    }\r\n  }\r\n\r\n  // sendImageAttachment sends the image bits inband as Drafty message.\r\n  sendImageAttachment(caption, blob) {\r\n    const mime = this.state.imagePreview.type;\r\n    const width = this.state.imagePreview.width;\r\n    const height = this.state.imagePreview.height;\r\n    const fname = this.state.imagePreview.filename;\r\n\r\n    // Server-provided limit reduced for base64 encoding and overhead.\r\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\r\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\r\n\r\n    if (blob.size > maxInbandAttachmentSize) {\r\n      // Too large to send inband - uploading out of band and sending as a link.\r\n      const uploader = this.props.tinode.getLargeFileHelper();\r\n      if (!uploader) {\r\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\r\n        return;\r\n      }\r\n      const uploadCompletionPromise = uploader.upload(blob);\r\n\r\n      // Make small preview to show while uploading.\r\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\r\n        (tinyMine, tinyBlob) => {\r\n          // Convert tiny image into base64 for serialization and previewing.\r\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\r\n            let msg = Drafty.insertImage(null, 0, {\r\n              mime: mime,\r\n              _tempPreview: tinyBits64, // This preview will not be serialized.\r\n              width: width,\r\n              height: height,\r\n              filename: fname,\r\n              size: blob.size,\r\n              urlPromise: uploadCompletionPromise\r\n            });\r\n            if (caption) {\r\n              msg = Drafty.appendLineBreak(msg);\r\n              msg = Drafty.append(msg, Drafty.init(caption));\r\n            }\r\n            // Pass data and the uploader to the TinodeWeb.\r\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\r\n          }\r\n        )},\r\n        // Failure\r\n        (err) => {\r\n          this.props.onError(err, 'err');\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Upload the image if it's too big to be send inband.\r\n    blobToBase64(blob, (blobMime, bits64) => {\r\n      let msg = Drafty.insertImage(null, 0, {\r\n        mime: blobMime,\r\n        preview: bits64, // Serializable preview\r\n        width: width,\r\n        height: height,\r\n        filename: fname,\r\n        size: blob.size\r\n      });\r\n      if (caption) {\r\n        msg = Drafty.appendLineBreak(msg);\r\n        msg = Drafty.append(msg, Drafty.init(caption));\r\n      }\r\n      this.props.sendMessage(msg);\r\n    });\r\n  }\r\n\r\n  // handleAttachImage method is called when [Attach image] button is clicked.\r\n  handleAttachImage(file) {\r\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\r\n\r\n    // Get image dimensions and size, optionally scale it down.\r\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\r\n      // Success\r\n      (mime, blob, width, height, fname) => {\r\n        this.setState({imagePreview: {\r\n          url: URL.createObjectURL(blob),\r\n          blob: blob,\r\n          filename: fname,\r\n          width: width,\r\n          height: height,\r\n          size: blob.size,\r\n          type: mime\r\n        }});\r\n      },\r\n      // Failure\r\n      (err) => {\r\n        this.props.onError(err, 'err');\r\n      }\r\n    );\r\n  }\r\n\r\n  handleCancelUpload(seq, uploader) {\r\n    const topic = this.props.tinode.getTopic(this.state.topic);\r\n    const found = topic.findMessage(seq);\r\n    if (found) {\r\n      found._cancelled = true;\r\n    }\r\n    uploader.cancel();\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n\r\n    let component;\r\n    if (this.props.hideSelf) {\r\n      component = null;\r\n    } else if (!this.state.topic) {\r\n      component = (\r\n        <LogoView\r\n          serverVersion={this.props.serverVersion}\r\n          serverAddress={this.props.serverAddress} />\r\n      );\r\n    } else {\r\n      let component2;\r\n      if (this.state.imagePreview) {\r\n        // Preview image before sending.\r\n        component2 = (\r\n          <ImagePreview\r\n            content={this.state.imagePreview}\r\n            onClose={this.handleClosePreview}\r\n            onSendMessage={this.sendImageAttachment} />\r\n        );\r\n      } else if (this.state.imagePostview) {\r\n        // Expand received image.\r\n        component2 = (\r\n          <ImagePreview\r\n            content={this.state.imagePostview}\r\n            onClose={this.handleClosePreview} />\r\n        );\r\n      } else if (this.state.docPreview) {\r\n        // Preview attachment before sending.\r\n        component2 = (\r\n          <DocPreview\r\n            content={this.state.docPreview}\r\n            onClose={this.handleClosePreview}\r\n            onSendMessage={this.sendFileAttachment} />\r\n        );\r\n      } else {\r\n        const topic = this.props.tinode.getTopic(this.state.topic);\r\n        const isChannel = topic.isChannelType();\r\n        const groupTopic = topic.isGroupType() && !isChannel;\r\n        let messageNodes = [];\r\n        let previousFrom = null;\r\n        let chatBoxClass = null;\r\n        topic.messages((msg, prev, next, i) => {\r\n          let nextFrom = next ? (next.from || null) : 'chan';\r\n\r\n          let sequence = 'single';\r\n          let thisFrom = msg.from || 'chan';\r\n          if (thisFrom == previousFrom) {\r\n            if (thisFrom == nextFrom) {\r\n              sequence = 'middle';\r\n            } else {\r\n              sequence = 'last';\r\n            }\r\n          } else if (thisFrom == nextFrom) {\r\n            sequence = 'first';\r\n          }\r\n          previousFrom = thisFrom;\r\n\r\n          const isReply = !(thisFrom == this.props.myUserId);\r\n          const deliveryStatus = topic.msgStatus(msg, true);\r\n\r\n          let userName, userAvatar, userFrom;\r\n          if (groupTopic) {\r\n            const user = topic.userDesc(thisFrom);\r\n            if (user && user.public) {\r\n              userName = user.public.fn;\r\n              userAvatar = makeImageDataUrl(user.public.photo);\r\n            }\r\n            userFrom = thisFrom;\r\n            chatBoxClass='chat-box group';\r\n          } else {\r\n            chatBoxClass='chat-box';\r\n          }\r\n\r\n          messageNodes.push(\r\n            <ChatMessage\r\n              tinode={this.props.tinode}\r\n              content={msg.content}\r\n              deleted={msg.hi}\r\n              mimeType={msg.head ? msg.head.mime : null}\r\n              timestamp={msg.ts}\r\n              response={isReply}\r\n              seq={msg.seq}\r\n              userFrom={userFrom}\r\n              userName={userName}\r\n              userAvatar={userAvatar}\r\n              sequence={sequence}\r\n              received={deliveryStatus}\r\n              uploader={msg._uploader}\r\n              viewportWidth={this.props.viewportWidth}\r\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\r\n              onImagePreview={this.handleImagePostview}\r\n              onFormResponse={this.handleFormResponse}\r\n              onError={this.props.onError}\r\n              onCancelUpload={this.handleCancelUpload}\r\n              key={msg.seq} />\r\n          );\r\n        });\r\n\r\n        let lastSeen = null;\r\n        if (isChannel) {\r\n          lastSeen = formatMessage(messages.channel);\r\n        } else {\r\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\r\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\r\n            if (cont.online) {\r\n              lastSeen = formatMessage(messages.online_now);\r\n            } else if (cont.seen) {\r\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\r\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\r\n              // TODO: also handle user agent in c.seen.ua\r\n            }\r\n          }\r\n        }\r\n        const avatar = this.state.avatar || true;\r\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\r\n\r\n        component2 = (\r\n          <>\r\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\r\n              {this.props.displayMobile ?\r\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\r\n                  <i className=\"material-icons\">arrow_back</i>\r\n                </a>\r\n                :\r\n                null}\r\n              <div className=\"avatar-box\">\r\n                <LetterTile\r\n                  avatar={avatar}\r\n                  topic={this.state.topic}\r\n                  title={this.state.title} />\r\n                {!isChannel ? <span className={online} /> : null}\r\n              </div>\r\n              <div id=\"topic-title-group\">\r\n                <div id=\"topic-title\" className=\"panel-title\">{\r\n                  this.state.title ||\r\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\r\n                    description=\"Title shown when the topic has no name\" /></i>\r\n                }</div>\r\n                <div id=\"topic-last-seen\">{lastSeen}</div>\r\n              </div>\r\n              {groupTopic ?\r\n                <GroupSubs\r\n                  subscribers={this.state.onlineSubs} /> :\r\n                <div id=\"topic-users\" />\r\n              }\r\n              <div>\r\n                <a href=\"#\" onClick={this.handleContextClick}>\r\n                  <i className=\"material-icons\">more_vert</i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            {this.props.displayMobile ?\r\n              <ErrorPanel\r\n                level={this.props.errorLevel}\r\n                text={this.props.errorText}\r\n                onClearError={this.props.onError} />\r\n              : null}\r\n            <LoadSpinner show={this.state.fetchingMessages} />\r\n            <div id=\"messages-container\">\r\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\r\n                <ul id=\"scroller\" className={chatBoxClass}>\r\n                  {messageNodes}\r\n                </ul>\r\n              </div>\r\n              {!this.state.isReader ?\r\n              <div id=\"write-only-background\">\r\n                {this.state.readingBlocked ?\r\n                <div id=\"write-only-note\">\r\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\r\n                    description=\"Message shown in topic without the read access\" />\r\n                </div>\r\n                : null }\r\n              </div>\r\n              : null }\r\n            </div>\r\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\r\n              <div id=\"peer-messaging-disabled-note\">\r\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\r\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\r\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\r\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\r\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\r\n              </div> : null}\r\n            {this.state.unconfirmed ?\r\n              <Invitation onAction={this.handleNewChatAcceptance} />\r\n              :\r\n              <SendMessage\r\n                disabled={!this.state.isWriter}\r\n                onSendMessage={this.props.sendMessage}\r\n                onKeyPress={this.sendKeyPress}\r\n                onAttachFile={this.handleAttachFile}\r\n                onAttachImage={this.handleAttachImage}\r\n                onError={this.props.onError} />}\r\n          </>\r\n        );\r\n      }\r\n\r\n      component = <div id=\"topic-view\">{component2}</div>\r\n    }\r\n    return component;\r\n  }\r\n};\r\n\r\nexport default injectIntl(MessagesView);\r\n","// The <- button to be displayed in title bars.\r\nimport React from 'react';\r\n\r\nexport default class ButtonBack extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\r\n        <i className=\"material-icons\">arrow_back</i>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class MenuContacts extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\r\n        &nbsp;\r\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport default class MenuStart extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\r\n          &nbsp;\r\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport LetterTile from './letter-tile.jsx';\r\nimport ButtonBack from './button-back.jsx';\r\nimport MenuContacts from './menu-contacts.jsx';\r\nimport MenuStart from './menu-start.jsx';\r\n\r\nexport default class SideNavbar extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\r\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\r\n          {this.props.avatar ?\r\n            <div id=\"self-avatar\" className=\"avatar-box\">\r\n              <LetterTile\r\n                avatar={this.props.avatar}\r\n                topic={this.props.myUserId}\r\n                title={this.props.title} />\r\n            </div>\r\n            :\r\n            null}\r\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\r\n          {this.props.state === 'login' ?\r\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\r\n            this.props.state === 'contacts' ?\r\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\r\n            null}\r\n        </div>\r\n    );\r\n  }\r\n};\r\n","/* ContactsView holds all contacts-related stuff */\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport ContactList from '../widgets/contact-list.jsx';\r\n\r\nimport { updateFavicon } from '../lib/utils.js';\r\n\r\nconst messages = defineMessages({\r\n  archived_contacts_title: {\r\n    id: \"archived_contacts\",\r\n    defaultMessage: \"Archived contacts ({count})\",\r\n    description: \"Label for archived chats\"\r\n  }\r\n});\r\n\r\nexport default class ContactsView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleAction = this.handleAction.bind(this);\r\n\r\n    this.state = ContactsView.deriveStateFromProps(props);\r\n  }\r\n\r\n  static deriveStateFromProps(props) {\r\n    const contacts = [];\r\n    let unreadThreads = 0;\r\n    let archivedCount = 0;\r\n    props.chatList.map((c) => {\r\n      const blocked = c.acs && !c.acs.isJoiner();\r\n      // Show only blocked contacts only when props.blocked == true.\r\n      if (blocked && props.blocked) {\r\n        contacts.push(c);\r\n      }\r\n      if (blocked || props.blocked) {\r\n        return;\r\n      }\r\n\r\n      if (c.private && c.private.arch) {\r\n        if (props.archive) {\r\n          contacts.push(c);\r\n        } else {\r\n          archivedCount ++;\r\n        }\r\n      } else if (!props.archive) {\r\n        contacts.push(c);\r\n        unreadThreads += c.unread > 0 ? 1 : 0;\r\n      }\r\n    });\r\n\r\n    contacts.sort((a, b) => {\r\n      return (b.touched || 0) - (a.touched || 0);\r\n    });\r\n\r\n    if (archivedCount > 0) {\r\n      contacts.push({\r\n        action: 'archive',\r\n        title: messages.archived_contacts_title,\r\n        values: {count: archivedCount}\r\n      });\r\n    }\r\n\r\n    return {\r\n      contactList: contacts,\r\n      unreadThreads: unreadThreads\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.chatList != this.props.chatList ||\r\n        prevProps.archive != this.props.archive ||\r\n        prevProps.blocked != this.props.blocked) {\r\n      const newState = ContactsView.deriveStateFromProps(this.props);\r\n      this.setState(newState);\r\n      if (newState.unreadThreads != prevState.unreadThreads) {\r\n        updateFavicon(newState.unreadThreads);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleAction(action_ignored) {\r\n    this.props.onShowArchive();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormattedMessage id=\"contacts_not_found\"\r\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\r\n        description=\"HTML message shown in ContactList when no contacts are found\">{\r\n        (no_contacts) => <ContactList\r\n          connected={this.props.connected}\r\n          contacts={this.state.contactList}\r\n          emptyListMessage={no_contacts}\r\n          topicSelected={this.props.topicSelected}\r\n          myUserId={this.props.myUserId}\r\n          showOnline={true}\r\n          showUnread={true}\r\n          onTopicSelected={this.props.onTopicSelected}\r\n          showContextMenu={this.props.showContextMenu}\r\n          onAction={this.handleAction} />\r\n      }</FormattedMessage>\r\n    );\r\n  }\r\n};\r\n","// Helper functions for storing values in localStorage.\r\n// By default localStorage can store only strings, not objects or other types.\r\n\r\nexport default class LocalStorageUtil {\r\n  // Replace old object with the new one.\r\n  static setObject(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  // Get stored object.\r\n  static getObject(key) {\r\n    const value = localStorage.getItem(key);\r\n    return value && JSON.parse(value);\r\n  }\r\n\r\n  // Partially or wholly update stored object.\r\n  static updateObject(key, value) {\r\n    const oldVal = this.getObject(key);\r\n    this.setObject(key, Object.assign(oldVal || {}, value));\r\n  }\r\n\r\n  // Just a wrapper.\r\n  static removeItem(key) {\r\n    localStorage.removeItem(key);\r\n  }\r\n}\r\n","// Account registration.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\r\nimport CheckBox from '../widgets/checkbox.jsx';\r\nimport VisiblePassword from '../widgets/visible-password.jsx';\r\n\r\nimport LocalStorageUtil from '../lib/local-storage.js';\r\nimport { theCard } from '../lib/utils.js';\r\n\r\nimport { MAX_TITLE_LENGTH } from '../config.js';\r\n\r\nexport default class CreateAccountView extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      login: '',\r\n      password: '',\r\n      email: '',\r\n      fn: '', // full/formatted name\r\n      imageDataUrl: null,\r\n      errorCleared: false,\r\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\r\n    };\r\n\r\n    this.handleLoginChange = this.handleLoginChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handleFnChange = this.handleFnChange.bind(this);\r\n    this.handleImageChanged = this.handleImageChanged.bind(this);\r\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleLoginChange(e) {\r\n    this.setState({login: e.target.value});\r\n  }\r\n\r\n  handlePasswordChange(password) {\r\n    this.setState({password: password});\r\n  }\r\n\r\n  handleEmailChange(e) {\r\n    this.setState({email: e.target.value})\r\n  }\r\n\r\n  handleFnChange(e) {\r\n    this.setState({fn: e.target.value});\r\n  }\r\n\r\n  handleImageChanged(img) {\r\n    this.setState({imageDataUrl: img});\r\n  }\r\n\r\n  handleToggleSaveToken() {\r\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\r\n    this.setState({saveToken: !this.state.saveToken});\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({errorCleared: false});\r\n    this.props.onCreateAccount(\r\n      this.state.login.trim(),\r\n      this.state.password.trim(),\r\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\r\n      {'meth': 'email', 'val': this.state.email});\r\n  }\r\n\r\n  render() {\r\n    let submitClasses = 'primary';\r\n    if (this.props.disabled) {\r\n      submitClasses += ' disabled';\r\n    }\r\n\r\n    return (\r\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\r\n        <div className=\"panel-form-row\">\r\n          <div className=\"panel-form-column\">\r\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\r\n              description=\"Placeholer for username/login\">{\r\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\r\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\r\n            }</FormattedMessage>\r\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\r\n              description=\"Placeholder/prompt for entering password\">{\r\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\r\n                value={this.state.password} onFinished={this.handlePasswordChange}\r\n                required={true} />\r\n            }</FormattedMessage>\r\n          </div>\r\n          <AvatarUpload\r\n            onImageChanged={this.handleImageChanged}\r\n            onError={this.props.onError} />\r\n        </div>\r\n        <div  className=\"panel-form-row\">\r\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\r\n            description=\"Input placeholder for person's full name\">{\r\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\r\n              value={this.state.fn} onChange={this.handleFnChange} required/>\r\n          }</FormattedMessage>\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\r\n            description=\"Input placeholder for email entry\">{\r\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\r\n              value={this.state.email} onChange={this.handleEmailChange} required/>\r\n          }</FormattedMessage>\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\r\n            onChange={this.handleToggleSaveToken} />\r\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\r\n            description=\"Label for a checkbox\">{\r\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\r\n          }</FormattedMessage>\r\n        </div>\r\n        <div className=\"dialog-buttons\">\r\n          <button className={submitClasses} type=\"submit\">\r\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\r\n              description=\"Create account button [Sign Up]\" />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n","// Edit account parameters.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\r\n\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\n\r\nexport default class EditAccountView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const me = this.props.tinode.getMeTopic();\r\n    this.state = {\r\n      fullName: me.public ? me.public.fn : undefined,\r\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null)\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"scrollable-panel\">\r\n        <div className=\"panel-form-row\">\r\n          <div className=\"panel-form-column\">\r\n            <label className=\"small\">\r\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\r\n                description=\"Label for full name editing\" />\r\n            </label>\r\n            <div className=\"large\">{this.state.fullName}</div>\r\n            <div>\r\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\r\n                description=\"Label for user address (ID)\" /></label>&nbsp;\r\n              <tt>{this.props.myUserId}</tt>\r\n            </div>\r\n          </div>\r\n          <AvatarUpload\r\n            avatar={this.state.avatar}\r\n            readOnly={!this.state.owner}\r\n            uid={this.props.myUserId}\r\n            title={this.state.fullName} />\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\r\n            <i className=\"material-icons\">edit</i>&nbsp;\r\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"hr\" />\r\n        <div className=\"panel-form-column\">\r\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\r\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\r\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\r\n          </a>\r\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\r\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\r\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\r\n          </a>\r\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\r\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\r\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Edit account parameters.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\r\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\r\nimport TagManager from '../widgets/tag-manager.jsx';\r\n\r\nimport { MAX_TITLE_LENGTH } from '../config.js';\r\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\r\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\r\n\r\nexport default class AccGeneralView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const me = this.props.tinode.getMeTopic();\r\n    this.state = {\r\n      fullName: me.public ? me.public.fn : undefined,\r\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null),\r\n      tags: me.tags(),\r\n      credentials: me.getCredentials() || [],\r\n      addCredActive: false,\r\n      addCredInvalid: false,\r\n      newCred: '',\r\n      previousOnTags: me.onTagsUpdated\r\n    };\r\n\r\n    this.tnNewTags = this.tnNewTags.bind(this);\r\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\r\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\r\n    this.handleImageChanged = this.handleImageChanged.bind(this);\r\n    this.handleCredChange = this.handleCredChange.bind(this);\r\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\r\n    this.handleCredEntered = this.handleCredEntered.bind(this);\r\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const me = this.props.tinode.getMeTopic();\r\n    me.onCredsUpdated = this.tnCredsUpdated;\r\n    me.onTagsUpdated = this.tnNewTags;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const me = this.props.tinode.getMeTopic();\r\n    me.onTagsUpdated = this.state.previousOnTags;\r\n    me.onCredsUpdated = undefined;\r\n  }\r\n\r\n  tnNewTags(tags) {\r\n    this.setState({tags: tags});\r\n  }\r\n\r\n  tnCredsUpdated(creds) {\r\n    this.setState({credentials: creds || []});\r\n  }\r\n\r\n  handleFullNameUpdate(fn) {\r\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\r\n    if (fn) {\r\n      this.setState({fullName: fn});\r\n      this.props.onUpdateAccount(undefined, theCard(fn, null));\r\n    }\r\n  }\r\n\r\n  handleImageChanged(img) {\r\n    this.setState({avatar: img});\r\n    this.props.onUpdateAccount(undefined, theCard(null, img || Tinode.DEL_CHAR));\r\n  }\r\n\r\n  handleCredChange(e) {\r\n    this.setState({newCred: e.target.value, addCredInvalid: false});\r\n  }\r\n\r\n  handleCredKeyDown(e) {\r\n    if (e.keyCode === 27) {\r\n      // Escape pressed\r\n      this.setState({newCred: '', addCredActive: false});\r\n    } else if (e.keyCode === 13) {\r\n      // Enter pressed\r\n      this.handleCredEntered(e);\r\n    }\r\n  }\r\n\r\n  handleCredEntered(e) {\r\n    let value = this.state.newCred.trim();\r\n    if (!value) {\r\n      this.setState({addCredActive: false, addCredInvalid: false});\r\n      return;\r\n    }\r\n\r\n    let val = asPhone(value);\r\n    let method;\r\n    if (val) {\r\n      method = 'tel';\r\n    } else {\r\n      val = asEmail(value);\r\n      if (val) {\r\n        method = 'email';\r\n      }\r\n    }\r\n    if (method) {\r\n      this.props.onCredAdd(method, val);\r\n      this.setState({addCredActive: false, newCred: ''});\r\n    } else {\r\n      this.setState({addCredInvalid: true});\r\n    }\r\n  }\r\n\r\n  handleTagsUpdated(tags) {\r\n    // Check if tags have actually changed.\r\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\r\n      return;\r\n    }\r\n    this.props.onUpdateTags(tags);\r\n  }\r\n\r\n  render() {\r\n    const credentials = [];\r\n    this.state.credentials.map((cred) => {\r\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\r\n        <span > {!cred.done ?\r\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\r\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\r\n                description=\"Validate credentail call to action\" />\r\n            </a>\r\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\r\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\r\n    });\r\n\r\n    return (\r\n      <div className=\"scrollable-panel\">\r\n        <div className=\"panel-form-row\">\r\n          <div className=\"panel-form-column\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\r\n              description=\"Label for full name editing\" /></label>\r\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\r\n              description=\"Input placeholder for person's full name\">{\r\n              (full_name_placeholder) => <InPlaceEdit\r\n                placeholder={full_name_placeholder}\r\n                value={this.state.fullName}\r\n                onFinished={this.handleFullNameUpdate} />\r\n            }</FormattedMessage></div>\r\n          </div>\r\n          <AvatarUpload\r\n            avatar={this.state.avatar}\r\n            uid={this.props.myUserId}\r\n            title={this.state.fullName}\r\n            onImageChanged={this.handleImageChanged}\r\n            onError={this.props.onError} />\r\n        </div>\r\n        <div className=\"hr\" />\r\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\r\n          description=\"Section title for TagManager\">{\r\n          (title_tag_manager) => <TagManager\r\n            title={title_tag_manager}\r\n            activated={false}\r\n            tags={this.state.tags}\r\n            tinode={this.props.tinode}\r\n            onSubmit={this.handleTagsUpdated} />\r\n        }</FormattedMessage>\r\n        <div className=\"hr\" />\r\n        <div className=\"panel-form-column\">\r\n          <label className=\"small\">\r\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\r\n            description=\"Label for user contacts\" />\r\n          </label>\r\n          <div className=\"quoted\">\r\n            {credentials}\r\n            {this.state.addCredActive ?\r\n              <input type=\"text\" value={this.state.value}\r\n                className={this.state.addCredInvalid ? 'invalid' : null}\r\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\r\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\r\n              : null}\r\n            <div>\r\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\r\n                <i className=\"material-icons\">add</i>\r\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\r\n              </a></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Edit account parameters.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport CheckBox from '../widgets/checkbox.jsx';\r\n\r\nexport default class EditAccountView extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\r\n  }\r\n\r\n  handleCheckboxClick(what, checked) {\r\n    if (what == 'sound') {\r\n      this.props.onToggleMessageSounds(checked);\r\n    } else if (what == 'alert') {\r\n      this.props.onTogglePushNotifications(checked);\r\n    } else if (what == 'incognito') {\r\n      this.props.onToggleIncognitoMode(checked);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"scrollable-panel\">\r\n          <div className=\"panel-form-row\">\r\n            <label htmlFor=\"message-sound\">\r\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\r\n                description=\"Label for message sounds toggle\" />\r\n            </label>\r\n            <CheckBox name=\"sound\" id=\"message-sound\"\r\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\r\n          </div>\r\n          <div className=\"panel-form-row\">\r\n            <label htmlFor=\"desktop-alerts\">\r\n            {this.props.desktopAlertsEnabled ?\r\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\r\n                description=\"Label for push notifications switch\" />\r\n              :\r\n              <FormattedMessage id=\"label_push_notifications_disabled\"\r\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\r\n                description=\"Label for push notifications switch\" />\r\n            }\r\n            </label>\r\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\r\n              checked={this.props.desktopAlerts}\r\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\r\n          </div>\r\n          <div className=\"panel-form-row\">\r\n            <label htmlFor=\"incognito-mode\">\r\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\r\n                description=\"Label for incognito mode toggle\" />\r\n            </label>\r\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\r\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n","// Edit account parameters.\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\r\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\r\n\r\nconst messages = defineMessages({\r\n  delete_account: {\r\n    id: 'delete_account',\r\n    defaultMessage: 'Delete account',\r\n    description: 'Title for delete account warning'\r\n  },\r\n  delete_account_warning: {\r\n    id: 'delete_account_arning',\r\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\r\n    description: 'Warning message when deleting an account'\r\n  }\r\n});\r\n\r\nclass AccSecurityView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const me = this.props.tinode.getMeTopic();\r\n    let blockedCount = 0;\r\n    me.contacts((c) => {\r\n      if (c.acs && !c.acs.isJoiner()) {\r\n        blockedCount ++;\r\n      }\r\n    });\r\n    const defacs = me.getDefaultAccess();\r\n    this.state = {\r\n      auth: defacs ? defacs.auth : null,\r\n      anon: defacs ? defacs.anon : null,\r\n      showPermissionEditorFor: undefined,\r\n      blockedCount: blockedCount,\r\n    };\r\n\r\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\r\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\r\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\r\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\r\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\r\n  }\r\n\r\n  handlePasswordUpdate(pwd) {\r\n    this.setState({password: pwd});\r\n    this.props.onUpdateAccount(pwd);\r\n  }\r\n\r\n  handleLaunchPermissionsEditor(which) {\r\n    this.setState({\r\n      showPermissionEditorFor: which,\r\n      editedPermissions: this.state[which]\r\n    });\r\n  }\r\n\r\n  handleHidePermissionsEditor() {\r\n    this.setState({showPermissionEditorFor: undefined});\r\n  }\r\n\r\n  handlePermissionsChanged(perm) {\r\n    let defacs = {};\r\n    defacs[this.state.showPermissionEditorFor] = perm;\r\n    this.props.onUpdateAccount(undefined, undefined, defacs);\r\n\r\n    let newState = {showPermissionEditorFor: undefined};\r\n    newState[this.state.showPermissionEditorFor] = perm;\r\n    this.setState(newState);\r\n  }\r\n\r\n  handleDeleteAccount(e) {\r\n    e.preventDefault();\r\n    const {formatMessage} = this.props.intl;\r\n    this.props.onShowAlert(\r\n      formatMessage(messages.delete_account), // title\r\n      formatMessage(messages.delete_account_warning), // content\r\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\r\n      null, // use default text \"OK\"\r\n      true, // Show Reject button\r\n      null  // use default text \"Cancel\"\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>{this.state.showPermissionEditorFor ?\r\n        <PermissionsEditor\r\n          mode={this.state.editedPermissions}\r\n          skip=\"O\"\r\n          onSubmit={this.handlePermissionsChanged}\r\n          onCancel={this.handleHidePermissionsEditor} />\r\n        :\r\n        <div className=\"scrollable-panel\">\r\n          <div className=\"panel-form-column\">\r\n            <label className=\"small\">\r\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\r\n                  description=\"Label for password editing\" />\r\n            </label>\r\n            <div>\r\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\r\n                description=\"Message in editor while password is unchanged\">{\r\n                (password_unchanged) => <InPlaceEdit\r\n                  placeholder={password_unchanged}\r\n                  type=\"password\"\r\n                  onFinished={this.handlePasswordUpdate} />\r\n              }</FormattedMessage>\r\n            </div>\r\n          </div>\r\n          <div className=\"hr\" />\r\n          <div className=\"panel-form-column\">\r\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\r\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\r\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\r\n            </a>\r\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\r\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\r\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\r\n            </a>\r\n          </div>\r\n          <div className=\"hr\" />\r\n          <div className=\"panel-form-column\">\r\n            <div>\r\n              <label className=\"small\">\r\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\r\n                description=\"Label for default access mode\" />\r\n              </label>\r\n            </div>\r\n            <div className=\"quoted\">\r\n              <div>Auth: <tt className=\"clickable\"\r\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\r\n              <div>Anon: <tt className=\"clickable\"\r\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\r\n            </div>\r\n          </div>\r\n          {this.state.blockedCount > 0 ?\r\n            <>\r\n              <div className=\"hr\" />\r\n              <div className=\"panel-form-row\">\r\n                <i className=\"material-icons\">block</i>&nbsp;\r\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\r\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\r\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\r\n                </a>\r\n              </div>\r\n            </>\r\n            : null }\r\n        </div>\r\n      }</React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(AccSecurityView);\r\n","// Edit account parameters.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\r\n\r\nexport default class AccSupportView extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"scrollable-panel\">\r\n        <div className=\"panel-form-column\">\r\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\r\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\r\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\r\n          </a>\r\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\r\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\r\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\r\n          </a>\r\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\r\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\r\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"hr\" />\r\n        <div className=\"panel-form-column\">\r\n          <div className=\"panel-form-row\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\r\n              description=\"Label for a client version\" /></label>\r\n            {APP_NAME}\r\n          </div>\r\n          <div className=\"panel-form-row\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\r\n            {Tinode.getLibrary()}\r\n          </div>\r\n          <div className=\"panel-form-row\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\r\n              description=\"Label for a server version\" /></label>\r\n            {this.props.serverVersion}\r\n          </div>\r\n          <div className=\"panel-form-row\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\r\n            {this.props.serverAddress}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Login form.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport CheckBox from '../widgets/checkbox.jsx';\r\nimport VisiblePassword from '../widgets/visible-password.jsx';\r\n\r\nimport LocalStorageUtil from '../lib/local-storage.js';\r\n\r\nexport default class LoginView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      login: props.login,\r\n      password: '',\r\n      token: null,\r\n      id_device: null,\r\n      hostName: props.serverAddress,\r\n      saveToken: props.persist\r\n    };\r\n    this.handleLoginChange = this.handleLoginChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleTokenChange = this.handleTokenChange.bind(this);\r\n    this.handleIdDeviceChange = this.handleIdDeviceChange.bind(this);\r\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleLoginChange(e) {\r\n    console.log('user on change: ', e.target.value)\r\n    this.setState({login: e.target.value});\r\n  }\r\n\r\n  handlePasswordChange(e) {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  handleTokenChange(e) {\r\n    console.log('token on change: ', e.target.value)\r\n    this.setState({token: e.target.value});\r\n    localStorage.setItem(\"access_token\", e.target.value);\r\n  }\r\n\r\n  handleIdDeviceChange(e) {\r\n    console.log('id_device on change: ', e.target.value)\r\n    this.setState({id_device: e.target.value});\r\n    localStorage.setItem(\"id_device\", e.target.value);\r\n  }\r\n\r\n  handleToggleSaveToken() {\r\n    this.props.onPersistenceChange(!this.state.saveToken);\r\n    this.setState({saveToken: !this.state.saveToken});\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim(), this.state.token.trim(), this.state.id_device.trim());\r\n  }\r\n\r\n  render() {\r\n    let submitClasses = 'primary';\r\n    if (this.props.disabled) {\r\n      submitClasses += ' disabled';\r\n    }\r\n\r\n    return (\r\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\r\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\r\n          description=\"Placeholer for username/login\">\r\n        {\r\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\r\n            placeholder={login_prompt}\r\n            autoComplete=\"username\"\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"none\"\r\n            value={this.state.login}\r\n            onChange={this.handleLoginChange}\r\n            required autoFocus />\r\n        }\r\n        </FormattedMessage>\r\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\r\n          description=\"Placeholder/prompt for entering password\">\r\n        {\r\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\r\n            placeholder={password_prompt}\r\n            autoComplete=\"current-password\"\r\n            value={this.state.password}\r\n            onChange={this.handlePasswordChange}\r\n            required={true} />\r\n        }\r\n        </FormattedMessage>\r\n\r\n\r\n        <FormattedMessage id=\"token_prompt\" defaultMessage=\"Token\"\r\n          description=\"Placeholer for token\">\r\n        {\r\n          (token_prompt) => <input type=\"text\" id=\"inputToken\"\r\n            placeholder={token_prompt}\r\n            autoComplete=\"token\"\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"none\"\r\n            value={this.state.token}\r\n            onChange={this.handleTokenChange}\r\n            required autoFocus />\r\n        }\r\n        </FormattedMessage>\r\n        <FormattedMessage id=\"id_device_prompt\" defaultMessage=\"ID Device\"\r\n          description=\"Placeholer for id_device\">\r\n        {\r\n          (id_device_prompt) => <input type=\"text\" id=\"inputIdDevice\"\r\n            placeholder={id_device_prompt}\r\n            autoComplete=\"id_device\"\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"none\"\r\n            value={this.state.id_device}\r\n            onChange={this.handleIdDeviceChange}\r\n            required autoFocus />\r\n        }\r\n        </FormattedMessage>\r\n\r\n\r\n        <div className=\"panel-form-row\">\r\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\r\n            onChange={this.handleToggleSaveToken} />\r\n          <label htmlFor=\"save-token\">&nbsp;\r\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\r\n              description=\"Label for a checkbox\" />\r\n          </label>\r\n          <a href=\"#reset\">\r\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\r\n              description=\"Link to Reset password form\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"dialog-buttons\">\r\n          <button className={submitClasses} type=\"submit\">\r\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\r\n              description=\"Button [Sign In]\" />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n/* END Login */\r\n","import React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n  invalid_id: {\r\n    id: 'error_invalid_id',\r\n    defaultMessage: 'Invalid ID',\r\n    description: 'Error message'\r\n  }\r\n});\r\n\r\nclass NewTopicById extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      groupId: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({groupId: e.target.value});\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.groupId) {\r\n      const name = this.state.groupId.trim();\r\n      const prefix = name.substr(0, 3);\r\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\r\n        this.props.onSubmit(name);\r\n      } else {\r\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel-form\">\r\n        <div className=\"panel-form-row\">\r\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\r\n          description=\"Prompt for entering user or group ID\">{\r\n          (prompt) => <input type=\"text\" placeholder={prompt}\r\n            value={this.state.groupId} onChange={this.handleChange}\r\n            onKeyPress={this.handleKeyPress} required autoFocus />\r\n        }</FormattedMessage>\r\n        </div>\r\n        <div className=\"dialog-buttons\">\r\n          <button className=\"primary\" onClick={this.handleSubmit}>\r\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\r\n              description=\"Button [Subscribe]\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(NewTopicById);\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport AvatarUpload from './avatar-upload.jsx';\r\nimport CheckBox from './checkbox.jsx';\r\nimport TagManager from './tag-manager.jsx';\r\n\r\nimport { MAX_TITLE_LENGTH } from '../config.js';\r\n\r\nexport default class NewTopicGroup extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fn: '', // full/formatted name\r\n      private: '',\r\n      imageDataUrl: null,\r\n      tags: [],\r\n      isChannel: false\r\n    };\r\n\r\n    this.handleFnChange = this.handleFnChange.bind(this);\r\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\r\n    this.handleImageChanged = this.handleImageChanged.bind(this);\r\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\r\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleFnChange(e) {\r\n    this.setState({fn: e.target.value});\r\n  }\r\n\r\n  handlePrivateChange(e) {\r\n    this.setState({private: e.target.value});\r\n  }\r\n\r\n  handleImageChanged(img) {\r\n    this.setState({imageDataUrl: img});\r\n  }\r\n\r\n  handleTagsChanged(tags) {\r\n    this.setState({tags: tags});\r\n  }\r\n\r\n  handleChannelToggle() {\r\n    this.setState({isChannel: !this.state.isChannel});\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\r\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\r\n    if (fn) {\r\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let submitClasses = 'primary';\r\n    if (this.props.disabled) {\r\n      submitClasses += ' disabled';\r\n    }\r\n    return (\r\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\r\n        <div className=\"panel-form-row\">\r\n          <div className=\"panel-form-column\">\r\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\r\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\r\n                description=\"Label for editing topic name\" />\r\n            </label>\r\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\r\n              description=\"Prompt for entering topic name\">{\r\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\r\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\r\n            }</FormattedMessage>\r\n            <br />\r\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\r\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\r\n                description=\"Label for editing 'private'\" />\r\n            </label>\r\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\r\n              description=\"Placeholder for editing 'private'\">{\r\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\r\n                value={this.state.private} onChange={this.handlePrivateChange} />\r\n            }</FormattedMessage>\r\n          </div>\r\n          <AvatarUpload\r\n            onError={this.props.onError}\r\n            onImageChanged={this.handleImageChanged} />\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\r\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\r\n            defaultMessage=\"This is a channel\"\r\n            description=\"Checkbox label when creating a channel\" /></label>\r\n        </div>\r\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\r\n          description=\"Section title for TagManager\">{\r\n          (title) => <TagManager\r\n            tags={this.state.tags}\r\n            activated={true}\r\n            onTagsChanged={this.handleTagsChanged}\r\n            tinode={this.props.tinode}\r\n            title={title} />\r\n        }</FormattedMessage>\r\n        <div className=\"dialog-buttons\">\r\n          <button className={submitClasses}>\r\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\r\n              description=\"Button [Create]\" />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nexport default class SearchContacts extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      edited: false,\r\n      search: ''\r\n    };\r\n\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.edited) {\r\n      this.setState({search: '', edited: false});\r\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\r\n    }\r\n  }\r\n\r\n  handleSearchChange(e) {\r\n    this.setState({search: e.target.value});\r\n  }\r\n\r\n  handleSearch(e) {\r\n    e.preventDefault();\r\n    var query = this.state.search.trim();\r\n    this.setState({edited: (query.length > 0)});\r\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\r\n  }\r\n\r\n  handleClear(e) {\r\n    e.preventDefault();\r\n    if (this.state.edited) {\r\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\r\n    }\r\n    this.setState({search: '', edited: false});\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleSearch(e);\r\n    } else if (e.key === 'Escape') {\r\n      this.handleClear();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel-form\">\r\n        <div className=\"panel-form-row\">\r\n          <i className=\"material-icons search\">search</i>\r\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\r\n            description=\"Placeholder in contacts search field\">{\r\n            (search_placeholder) => <input className=\"search\" type=\"text\"\r\n              placeholder={search_placeholder}\r\n              value={this.state.search} onChange={this.handleSearchChange}\r\n              onKeyDown={this.handleKeyDown} required autoFocus />\r\n          }</FormattedMessage>\r\n          <a href=\"#\" onClick={this.handleClear}>\r\n            <i className=\"material-icons\">close</i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Create new topic and invite users or send an invite.\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport ContactList from '../widgets/contact-list.jsx';\r\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\r\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\r\nimport SearchContacts from '../widgets/search-contacts.jsx';\r\n\r\nimport HashNavigation from '../lib/navigation.js';\r\nimport { theCard } from '../lib/utils.js';\r\n\r\nconst messages = defineMessages({\r\n  search_for_contacts: {\r\n    id: \"search_for_contacts\",\r\n    defaultMessage: \"Use search to find contacts\",\r\n    description: \"Text shown in contacts view when user entered no search query.\"\r\n  },\r\n  search_no_results: {\r\n    id: \"search_no_results\",\r\n    defaultMessage: \"Search returned no results\",\r\n    description: \"Text shown in contacts view when query returned no results.\"\r\n  }\r\n});\r\n\r\nclass NewTopicView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabSelected: 'p2p',\r\n      searchQuery: null\r\n    };\r\n\r\n    this.handleTabClick = this.handleTabClick.bind(this);\r\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\r\n    this.handleContactSelected = this.handleContactSelected.bind(this);\r\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\r\n    this.handleGroupByID = this.handleGroupByID.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onInitFind();\r\n  }\r\n\r\n  handleTabClick(e) {\r\n    e.preventDefault();\r\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\r\n    this.setState({tabSelected: e.currentTarget.dataset.id});\r\n  }\r\n\r\n  handleSearchContacts(query) {\r\n    this.props.onSearchContacts(query);\r\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\r\n  }\r\n\r\n  handleContactSelected(sel) {\r\n    if (this.state.tabSelected === 'p2p') {\r\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\r\n      this.props.onCreateTopic(sel);\r\n    }\r\n  }\r\n\r\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\r\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\r\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\r\n  }\r\n\r\n  handleGroupByID(topicName) {\r\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\r\n    this.props.onCreateTopic(topicName);\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\r\n      messages.search_no_results : messages.search_for_contacts);\r\n    return (\r\n      <div className=\"flex-column\">\r\n        <ul className=\"tabbar\">\r\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\r\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\r\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\r\n                description=\"Tab title Find\" />\r\n            </a>\r\n          </li>\r\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\r\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\r\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\r\n                description=\"Tab title New Group\" />\r\n            </a>\r\n          </li>\r\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\r\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\r\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\r\n                description=\"Tab title Find topic by ID\" />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        {this.state.tabSelected === 'grp' ?\r\n          <NewTopicGroup\r\n            tinode={this.props.tinode}\r\n            onSubmit={this.handleNewGroupSubmit} /> :\r\n          this.state.tabSelected === 'byid' ?\r\n            <NewTopicById\r\n              onSubmit={this.handleGroupByID}\r\n              onError={this.props.onError} /> :\r\n            <div className=\"flex-column\">\r\n              <SearchContacts\r\n                type=\"p2p\"\r\n                onSearchContacts={this.handleSearchContacts} />\r\n              <ContactList\r\n                contacts={this.props.searchResults}\r\n                myUserId={this.props.myUserId}\r\n                emptyListMessage={no_contacts_placeholder}\r\n                showOnline={false}\r\n                showUnread={false}\r\n                showContextMenu={false}\r\n                onTopicSelected={this.handleContactSelected} />\r\n            </div>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(NewTopicView);\r\n","// A password reset form.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport VisiblePassword from '../widgets/visible-password.jsx';\r\n\r\nimport HashNavigation from '../lib/navigation.js';\r\n\r\nexport default class PasswordResetView extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      sent: false\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\r\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.token) {\r\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\r\n    } else if (this.state.sent) {\r\n      this.props.onCancel();\r\n    } else {\r\n      const email = this.state.email.trim();\r\n      this.setState({email: email});\r\n      this.props.onRequest('email', email).then(() => {\r\n        this.setState({sent: true});\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEmailChange(e) {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  handlePasswordChange(e) {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\r\n        {(this.state.token && this.state.scheme) ?\r\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\r\n            description=\"Placeholder for entering new password\">{\r\n            (placeholder) => <VisiblePassword\r\n              placeholder={placeholder}\r\n              autoComplete=\"new-password\"\r\n              value={this.state.password}\r\n              required={true} autoFocus={true}\r\n              onChange={this.handlePasswordChange} />\r\n          }</FormattedMessage>\r\n        : this.state.sent ?\r\n          <>\r\n            <br/>\r\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\r\n            <br/>\r\n            <center><FormattedMessage id=\"password_reset_email_sent\"\r\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\r\n              values={{ email: <tt>{this.state.email}</tt> }}\r\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\r\n          </>\r\n        :\r\n          <>\r\n            <label htmlFor=\"inputEmail\">\r\n              <FormattedMessage id=\"label_reset_password\"\r\n                defaultMessage=\"Send a password reset email:\"\r\n                description=\"Label for password reset field\" />\r\n            </label>\r\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\r\n              description=\"Placeholder for entering email\">{\r\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\r\n                placeholder={placeholder}\r\n                autoComplete=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleEmailChange}\r\n                required autoFocus />\r\n            }</FormattedMessage>\r\n          </>\r\n        }\r\n        <div className=\"dialog-buttons\">\r\n          <button className=\"primary\" type=\"submit\">{\r\n            (this.state.token && this.state.scheme) ?\r\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\r\n            : this.state.sent ?\r\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\r\n              description=\"Button [OK]\" />\r\n            :\r\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\r\n              description=\"Button [Send request]\" />\r\n          }</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { KNOWN_HOSTS } from '../config.js';\r\n\r\n/* Combobox for selecting host name */\r\n\r\nexport default class HostSelector extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hostName: props.serverAddress,\r\n      changed: false\r\n    };\r\n\r\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\r\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\r\n  }\r\n\r\n  handleHostNameChange(e) {\r\n    this.setState({hostName: e.target.value, changed: true});\r\n  }\r\n\r\n  handleEditingFinished() {\r\n    if (this.state.changed) {\r\n      this.setState({changed: false});\r\n      this.props.onServerAddressChange(this.state.hostName.trim());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var hostOptions = [];\r\n    for (let key in KNOWN_HOSTS) {\r\n      let item = KNOWN_HOSTS[key];\r\n      hostOptions.push(\r\n        <option key={item} value={item} />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"panel-form-row\">\r\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\r\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\r\n          onBlur={this.handleEditingFinished} required />\r\n        <datalist id=\"known-hosts\">\r\n          {hostOptions}\r\n        </datalist>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Tinode config panel.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport HostSelector from '../widgets/host-selector.jsx';\r\n\r\nexport default class SettingsView extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      transport: props.transport || 'lp',\r\n      serverAddress: props.serverAddress,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\r\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onUpdate({\r\n      transport: this.state.transport,\r\n      serverAddress: this.state.serverAddress\r\n    });\r\n  }\r\n\r\n  handleTransportSelected(e) {\r\n    this.setState({transport: e.currentTarget.value});\r\n  }\r\n\r\n  handleServerAddressChange(name) {\r\n    this.setState({serverAddress: name});\r\n  }\r\n\r\n  render() {\r\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\r\n    const transportOptions = [];\r\n    ['lp'].map((item) => {\r\n      const id = 'transport-' + item;\r\n      const name = names[item];\r\n      transportOptions.push(\r\n        <li key={item}>\r\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\r\n            checked={this.state.transport === item}\r\n            onChange={this.handleTransportSelected} />\r\n          <label htmlFor={id}>{name}</label>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\r\n        <div className=\"panel-form-row\">\r\n          <label className=\"small\">\r\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\r\n              description=\"Label for server selector in SettingsView\" />\r\n          </label>\r\n        </div>\r\n        <HostSelector serverAddress={this.state.serverAddress}\r\n          onServerAddressChange={this.handleServerAddressChange} />\r\n        <div className=\"panel-form-row\">\r\n          <label className=\"small\">\r\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\r\n              description=\"Label for wire transport selection in SettingsView\" />\r\n          </label>\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n          <ul className=\"quoted\">\r\n            {transportOptions}\r\n          </ul>\r\n        </div>\r\n        <div className=\"dialog-buttons\">\r\n          <button type=\"submit\" className=\"primary\">\r\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\r\n              description=\"Button [Update]\" />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n","// ValidationView: panel for confirming credentials, like email or phone.\r\nimport React from 'react';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n  phone: {\r\n    id: 'phone_dative',\r\n    defaultMessage: 'phone',\r\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\r\n  },\r\n  email: {\r\n    id: 'email_dative',\r\n    defaultMessage: 'email',\r\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\r\n  }\r\n});\r\n\r\nclass ValidationView extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      code: props.credCode || ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({code: e.target.value});\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleSubmit(e);\r\n    } else if (e.key == 'Escape') {\r\n      this.handleCancel(e);\r\n    }\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.code && this.state.code.trim()) {\r\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\r\n    }\r\n  }\r\n\r\n  handleCancel(e) {\r\n    e.preventDefault();\r\n    this.props.onCancel();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formatMessage } = this.props.intl;\r\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\r\n    let method = methods[this.props.credMethod] || this.props.credMethod;\r\n    return (\r\n      <div className=\"panel-form\">\r\n        <div className=\"panel-form-row\">\r\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\r\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\r\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\r\n              description=\"Request to enter confirmation code\"\r\n              values={{method: method}} />\r\n          </label>\r\n        </div>\r\n        <div className=\"panel-form-row\">\r\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\r\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\r\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\r\n            placeholder={numbers_only}\r\n            value={this.state.code} onChange={this.handleChange}\r\n            onKeyPress={this.handleKeyPress} required />\r\n        }</FormattedMessage>\r\n        </div>\r\n        <div className=\"dialog-buttons\">\r\n          <button className=\"primary\" onClick={this.handleSubmit}>\r\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\r\n          </button>\r\n          <button className=\"secondary\" onClick={this.handleCancel}>\r\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(ValidationView);\r\n","import React from 'react';\r\nimport { defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport ErrorPanel from '../widgets/error-panel.jsx';\r\nimport LoadSpinner from '../widgets/load-spinner.jsx';\r\nimport SideNavbar from '../widgets/side-navbar.jsx';\r\n\r\nimport ContactsView from './contacts-view.jsx';\r\nimport CreateAccountView from './create-account-view.jsx';\r\nimport EditAccountView from './edit-account-view.jsx';\r\nimport AccGeneralView from './acc-general-view.jsx';\r\nimport AccNotificationsView from './acc-notifications-view.jsx';\r\nimport AccSecurityView from './acc-security-view.jsx';\r\nimport AccSupportView from './acc-support-view.jsx';\r\nimport LoginView from './login-view.jsx';\r\nimport NewTopicView from './new-topic-view.jsx';\r\nimport PasswordResetView from './password-reset-view.jsx';\r\nimport SettingsView from './settings-view.jsx';\r\nimport ValidationView from './validation-view.jsx';\r\n\r\n// Panel titles for translation.\r\nconst messages = defineMessages({\r\n  login: {\r\n    id: 'sidepanel_title_login',\r\n    description: 'Sidepanel title for LoginView.',\r\n    defaultMessage: 'Sign In'\r\n  },\r\n  register: {\r\n    id: 'sidepanel_title_register',\r\n    description: 'Sidepanel title for CreateAccountView.',\r\n    defaultMessage: 'Create Account'\r\n  },\r\n  settings: {\r\n    id: 'sidepanel_title_settings',\r\n    description: 'Sidepanel title for SettingsView.',\r\n    defaultMessage: 'Settings'\r\n  },\r\n  edit: {\r\n    id: 'sidepanel_title_account_settings',\r\n    description: 'Sidepanel title for EditAccountView.',\r\n    defaultMessage: 'Account Settings'\r\n  },\r\n  general: {\r\n    id: 'sidepanel_title_acc_general',\r\n    description: 'Sidepanel title for AccGeneralView.',\r\n    defaultMessage: 'General'\r\n  },\r\n  security: {\r\n    id: 'sidepanel_title_acc_security',\r\n    description: 'Sidepanel title for AccSecurityView.',\r\n    defaultMessage: 'Security'\r\n  },\r\n  notif: {\r\n    id: 'sidepanel_title_acc_notifications',\r\n    description: 'Sidepanel title for AccNotificationsView.',\r\n    defaultMessage: 'Notifications'\r\n  },\r\n  support: {\r\n    id: 'sidepanel_title_acc_support',\r\n    description: 'Sidepanel title for AccSupportView.',\r\n    defaultMessage: 'Support'\r\n  },\r\n  newtpk: {\r\n    id: 'sidepanel_title_newtpk',\r\n    description: 'Sidepanel title for NewTopicView.',\r\n    defaultMessage: 'Start New Chat'\r\n  },\r\n  cred: {\r\n    id: 'sidepanel_title_cred',\r\n    description: 'Sidepanel title for ValidationView.',\r\n    defaultMessage: 'Confirm Credentials'\r\n  },\r\n  reset: {\r\n    id: 'sidepanel_title_reset',\r\n    description: 'Sidepanel title for PasswordResetView.',\r\n    defaultMessage: 'Reset Password'\r\n  },\r\n  archive: {\r\n    id: 'sidepanel_title_archive',\r\n    description: 'Sidepanel title for ContactsView-Archive.',\r\n    defaultMessage: 'Archived Chats'\r\n  },\r\n  blocked: {\r\n    id: 'sidepanel_title_blocked',\r\n    description: 'Sidepanel title for ContactsView-Blocked.',\r\n    defaultMessage: 'Blocked Chats'\r\n  }\r\n});\r\n\r\nclass SidepanelView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNewTopic = this.handleNewTopic.bind(this);\r\n  }\r\n\r\n  handleNewTopic() {\r\n    this.props.onBasicNavigate('newtpk');\r\n  }\r\n\r\n  render() {\r\n    const {formatMessage} = this.props.intl;\r\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\r\n\r\n    let title, avatar;\r\n    if (view == 'contacts') {\r\n      title = this.props.title;\r\n      avatar = this.props.avatar ? this.props.avatar : true;\r\n    } else {\r\n      title = formatMessage(messages[view]);\r\n      avatar = false;\r\n    }\r\n\r\n    let onCancel;\r\n    if (['login', 'contacts'].indexOf(view) == -1) {\r\n      onCancel = this.props.onCancel;\r\n    }\r\n\r\n    return (\r\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\r\n        <SideNavbar\r\n          state={view}\r\n          title={title}\r\n          avatar={avatar}\r\n          myUserId={this.props.myUserId}\r\n          onSignUp={this.props.onSignUp}\r\n          onSettings={this.props.onSettings}\r\n          onNewTopic={this.handleNewTopic}\r\n          onCancel={onCancel} />\r\n\r\n        <ErrorPanel\r\n          level={this.props.errorLevel}\r\n          text={this.props.errorText}\r\n          action={this.props.errorAction}\r\n          actionText={this.props.errorActionText}\r\n          onClearError={this.props.onError} />\r\n\r\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\r\n\r\n        {view === 'login' ?\r\n          <LoginView\r\n            login={this.props.login}\r\n            disabled={this.props.loginDisabled}\r\n            persist={this.props.persist}\r\n            onLogin={this.props.onLoginRequest}\r\n            onPersistenceChange={this.props.onPersistenceChange} /> :\r\n\r\n          view === 'register' ?\r\n          <CreateAccountView\r\n            onCreateAccount={this.props.onCreateAccount}\r\n            onCancel={this.props.onCancel}\r\n            onError={this.props.onError} /> :\r\n\r\n          view === 'settings' ?\r\n          <SettingsView\r\n            transport={this.props.transport}\r\n            serverAddress={this.props.serverAddress}\r\n            onCancel={this.props.onCancel}\r\n            onUpdate={this.props.onGlobalSettings} /> :\r\n\r\n          view === 'edit' ?\r\n          <EditAccountView\r\n            tinode={this.props.tinode}\r\n            myUserId={this.props.myUserId}\r\n            onBasicNavigate={this.props.onBasicNavigate} /> :\r\n\r\n          view === 'general' ?\r\n          <AccGeneralView\r\n            tinode={this.props.tinode}\r\n            myUserId={this.props.myUserId}\r\n            onUpdateAccount={this.props.onUpdateAccount}\r\n            onUpdateTags={this.props.onUpdateAccountTags}\r\n            onCredAdd={this.props.onCredAdd}\r\n            onCredDelete={this.props.onCredDelete}\r\n            onCredConfirm={this.props.onCredConfirm}\r\n            onBasicNavigate={this.props.onBasicNavigate}\r\n            onError={this.props.onError} /> :\r\n\r\n          view === 'notif' ?\r\n          <AccNotificationsView\r\n            messageSounds={this.props.messageSounds}\r\n            desktopAlerts={this.props.desktopAlerts}\r\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\r\n            incognitoMode={this.props.incognitoMode}\r\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\r\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\r\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\r\n\r\n          view === 'security' ?\r\n          <AccSecurityView\r\n            tinode={this.props.tinode}\r\n            onUpdateAccount={this.props.onUpdateAccount}\r\n            onLogout={this.props.onLogout}\r\n            onDeleteAccount={this.props.onDeleteAccount}\r\n            onShowAlert={this.props.onShowAlert}\r\n            onShowBlocked={this.props.onShowBlocked} /> :\r\n\r\n          view === 'support' ?\r\n          <AccSupportView\r\n            serverAddress={this.props.serverAddress}\r\n            serverVersion={this.props.serverVersion} /> :\r\n\r\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\r\n          <ContactsView\r\n            tinode={this.props.tinode}\r\n            myUserId={this.props.myUserId}\r\n            connected={this.props.connected}\r\n            topicSelected={this.props.topicSelected}\r\n            archive={view == 'archive'}\r\n            blocked={view == 'blocked'}\r\n            chatList={this.props.chatList}\r\n            showContextMenu={this.props.showContextMenu}\r\n            onTopicSelected={this.props.onTopicSelected}\r\n            onShowArchive={this.props.onShowArchive} /> :\r\n\r\n          view === 'newtpk' ?\r\n          <NewTopicView\r\n            tinode={this.props.tinode}\r\n            searchResults={this.props.searchResults}\r\n            onInitFind={this.props.onInitFind}\r\n            onSearchContacts={this.props.onSearchContacts}\r\n            onCreateTopic={this.props.onCreateTopic}\r\n            onError={this.props.onError} /> :\r\n\r\n          view === 'cred' ?\r\n          <ValidationView\r\n            credCode={this.props.credCode}\r\n            credMethod={this.props.credMethod}\r\n            onSubmit={this.props.onValidateCredentials}\r\n            onCancel={this.props.onCancel}\r\n            onError={this.props.onError} /> :\r\n\r\n          view === 'reset' ?\r\n          <PasswordResetView\r\n            onRequest={this.props.onPasswordResetRequest}\r\n            onReset={this.props.onResetPassword} /> :\r\n          null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(SidepanelView);\r\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\r\n\r\n// Detect server address from the URL\r\nexport function detectServerAddress() {\r\n  let host = DEFAULT_HOST;\r\n  if (typeof window.location == 'object') {\r\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\r\n      host = KNOWN_HOSTS.local;\r\n    } else if (window.location.hostname) {\r\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\r\n    }\r\n  }\r\n  return host;\r\n}\r\n\r\n// Detect if the page is served over HTTPS.\r\nexport function isSecureConnection() {\r\n  if (typeof window.location == 'object') {\r\n    return window.location.protocol == 'https:';\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isLocalHost() {\r\n  if (typeof window.location == 'object') {\r\n    return window.location.hostname == 'localhost';\r\n  }\r\n  return false;\r\n}\r\n","// The top-level class to hold all functionality together.\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/messaging';\r\n\r\nimport Tinode from 'tinode-sdk';\r\n\r\nimport Alert from '../widgets/alert.jsx';\r\nimport ContextMenu from '../widgets/context-menu.jsx';\r\n\r\nimport InfoView from './info-view.jsx';\r\nimport MessagesView from './messages-view.jsx';\r\nimport SidepanelView from './sidepanel-view.jsx';\r\n\r\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\r\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\r\nimport { PACKAGE_VERSION } from '../version.js';\r\nimport { base64ReEncode, makeImageDataUrl } from '../lib/blob-helpers.js';\r\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\r\nimport LocalStorageUtil from '../lib/local-storage.js';\r\nimport HashNavigation from '../lib/navigation.js';\r\nimport { secondsToTime } from '../lib/strformat.js'\r\nimport { updateFavicon } from '../lib/utils.js';\r\n\r\n// Sound to play on message received.\r\nconst POP_SOUND = new Audio('audio/msg.mp3');\r\n\r\nconst messages = defineMessages({\r\n  reconnect_countdown: {\r\n    id: 'reconnect_countdown',\r\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\r\n    description: 'Message shown when an app update is available.'\r\n  },\r\n  reconnect_now: {\r\n    id: 'reconnect_now',\r\n    defaultMessage: 'Try now',\r\n    description: 'Prompt for reconnecting now'\r\n  },\r\n  push_init_failed: {\r\n    id: 'push_init_failed',\r\n    defaultMessage: 'Failed to initialize push notifications',\r\n    description: 'Error message when push notifications have failed to initialize.'\r\n  },\r\n  invalid_security_token: {\r\n    id: 'invalid_security_token',\r\n    defaultMessage: 'Invalid security token',\r\n    description: 'Error message when resetting password.'\r\n  },\r\n  no_connection: {\r\n    id: 'no_connection',\r\n    defaultMessage: 'No connection',\r\n    description: 'Warning that the user is offline.'\r\n  },\r\n  code_doesnot_match: {\r\n    id: 'code_doesnot_match',\r\n    defaultMessage: 'Code does not match',\r\n    description: 'Error message when the credential validation code is incorrect.'\r\n  },\r\n  menu_item_info: {\r\n    id: 'menu_item_info',\r\n    defaultMessage: 'Info',\r\n    description: 'Show extended topic information'\r\n  }\r\n});\r\n\r\nclass TinodeWeb extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.getBlankState();\r\n\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.handleHashRoute = this.handleHashRoute.bind(this);\r\n    this.handleOnline = this.handleOnline.bind(this);\r\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\r\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\r\n    this.handleError = this.handleError.bind(this);\r\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\r\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\r\n    this.handleConnected = this.handleConnected.bind(this);\r\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\r\n    this.doLogin = this.doLogin.bind(this);\r\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\r\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\r\n    this.handleDisconnect = this.handleDisconnect.bind(this);\r\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\r\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\r\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\r\n    this.resetContactList = this.resetContactList.bind(this);\r\n    this.tnData = this.tnData.bind(this);\r\n    this.tnInitFind = this.tnInitFind.bind(this);\r\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\r\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\r\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\r\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\r\n    this.handleSendMessage = this.handleSendMessage.bind(this);\r\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\r\n    this.handleNewAccount = this.handleNewAccount.bind(this);\r\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\r\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\r\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\r\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\r\n    this.handleSettings = this.handleSettings.bind(this);\r\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\r\n    this.handleShowArchive = this.handleShowArchive.bind(this);\r\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\r\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\r\n    this.handleCredAdd = this.handleCredAdd.bind(this);\r\n    this.handleCredDelete = this.handleCredDelete.bind(this);\r\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\r\n    this.initFCMessaging = this.initFCMessaging.bind(this);\r\n    this.togglePushToken = this.togglePushToken.bind(this);\r\n    this.requestPushToken = this.requestPushToken.bind(this);\r\n    this.handlePushMessage = this.handlePushMessage.bind(this);\r\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\r\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\r\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\r\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\r\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\r\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\r\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\r\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\r\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\r\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\r\n    this.handleReportTopic = this.handleReportTopic.bind(this);\r\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\r\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\r\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\r\n    this.handleShowAlert = this.handleShowAlert.bind(this);\r\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\r\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\r\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\r\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\r\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\r\n    this.handleResetPassword = this.handleResetPassword.bind(this);\r\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\r\n  }\r\n\r\n  getBlankState() {\r\n    const settings = LocalStorageUtil.getObject('settings') || {};\r\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\r\n\r\n    return {\r\n      connected: false,\r\n      // Connected and subscribed to 'me'\r\n      ready: false,\r\n      // Try to re-login on new connection.\r\n      autoLogin: false,\r\n      transport: settings.transport || null,\r\n      serverAddress: settings.serverAddress || detectServerAddress(),\r\n      serverVersion: \"no connection\",\r\n      // \"On\" is the default, so saving the \"off\" state.\r\n      messageSounds: !settings.messageSoundsOff,\r\n      incognitoMode: false,\r\n      desktopAlerts: persist && settings.desktopAlerts,\r\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\r\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\r\n        (typeof FIREBASE_INIT != 'undefined'),\r\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\r\n\r\n      applicationVisible: !document.hidden,\r\n\r\n      errorText: '',\r\n      errorLevel: null,\r\n      errorAction: undefined,\r\n      errorActionText: null,\r\n\r\n      sidePanelSelected: 'login',\r\n      sidePanelTitle: null,\r\n      sidePanelAvatar: null,\r\n      loadSpinnerVisible: false,\r\n\r\n      login: '',\r\n      password: '',\r\n      persist: persist,\r\n      myUserId: null,\r\n      liveConnection: navigator.onLine,\r\n      topicSelected: '',\r\n      topicSelectedOnline: false,\r\n      topicSelectedAcs: null,\r\n      newTopicParams: null,\r\n      loginDisabled: false,\r\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\r\n      showInfoPanel: false,\r\n      mobilePanel: 'sidepanel',\r\n\r\n      contextMenuVisible: false,\r\n      contextMenuBounds: null,\r\n      contextMenuClickAt: null,\r\n      contextMenuParams: null,\r\n      contextMenuItems: [],\r\n\r\n      // Modal alert dialog.\r\n      alertVisible: false,\r\n      alertParams: {},\r\n\r\n      // Chats as shown in the ContactsView\r\n      chatList: [],\r\n      // Contacts returned by a search query.\r\n      searchResults: [],\r\n      // Merged results of a search query and p2p chats.\r\n      searchableContacts: [],\r\n      credMethod: undefined,\r\n      credCode: undefined,\r\n      // Topic to go to after login.\r\n      requestedTopic: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleResize);\r\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\r\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\r\n    window.addEventListener('hashchange', this.handleHashRoute);\r\n\r\n    // Process background notifications from the service worker.\r\n    if (typeof BroadcastChannel == 'function') {\r\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\r\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\r\n    } else {\r\n      // Safari is broken by design.\r\n      console.warn('Your browser does not support BroadcastChannel. Some features will not be available');\r\n    }\r\n\r\n    // Window/tab visible or invisible for pausing timers.\r\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\r\n\r\n    this.setState({\r\n      viewportWidth: document.documentElement.clientWidth,\r\n      viewportHeight: document.documentElement.clientHeight\r\n    });\r\n\r\n    new Promise((resolve, reject) => {\r\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\r\n        this.props.intl.locale, this.state.persist, resolve);\r\n      this.tinode.onConnect = this.handleConnected;\r\n      this.tinode.onDisconnect = this.handleDisconnect;\r\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\r\n    }).then(() => {\r\n      // Initialize desktop alerts.\r\n      if (this.state.desktopAlertsEnabled) {\r\n        this.initFCMessaging().then(() => {\r\n          if (this.state.desktopAlerts) {\r\n            if (!this.state.firebaseToken) {\r\n              this.togglePushToken(true);\r\n            } else {\r\n              this.tinode.setDeviceToken(this.state.firebaseToken);\r\n            }\r\n          }\r\n        }).catch(() => {\r\n          // do nothing: handled earlier.\r\n          // catch needed to pervent unnecessary logging of error.\r\n        });\r\n      }\r\n\r\n      // Parse and save the hash navigation params.\r\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\r\n\r\n      // Read contacts from cache.\r\n      this.resetContactList();\r\n\r\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\r\n      if (token) {\r\n        this.setState({autoLogin: true});\r\n\r\n        // When reading from storage, date is returned as string.\r\n        token.expires = new Date(token.expires);\r\n        this.tinode.setAuthToken(token);\r\n        this.tinode.connect().catch((err) => {\r\n          // Socket error\r\n          this.handleError(err.message, 'err');\r\n        });\r\n      }\r\n\r\n      // Save possible topic name and navigate to blank state.\r\n      this.setState({requestedTopic: parsedNav.path[1]});\r\n      HashNavigation.navigateTo('');\r\n\r\n      this.readTimer = null;\r\n      this.readTimerCallback = null;\r\n\r\n      this.handleHashRoute();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n    window.removeEventListener('hashchange', this.handleHashRoute);\r\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\r\n  }\r\n\r\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\r\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\r\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\r\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\r\n    tinode.setHumanLanguage(locale);\r\n    tinode.enableLogging(LOGGING_ENABLED, true);\r\n    return tinode;\r\n  }\r\n\r\n  // Notifiy Tinode that a push message was received from the server.\r\n  handlePushMessage(data) {\r\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\r\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\r\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\r\n    }\r\n  }\r\n\r\n  initFCMessaging() {\r\n    const {formatMessage, locale} = this.props.intl;\r\n    const onError = (msg, err) => {\r\n      console.error(msg, err);\r\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\r\n      this.setState({desktopAlertsEnabled: false});\r\n    }\r\n\r\n    try {\r\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\r\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\r\n\r\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\r\n        this.checkForAppUpdate(reg);\r\n        this.fbPush.useServiceWorker(reg);\r\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\r\n\r\n        // Google could not be bothered to mention that onTokenRefresh is never called.\r\n        this.fbPush.onTokenRefresh(() => {\r\n          this.requestPushToken();\r\n        });\r\n\r\n        // Handhe FCM pushes\r\n        // (a) for channels always,\r\n        // (b) pushes when the app is in foreground but has not focus.\r\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\r\n\r\n        return reg;\r\n      }).catch((err) => {\r\n        // registration failed :(\r\n        onError(\"Failed to register service worker:\", err);\r\n        return Promise.reject(err);\r\n      });\r\n    } catch (err) {\r\n      onError(\"Failed to initialize push notifications\", err);\r\n      return Promise.reject(err);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\r\n    this.setState({\r\n      viewportWidth: document.documentElement.clientWidth,\r\n      viewportHeight: document.documentElement.clientHeight\r\n    });\r\n    if (this.state.displayMobile != mobile) {\r\n      this.setState({displayMobile: mobile});\r\n    }\r\n  }\r\n\r\n  // Check if a newer version of TinodeWeb app is available at the server.\r\n  checkForAppUpdate(reg) {\r\n    reg.onupdatefound = () => {\r\n      const installingWorker = reg.installing;\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\r\n          const msg = <>\r\n            <FormattedMessage id=\"update_available\"\r\n              defaultMessage=\"Update available.\"\r\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\r\n              <FormattedMessage id=\"reload_update\"\r\n                defaultMessage=\"Reload\"\r\n                description=\"Call to action to reload application when update is available.\" />\r\n            </a>.</>;\r\n          this.handleError(msg, 'info');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle for hashchange event: display appropriate panels.\r\n  handleHashRoute() {\r\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\r\n    if (hash.path && hash.path.length > 0) {\r\n      // Left-side panel selector.\r\n      if (['register','settings','edit','notif','security','support','general',\r\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\r\n        this.setState({sidePanelSelected: hash.path[0]});\r\n      } else {\r\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\r\n      }\r\n\r\n      // Topic for MessagesView selector.\r\n      let topicName = hash.path[1] || null;\r\n      if (topicName != this.state.topicSelected) {\r\n        if (!Tinode.topicType(topicName)) {\r\n          // Clear invalid topic name.\r\n          topicName = null;\r\n        }\r\n        const newState = {\r\n          topicSelected: topicName\r\n        };\r\n        const acs = this.tinode.getTopicAccessMode(topicName);\r\n        if (acs) {\r\n          newState.topicSelectedAcs = acs;\r\n        }\r\n        this.setState(newState);\r\n      }\r\n    } else {\r\n      // Empty hashpath\r\n      this.setState({sidePanelSelected: '', topicSelected: null});\r\n    }\r\n\r\n    // Save validation credentials, if available.\r\n    if (hash.params.method) {\r\n      this.setState({ credMethod: hash.params.method });\r\n    }\r\n    if (hash.params.code) {\r\n      this.setState({ credCode: hash.params.code });\r\n    }\r\n\r\n    // Additional parameters of panels.\r\n    this.setState({\r\n      showInfoPanel: hash.params.info,\r\n      newTopicTabSelected: hash.params.tab\r\n    });\r\n  }\r\n\r\n  handleOnline(online) {\r\n    if (online) {\r\n      this.handleError();\r\n      clearInterval(this.reconnectCountdown);\r\n      this.tinode.reconnect();\r\n    } else {\r\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\r\n    }\r\n    this.setState({liveConnection: online});\r\n  }\r\n\r\n  handleVisibilityEvent() {\r\n    this.setState({applicationVisible: !document.hidden});\r\n  }\r\n\r\n  handleError(err, level, action, actionText) {\r\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\r\n  }\r\n\r\n  // User clicked Login button in the side panel.\r\n  handleLoginRequest(login, password, token, id_device) {\r\n    this.setState({\r\n      loginDisabled: true,\r\n      login: login,\r\n      password: password,\r\n      token: token,\r\n      id_device: id_device,\r\n      loadSpinnerVisible: true,\r\n      autoLogin: true\r\n    });\r\n    this.handleError('', null);\r\n\r\n    if (this.tinode.isConnected()) {\r\n      this.doLogin(login, password, token, id_device, {meth: this.state.credMethod, resp: this.state.credCode});\r\n    } else {\r\n      this.tinode.connect().catch((err) => {\r\n        // Socket error\r\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  // Enable or disable saving the password and IndexedDB.\r\n  handlePersistenceChange(persist) {\r\n    if (persist) {\r\n      this.tinode.initStorage().then(() => {\r\n        LocalStorageUtil.setObject('keep-logged-in', true);\r\n        this.setState({persist: true});\r\n      });\r\n    } else {\r\n      this.tinode.clearStorage().then(() => {\r\n        LocalStorageUtil.setObject('keep-logged-in', false);\r\n        this.setState({persist: false});\r\n      });\r\n    }\r\n  }\r\n\r\n  // Connection succeeded.\r\n  handleConnected() {\r\n    // Just to be sure.\r\n    clearInterval(this.reconnectCountdown);\r\n    this.handleError();\r\n\r\n    const params = this.tinode.getServerInfo();\r\n    this.setState({\r\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\r\n    });\r\n\r\n    if (this.state.autoLogin) {\r\n      this.doLogin(this.state.login, this.state.password, this.state.token, this.state.id_device, {meth: this.state.credMethod, resp: this.state.credCode});\r\n    }\r\n  }\r\n\r\n  // Called for each auto-reconnect iteration.\r\n  handleAutoreconnectIteration(sec, prom) {\r\n    clearInterval(this.reconnectCountdown);\r\n\r\n    if (sec < 0) {\r\n      // Clear error\r\n      this.handleError();\r\n      return;\r\n    }\r\n\r\n    if (prom) {\r\n      // Reconnecting now\r\n      prom.then(() => {\r\n        // Reconnected: clear error\r\n        this.handleError();\r\n      }).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {formatMessage} = this.props.intl;\r\n    let count = sec / 1000;\r\n    count = count | count;\r\n    this.reconnectCountdown = setInterval(() => {\r\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\r\n      this.handleError(\r\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\r\n        'warn',\r\n        () => {\r\n          clearInterval(this.reconnectCountdown);\r\n          this.tinode.reconnect();\r\n        },\r\n        formatMessage(messages.reconnect_now)\r\n      );\r\n      count -= 1;\r\n    }, 1000);\r\n  }\r\n\r\n  // Connection lost\r\n  handleDisconnect(err) {\r\n    this.setState({\r\n      connected: false,\r\n      ready: false,\r\n      topicSelectedOnline: false,\r\n      errorText: err && err.message ? err.message : \"Disconnected\",\r\n      errorLevel: err && err.message ? 'err' : 'warn',\r\n      loginDisabled: false,\r\n      contextMenuVisible: false,\r\n      serverVersion: \"no connection\"\r\n    });\r\n  }\r\n\r\n  doLogin(login, password, access_token, id_device, cred) {\r\n      if (this.tinode.isAuthenticated()) {\r\n      // Already logged in. Go to default screen.\r\n      HashNavigation.navigateTo('');\r\n      return;\r\n    }\r\n    // Sanitize and package credentail.\r\n    cred = Tinode.credential(cred);\r\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\r\n    let promise = null;\r\n    const token = this.tinode.getAuthToken();\r\n    if (login && password) {\r\n      this.setState({password: null});\r\n      promise = this.tinode.loginBasic(login, password, cred);\r\n\r\n      //token from login\r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('id_device', id_device);\r\n      \r\n    } else if (token) {\r\n      promise = this.tinode.loginToken(token.token, cred);\r\n\r\n      //token from login\r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('id_device', id_device);\r\n    }\r\n\r\n    if (promise) {\r\n      promise.then((ctrl) => {\r\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\r\n          this.setState({loadSpinnerVisible: false});\r\n          if (cred) {\r\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\r\n          }\r\n          this.handleCredentialsRequest(ctrl.params);\r\n        } else {\r\n          this.handleLoginSuccessful();\r\n        }\r\n      }).catch((err) => {\r\n        // Login failed, report error.\r\n        this.setState({\r\n          loginDisabled: false,\r\n          credMethod: undefined,\r\n          credCode: undefined,\r\n          loadSpinnerVisible: false,\r\n          autoLogin: false\r\n        });\r\n        this.handleError(err.message, 'err');\r\n        localStorage.removeItem('auth-token');\r\n        HashNavigation.navigateTo('');\r\n\r\n        //token from login\r\n      localStorage.setItem('access_token', null);\r\n      localStorage.setItem('id_device', null);\r\n      });\r\n    } else {\r\n      // No login credentials provided.\r\n      // Make sure we are on the login page.\r\n      HashNavigation.navigateTo('');\r\n      this.setState({loginDisabled: false});\r\n    }\r\n  }\r\n\r\n  handleCredentialsRequest(params) {\r\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\r\n    parsed.path[0] = 'cred';\r\n    parsed.params['method'] = params.cred[0];\r\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\r\n  }\r\n\r\n  handleLoginSuccessful() {\r\n    this.handleError();\r\n\r\n    // Refresh authentication token.\r\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\r\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\r\n    }\r\n\r\n    const goToTopic = this.state.requestedTopic;\r\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\r\n    const me = this.tinode.getMeTopic();\r\n    me.onMetaDesc = this.tnMeMetaDesc;\r\n    me.onContactUpdate = this.tnMeContactUpdate;\r\n    me.onSubsUpdated = this.tnMeSubsUpdated;\r\n    this.setState({\r\n      connected: true,\r\n      credMethod: undefined,\r\n      credCode: undefined,\r\n      myUserId: this.tinode.getCurrentUserID(),\r\n      autoLogin: true,\r\n      requestedTopic: undefined,\r\n    });\r\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\r\n    me.subscribe(\r\n      me.startMetaQuery().\r\n        withLaterSub().\r\n        withDesc().\r\n        withTags().\r\n        withCred().\r\n        build()\r\n      ).catch((err) => {\r\n        this.tinode.disconnect();\r\n        localStorage.removeItem('auth-token');\r\n        this.handleError(err.message, 'err');\r\n        HashNavigation.navigateTo('');\r\n      }).finally(() => {\r\n        this.setState({loadSpinnerVisible: false});\r\n      });\r\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\r\n    if (goToTopic) {\r\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\r\n    }\r\n    HashNavigation.navigateTo(urlHash);\r\n  }\r\n\r\n  tnMeMetaDesc(desc) {\r\n    if (desc) {\r\n      if (desc.public) {\r\n        this.setState({\r\n          sidePanelTitle: desc.public.fn,\r\n          sidePanelAvatar: makeImageDataUrl(desc.public.photo)\r\n        });\r\n      }\r\n      if (desc.acs) {\r\n        this.setState({\r\n          incognitoMode: !desc.acs.isPresencer()\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Reactions to updates to the contact list.\r\n  tnMeContactUpdate(what, cont) {\r\n    if (what == 'on' || what == 'off') {\r\n      this.resetContactList();\r\n      if (this.state.topicSelected == cont.topic) {\r\n        this.setState({topicSelectedOnline: (what == 'on')});\r\n      }\r\n    } else if (what == 'read') {\r\n      this.resetContactList();\r\n    } else if (what == 'msg') {\r\n      // Check if the topic is archived. If so, don't play a sound.\r\n      const topic = this.tinode.getTopic(cont.topic);\r\n      const archived = topic && topic.isArchived();\r\n\r\n      // New message received. Maybe the message is from the current user, then unread is 0.\r\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\r\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\r\n        if (document.hidden || this.state.topicSelected != cont.topic) {\r\n          POP_SOUND.play();\r\n        }\r\n      }\r\n      // Reorder contact list to use possibly updated 'touched'.\r\n      this.resetContactList();\r\n    } else if (what == 'recv') {\r\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\r\n    } else if (what == 'gone' || what == 'unsub') {\r\n      // Topic deleted or user unsubscribed. Remove topic from view.\r\n      // If the currently selected topic is gone, clear the selection.\r\n      if (this.state.topicSelected == cont.topic) {\r\n        this.handleTopicSelected(null);\r\n      }\r\n      // Redraw without the deleted topic.\r\n      this.resetContactList();\r\n    } else if (what == 'acs') {\r\n      // Permissions changed. If it's for the currently selected topic,\r\n      // update the views.\r\n      if (this.state.topicSelected == cont.topic) {\r\n        this.setState({topicSelectedAcs: cont.acs});\r\n      }\r\n    } else if (what == 'del') {\r\n      // TODO: messages deleted (hard or soft) -- update pill counter.\r\n    } else if (what == 'upd') {\r\n      // upd - handled by the SDK. Explicitly ignoring here.\r\n    } else {\r\n      // TODO(gene): handle other types of notifications:\r\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\r\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\r\n    }\r\n  }\r\n\r\n  tnMeSubsUpdated(unused) {\r\n    this.resetContactList();\r\n  }\r\n\r\n  // Merge search results and contact list to create a single flat\r\n  // list of known contacts for GroupManager to use.\r\n  static prepareSearchableContacts(chatList, foundContacts) {\r\n    const merged = {};\r\n\r\n    // For chatList topics merge only p2p topics and convert them to the\r\n    // same format as foundContacts.\r\n    for (const c of chatList) {\r\n      if (Tinode.isP2PTopicName(c.topic)) {\r\n          merged[c.topic] = {\r\n            user: c.topic,\r\n            updated: c.updated,\r\n            public: c.public,\r\n            private: c.private,\r\n            acs: c.acs\r\n          };\r\n      }\r\n    }\r\n\r\n    // Add all foundCountacts if they have not been added already.\r\n    for (const c of foundContacts) {\r\n      if (!merged[c.user]) {\r\n        merged[c.user] = c;\r\n      }\r\n    }\r\n\r\n    return Object.values(merged);\r\n  }\r\n\r\n  resetContactList() {\r\n    const newState = {\r\n      chatList: []\r\n    };\r\n\r\n    if (!this.state.ready) {\r\n      newState.ready = true;\r\n    }\r\n\r\n    this.tinode.getMeTopic().contacts((c) => {\r\n      if (!c.topic && !c.user) {\r\n        // Contacts expect c.topic to be set.\r\n        c.topic = c.name;\r\n      }\r\n      newState.chatList.push(c);\r\n      if (this.state.topicSelected == c.topic) {\r\n        newState.topicSelectedOnline = c.online;\r\n        newState.topicSelectedAcs = c.acs;\r\n      }\r\n    });\r\n\r\n    const past = new Date(0);\r\n    newState.chatList.sort((a, b) => {\r\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\r\n    });\r\n\r\n    // Merge search results and chat list.\r\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\r\n    this.setState(newState);\r\n  }\r\n\r\n  // Sending \"received\" notifications\r\n  tnData(data) {\r\n    const topic = this.tinode.getTopic(data.topic);\r\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\r\n      clearTimeout(this.receivedTimer);\r\n      this.receivedTimer = setTimeout(() => {\r\n        this.receivedTimer = undefined;\r\n        topic.noteRecv(data.seq);\r\n      }, RECEIVED_DELAY);\r\n    }\r\n  }\r\n\r\n  /* Fnd topic: find contacts by tokens */\r\n  tnInitFind() {\r\n    const fnd = this.tinode.getFndTopic();\r\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\r\n    if (fnd.isSubscribed()) {\r\n      this.tnFndSubsUpdated();\r\n    } else {\r\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  tnFndSubsUpdated() {\r\n    const foundContacts = [];\r\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\r\n    this.tinode.getFndTopic().contacts((s) => {\r\n      foundContacts.push(s);\r\n    });\r\n    this.setState({\r\n      searchResults: foundContacts,\r\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\r\n    });\r\n  }\r\n\r\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\r\n    @param query {Array} is an array of contacts to search for\r\n   */\r\n  handleSearchContacts(query) {\r\n    const fnd = this.tinode.getFndTopic();\r\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\r\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\r\n    }).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  // User clicked on a contact in the side panel or deleted a contact.\r\n  handleTopicSelected(topicName) {\r\n    // Clear newTopicParams after use.\r\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\r\n      this.setState({\r\n        newTopicParams: null\r\n      });\r\n    }\r\n\r\n    if (topicName) {\r\n      this.setState({\r\n        errorText: '',\r\n        errorLevel: null,\r\n        mobilePanel: 'topic-view',\r\n        showInfoPanel: false\r\n      });\r\n      // Different contact selected.\r\n      if (this.state.topicSelected != topicName) {\r\n        this.setState({\r\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\r\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\r\n        });\r\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\r\n      }\r\n    } else {\r\n      // Currently selected contact deleted\r\n      this.setState({\r\n        errorText: '',\r\n        errorLevel: null,\r\n        mobilePanel: 'sidepanel',\r\n        topicSelectedOnline: false,\r\n        topicSelectedAcs: null,\r\n        showInfoPanel: false\r\n      });\r\n\r\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\r\n    }\r\n  }\r\n\r\n  // In mobile view user requested to show sidepanel\r\n  handleHideMessagesView() {\r\n    this.setState({\r\n      mobilePanel: 'sidepanel'\r\n    });\r\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\r\n  }\r\n\r\n  // User is sending a message, either plain text or a drafty object, possibly\r\n  // with attachments.\r\n  //  - msg - Drafty message with content\r\n  //  - promise - Promise to be resolved when the upload is completed\r\n  //  - uploader - for tracking progress\r\n  handleSendMessage(msg, promise, uploader) {\r\n    const topic = this.tinode.getTopic(this.state.topicSelected);\r\n\r\n    msg = topic.createMessage(msg, false);\r\n    // The uploader is used to show progress.\r\n    msg._uploader = uploader;\r\n\r\n    if (!topic.isSubscribed()) {\r\n      if (!promise) {\r\n        promise = Promise.resolve();\r\n      }\r\n      promise = promise.then(() => { return topic.subscribe(); });\r\n    }\r\n\r\n    if (promise) {\r\n      promise = promise.catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n\r\n    topic.publishDraft(msg, promise)\r\n      .then((ctrl) => {\r\n        if (topic.isArchived()) {\r\n          return topic.archive(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n  }\r\n\r\n  handleNewChatInvitation(topicName, action) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    let response = null;\r\n    switch (action) {\r\n      case 'accept':\r\n        // Accept given permissions.\r\n        const mode = topic.getAccessMode().getGiven();\r\n        response = topic.setMeta({sub: {mode: mode}});\r\n        if (topic.isP2PType()) {\r\n          // For P2P topics change 'given' permission of the peer too.\r\n          // In p2p topics the other user has the same name as the topic.\r\n          response = response.then((ctrl) => {\r\n            topic.setMeta({sub: {user: topicName, mode: mode}});\r\n          });\r\n        }\r\n        break;\r\n      case 'delete':\r\n        // Ignore invitation by deleting it.\r\n        response = topic.delTopic(true);\r\n        break;\r\n      case 'block':\r\n        // Ban the topic making futher invites impossible.\r\n        // Just self-ban.\r\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\r\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\r\n          return this.handleTopicSelected(null);\r\n        });\r\n        break;\r\n      default:\r\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\r\n    }\r\n\r\n    if (response != null) {\r\n      response.catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  // User chose a Sign Up menu item.\r\n  handleNewAccount() {\r\n    this.handleError();\r\n\r\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\r\n  }\r\n\r\n  // Actual registration of a new account.\r\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\r\n    // Clear old error, if any.\r\n    this.handleError();\r\n\r\n    this.tinode.connect(this.state.serverAddress)\r\n      .then(() => {\r\n        return this.tinode.createAccountBasic(login_, password_,\r\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\r\n      }).then((ctrl) => {\r\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\r\n          this.handleCredentialsRequest(ctrl.params);\r\n        } else {\r\n          this.handleLoginSuccessful(this);\r\n        }\r\n      }).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n  }\r\n\r\n  handleUpdateAccountRequest(password, pub, defacs) {\r\n    this.handleError();\r\n\r\n    if (pub || defacs) {\r\n      const params = {};\r\n      if (pub) {\r\n        params.public = pub;\r\n      }\r\n      if (defacs) {\r\n        params.defacs = defacs;\r\n      }\r\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n    if (password) {\r\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  handleToggleIncognitoMode(on) {\r\n    const me = this.tinode.getMeTopic();\r\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\r\n    me.setMeta({sub: {mode: am}}).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleUpdateAccountTagsRequest(tags) {\r\n    this.tinode.getMeTopic().setMeta({tags: tags})\r\n      .catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n  }\r\n\r\n  // User chose Settings menu item.\r\n  handleSettings() {\r\n    this.handleError();\r\n\r\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\r\n      this.state.myUserId ? 'edit' : 'settings'));\r\n  }\r\n\r\n  // User updated global parameters.\r\n  handleGlobalSettings(settings) {\r\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\r\n    const transport = settings.transport || this.state.transport;\r\n    if (this.tinode) {\r\n      this.tinode.clearStorage();\r\n      this.tinode.onDisconnect = undefined;\r\n      this.tinode.disconnect();\r\n    }\r\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\r\n      LocalStorageUtil.getObject('keep-logged-in'));\r\n    this.tinode.onConnect = this.handleConnected;\r\n    this.tinode.onDisconnect = this.handleDisconnect;\r\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\r\n\r\n    this.setState({\r\n      serverAddress: serverAddress,\r\n      transport: transport\r\n    });\r\n    LocalStorageUtil.setObject('settings', {\r\n      serverAddress: serverAddress,\r\n      transport: transport\r\n    });\r\n\r\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\r\n  }\r\n\r\n  // User chose 'Archived chats'.\r\n  handleShowArchive() {\r\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\r\n      this.state.myUserId ? 'archive' : ''));\r\n  }\r\n\r\n  // User viewes 'Blocked chats'.\r\n  handleShowBlocked() {\r\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\r\n      this.state.myUserId ? 'blocked' : ''));\r\n  }\r\n\r\n  togglePushToken(enabled) {\r\n    if (enabled) {\r\n      if (!this.state.firebaseToken) {\r\n        const fcm = this.fbPush ?\r\n          Promise.resolve() :\r\n          this.initFCMessaging();\r\n        fcm.then(() => {\r\n          return this.fbPush.requestPermission();\r\n        }).then(() => {\r\n          this.requestPushToken();\r\n        }).catch((err) => {\r\n          console.warn(\"Failed to get notification permission.\", err);\r\n          this.handleError(err.message, 'err');\r\n          this.setState({desktopAlerts: false, firebaseToken: null});\r\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\r\n        });\r\n      } else {\r\n        this.setState({desktopAlerts: true});\r\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\r\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\r\n        }\r\n      }\r\n    } else if (this.state.firebaseToken && this.fbPush) {\r\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\r\n        console.warn(\"Unable to delete token.\", err);\r\n      }).finally(() => {\r\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\r\n        localStorage.removeItem('firebase-token');\r\n        this.setState({desktopAlerts: false, firebaseToken: null});\r\n        // Inform the server that the token was deleted.\r\n        this.tinode.setDeviceToken(null);\r\n      });\r\n    } else {\r\n      this.setState({desktopAlerts: false, firebaseToken: null});\r\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\r\n    }\r\n  }\r\n\r\n  requestPushToken() {\r\n    this.fbPush.getToken().then((refreshedToken) => {\r\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\r\n      if (refreshedToken != this.state.firebaseToken) {\r\n        this.tinode.setDeviceToken(refreshedToken);\r\n        if (persist) {\r\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\r\n        }\r\n      }\r\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\r\n      if (persist) {\r\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\r\n      }\r\n    }).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n      console.warn(\"Failed to retrieve firebase token\", err);\r\n    });\r\n  }\r\n\r\n  handleToggleMessageSounds(enabled) {\r\n    this.setState({messageSounds: enabled});\r\n    LocalStorageUtil.updateObject('settings', {\r\n      messageSoundsOff: !enabled\r\n    });\r\n  }\r\n\r\n  handleCredAdd(method, value) {\r\n    const me = this.tinode.getMeTopic();\r\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleCredDelete(method, value) {\r\n    const me = this.tinode.getMeTopic();\r\n    me.delCredential(method, value).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleCredConfirm(method, response) {\r\n    this.handleCredentialsRequest({cred: [method]});\r\n  }\r\n\r\n  // User clicked Cancel button in Setting or Sign Up panel.\r\n  handleSidepanelCancel() {\r\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\r\n    let path = '';\r\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\r\n      path = 'edit';\r\n    } else if ('blocked' == parsed.path[0]) {\r\n      path = 'security';\r\n    } else if (this.state.myUserId) {\r\n      path = 'contacts';\r\n    }\r\n    parsed.path[0] = path;\r\n    if (parsed.params) {\r\n      delete parsed.params.code;\r\n      delete parsed.params.method;\r\n      delete parsed.params.tab;\r\n    }\r\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\r\n    this.setState({errorText: '', errorLevel: null});\r\n  }\r\n\r\n  // Basic nagigator by hash value. No need to bind to this.\r\n  basicNavigator(hash) {\r\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\r\n  }\r\n\r\n  // Request to start a topic, new or selected from search results, or \"by ID\".\r\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\r\n    // Check if topic is indeed new. If not, launch it.\r\n    if (topicName && this.tinode.isTopicCached(topicName)) {\r\n      this.handleTopicSelected(topicName);\r\n      return;\r\n    }\r\n\r\n    const params = {};\r\n    if (Tinode.isP2PTopicName(topicName)) {\r\n      // Because we are initialing the subscription, set 'want' to all permissions.\r\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\r\n      // Give the other user all permissions too.\r\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\r\n    } else {\r\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\r\n      params.desc = {public: pub, private: {comment: priv}};\r\n      params.tags = tags;\r\n    }\r\n    params._topicName = topicName;\r\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\r\n  }\r\n\r\n  // New topic was creted, here is the new topic name.\r\n  handleNewTopicCreated(oldName, newName) {\r\n    if (this.state.topicSelected == oldName && oldName != newName) {\r\n      // If the current URl contains the old topic name, replace it with new.\r\n      // Update the name of the selected topic first so the navigator doen't clear\r\n      // the state.\r\n      this.setState({topicSelected: newName}, () => {\r\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (topic) {\r\n      const params = {};\r\n      if (pub) {\r\n        params.public = pub;\r\n      }\r\n      if (priv) {\r\n        params.private = (priv === Tinode.DEL_CHAR) ?\r\n          Tinode.DEL_CHAR : {comment: priv};\r\n      }\r\n      if (permissions) {\r\n        params.defacs = permissions;\r\n      }\r\n      topic.setMeta({desc: params}).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangePermissions(topicName, mode, uid) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (topic) {\r\n      const am = topic.getAccessMode();\r\n      if (uid) {\r\n        am.updateGiven(mode);\r\n        mode = am.getGiven();\r\n      } else {\r\n        am.updateWant(mode);\r\n        mode = am.getWant();\r\n      }\r\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTagsUpdated(topicName, tags) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (topic) {\r\n      topic.setMeta({tags: tags}).catch((err) => {\r\n        this.handleError(err.message, 'err');\r\n      });\r\n    }\r\n  }\r\n\r\n  handleLogout() {\r\n    updateFavicon(0);\r\n\r\n    // Remove stored data.\r\n    localStorage.removeItem('auth-token');\r\n    localStorage.removeItem('firebase-token');\r\n    localStorage.removeItem('settings');\r\n    if (this.state.firebaseToken) {\r\n      this.fbPush.deleteToken(this.state.firebaseToken)\r\n    }\r\n\r\n    clearInterval(this.reconnectCountdown);\r\n\r\n    if (this.tinode) {\r\n      this.tinode.clearStorage();\r\n      this.tinode.onDisconnect = undefined;\r\n      this.tinode.disconnect();\r\n    }\r\n    this.setState(this.getBlankState());\r\n\r\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\r\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\r\n    this.tinode.onConnect = this.handleConnected;\r\n    this.tinode.onDisconnect = this.handleDisconnect;\r\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\r\n    HashNavigation.navigateTo('');\r\n  }\r\n\r\n  handleDeleteAccount() {\r\n    this.tinode.delCurrentUser(true).then((ctrl) => {\r\n      this.handleLogout();\r\n    });\r\n  }\r\n\r\n  handleDeleteTopicRequest(topicName) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    // Request to hard-delete topic.\r\n    topic.delTopic(true).then((ctrl) => {\r\n      // Hide MessagesView and InfoView panels.\r\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\r\n    }).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleDeleteMessagesRequest(topicName) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    // Request hard-delete all messages.\r\n    topic.delMessagesAll(true).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleLeaveUnsubRequest(topicName) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    topic.leave(true).then((ctrl) => {\r\n      // Hide MessagesView and InfoView panels.\r\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\r\n    }).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleBlockTopicRequest(topicName) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    topic.updateMode(null, '-JP').then((ctrl) => {\r\n      // Hide MessagesView and InfoView panels.\r\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\r\n    }).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleReportTopic(topicName) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    // Publish spam report.\r\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\r\n      'action': 'report',\r\n      'target': topicName\r\n    }));\r\n\r\n    // Remove J and P permissions.\r\n    topic.updateMode(null, '-JP').then((ctrl) => {\r\n      // Hide MessagesView and InfoView panels.\r\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\r\n    }).catch((err) => {\r\n      this.handleError(err.message, 'err');\r\n    });\r\n  }\r\n\r\n  handleShowContextMenu(params, menuItems) {\r\n    this.setState({\r\n      contextMenuVisible: true,\r\n      contextMenuClickAt: {x: params.x, y: params.y},\r\n      contextMenuParams: params,\r\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\r\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\r\n    });\r\n  }\r\n\r\n  defaultTopicContextMenu(topicName) {\r\n    const topic = this.tinode.getTopic(topicName);\r\n\r\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\r\n    if (topic) {\r\n      subscribed = topic.isSubscribed();\r\n      archived = topic.isArchived();\r\n\r\n      const acs = topic.getAccessMode();\r\n      if (acs) {\r\n        muted = acs.isMuted();\r\n        blocked = !acs.isJoiner();\r\n        self_blocked = !acs.isJoiner('want');\r\n        deleter = acs.isDeleter();\r\n      }\r\n    }\r\n\r\n    return [\r\n      subscribed ? {\r\n        title: this.props.intl.formatMessage(messages.menu_item_info),\r\n        handler: this.handleShowInfoView\r\n      } : null,\r\n      subscribed ? 'messages_clear' : null,\r\n      subscribed && deleter ? 'messages_clear_hard' : null,\r\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\r\n      self_blocked ? 'topic_unblock' : 'topic_block',\r\n      archived ? 'topic_restore' : 'topic_archive',\r\n      'topic_delete'\r\n    ];\r\n  }\r\n\r\n  handleHideContextMenu() {\r\n    this.setState({\r\n      contextMenuVisible: false,\r\n      contextMenuClickAt: null,\r\n      contextMenuParams: null,\r\n      contextMenuBounds: null\r\n    });\r\n  }\r\n\r\n  handleContextMenuAction(action, promise, params) {\r\n    if (action == 'topic_archive') {\r\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\r\n        promise.then(() => {\r\n          this.handleTopicSelected(null);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\r\n    this.setState({\r\n      alertVisible: true,\r\n      alertParams: {\r\n        title: title,\r\n        content: content,\r\n        onConfirm: onConfirm,\r\n        confirm: confirmText,\r\n        onReject: onReject,\r\n        reject: rejectText\r\n      }\r\n    });\r\n  }\r\n\r\n  handleShowInfoView() {\r\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\r\n    this.setState({showInfoPanel: true});\r\n  }\r\n\r\n  handleHideInfoView() {\r\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\r\n    this.setState({showInfoPanel: false});\r\n  }\r\n\r\n  handleMemberUpdateRequest(topicName, added, removed) {\r\n    if (!topicName) {\r\n      return;\r\n    }\r\n\r\n    const topic = this.tinode.getTopic(topicName);\r\n    if (!topic) {\r\n      return;\r\n    }\r\n\r\n    if (added && added.length > 0) {\r\n      added.map((uid) => {\r\n        topic.invite(uid, null).catch((err) => {\r\n          this.handleError(err.message, 'err');\r\n        });\r\n      });\r\n    }\r\n\r\n    if (removed && removed.length > 0) {\r\n      removed.map((uid) => {\r\n        topic.delSubscription(uid).catch((err) => {\r\n          this.handleError(err.message, 'err');\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleValidateCredentialsRequest(cred, code) {\r\n    if (this.tinode.isAuthenticated()) {\r\n      const me = this.tinode.getMeTopic();\r\n      me.setMeta({cred: {meth: cred, resp: code}})\r\n        .then(() => {\r\n          HashNavigation.navigateTo('');\r\n        })\r\n        .catch((err) => {\r\n          this.handleError(err.message, 'err');\r\n        });\r\n    } else {\r\n      this.setState({credMethod: cred, credCode: code});\r\n      this.doLogin(null, null, null, null, {meth: cred, resp: code});\r\n    }\r\n  }\r\n\r\n  handlePasswordResetRequest(method, value) {\r\n    // If already connected, connnect() will return a resolved promise.\r\n    return this.tinode.connect()\r\n      .then(() => {\r\n        return this.tinode.requestResetAuthSecret('basic', method, value);\r\n      })\r\n      .catch((err) => {\r\n        // Socket error\r\n        this.handleError(err.message, 'err');\r\n      });\r\n  }\r\n\r\n  handleResetPassword(scheme, newPassword, token) {\r\n    token = base64ReEncode(token);\r\n    if (!token) {\r\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\r\n    } else {\r\n      this.tinode.connect()\r\n        .then(() => {\r\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\r\n        })\r\n        .catch((err) => {\r\n          // Socket error\r\n          this.handleError(err.message, 'err');\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app-container\">\r\n        {this.state.contextMenuVisible ?\r\n          <ContextMenu\r\n            tinode={this.tinode}\r\n            bounds={this.state.contextMenuBounds}\r\n            clickAt={this.state.contextMenuClickAt}\r\n            params={this.state.contextMenuParams}\r\n            items={this.state.contextMenuItems}\r\n            hide={this.handleHideContextMenu}\r\n            onShowAlert={this.handleShowAlert}\r\n            onAction={this.handleContextMenuAction}\r\n            onTopicRemoved={(topicName) => {\r\n              if (topicName == this.state.topicSelected) {\r\n                this.handleTopicSelected(null);\r\n              }\r\n            }}\r\n            onError={this.handleError} />\r\n          :\r\n          null\r\n        }\r\n        <Alert\r\n          visible={this.state.alertVisible}\r\n          title={this.state.alertParams.title}\r\n          content={this.state.alertParams.content}\r\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\r\n          reject={this.state.alertParams.reject}\r\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\r\n          confirm={this.state.alertParams.confirm}\r\n          />\r\n        <SidepanelView\r\n          tinode={this.tinode}\r\n          connected={this.state.connected}\r\n          displayMobile={this.state.displayMobile}\r\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\r\n          state={this.state.sidePanelSelected}\r\n          title={this.state.sidePanelTitle}\r\n          avatar={this.state.sidePanelAvatar}\r\n          login={this.state.login}\r\n          persist={this.state.persist}\r\n          myUserId={this.state.myUserId}\r\n          loginDisabled={this.state.loginDisabled}\r\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\r\n\r\n          errorText={this.state.errorText}\r\n          errorLevel={this.state.errorLevel}\r\n          errorAction={this.state.errorAction}\r\n          errorActionText={this.state.errorActionText}\r\n\r\n          topicSelected={this.state.topicSelected}\r\n          chatList={this.state.chatList}\r\n          credMethod={this.state.credMethod}\r\n          credCode={this.state.credCode}\r\n\r\n          transport={this.state.transport}\r\n          messageSounds={this.state.messageSounds}\r\n          desktopAlerts={this.state.desktopAlerts}\r\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\r\n          incognitoMode={this.state.incognitoMode}\r\n          serverAddress={this.state.serverAddress}\r\n          serverVersion={this.state.serverVersion}\r\n\r\n          onGlobalSettings={this.handleGlobalSettings}\r\n          onSignUp={this.handleNewAccount}\r\n          onSettings={this.handleSettings}\r\n          onBasicNavigate={this.basicNavigator}\r\n          onLoginRequest={this.handleLoginRequest}\r\n          onPersistenceChange={this.handlePersistenceChange}\r\n          onCreateAccount={this.handleNewAccountRequest}\r\n          onUpdateAccount={this.handleUpdateAccountRequest}\r\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\r\n          onTogglePushNotifications={this.togglePushToken}\r\n          onToggleMessageSounds={this.handleToggleMessageSounds}\r\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\r\n          onCredAdd={this.handleCredAdd}\r\n          onCredDelete={this.handleCredDelete}\r\n          onCredConfirm={this.handleCredConfirm}\r\n          onTopicSelected={this.handleTopicSelected}\r\n          onCreateTopic={this.handleStartTopicRequest}\r\n          onLogout={this.handleLogout}\r\n          onDeleteAccount={this.handleDeleteAccount}\r\n          onShowAlert={this.handleShowAlert}\r\n          onCancel={this.handleSidepanelCancel}\r\n          onError={this.handleError}\r\n          onValidateCredentials={this.handleValidateCredentialsRequest}\r\n          onPasswordResetRequest={this.handlePasswordResetRequest}\r\n          onResetPassword={this.handleResetPassword}\r\n          onShowArchive={this.handleShowArchive}\r\n          onShowBlocked={this.handleShowBlocked}\r\n\r\n          onInitFind={this.tnInitFind}\r\n          searchResults={this.state.searchResults}\r\n          onSearchContacts={this.handleSearchContacts}\r\n\r\n          showContextMenu={this.handleShowContextMenu} />\r\n\r\n        <MessagesView\r\n          tinode={this.tinode}\r\n          connected={this.state.connected}\r\n          ready={this.state.ready}\r\n          online={this.state.topicSelectedOnline}\r\n          acs={this.state.topicSelectedAcs}\r\n          displayMobile={this.state.displayMobile}\r\n          viewportWidth={this.state.viewportWidth}\r\n          viewportHeight={this.state.viewportHeight}\r\n          hideSelf={this.state.displayMobile &&\r\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\r\n          topic={this.state.topicSelected}\r\n          myUserId={this.state.myUserId}\r\n          serverVersion={this.state.serverVersion}\r\n          serverAddress={this.state.serverAddress}\r\n          applicationVisible={this.state.applicationVisible}\r\n\r\n          errorText={this.state.errorText}\r\n          errorLevel={this.state.errorLevel}\r\n          errorAction={this.state.errorAction}\r\n          errorActionText={this.state.errorActionText}\r\n\r\n          newTopicParams={this.state.newTopicParams}\r\n\r\n          onHideMessagesView={this.handleHideMessagesView}\r\n          onData={this.tnData}\r\n          onError={this.handleError}\r\n          onNewTopicCreated={this.handleNewTopicCreated}\r\n          showContextMenu={this.handleShowContextMenu}\r\n          onChangePermissions={this.handleChangePermissions}\r\n          onNewChat={this.handleNewChatInvitation}\r\n          sendMessage={this.handleSendMessage} />\r\n\r\n        {this.state.showInfoPanel ?\r\n          <InfoView\r\n            tinode={this.tinode}\r\n            connected={this.state.connected}\r\n            displayMobile={this.state.displayMobile}\r\n            topic={this.state.topicSelected}\r\n            searchableContacts={this.state.searchableContacts}\r\n            myUserId={this.state.myUserId}\r\n\r\n            errorText={this.state.errorText}\r\n            errorLevel={this.state.errorLevel}\r\n            errorAction={this.state.errorAction}\r\n            errorActionText={this.state.errorActionText}\r\n\r\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\r\n            onCancel={this.handleHideInfoView}\r\n            onShowAlert={this.handleShowAlert}\r\n            onChangePermissions={this.handleChangePermissions}\r\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\r\n            onDeleteTopic={this.handleDeleteTopicRequest}\r\n            onDeleteMessages={this.handleDeleteMessagesRequest}\r\n            onLeaveTopic={this.handleLeaveUnsubRequest}\r\n            onBlockTopic={this.handleBlockTopicRequest}\r\n            onReportTopic={this.handleReportTopic}\r\n            onAddMember={this.handleManageGroupMembers}\r\n            onTopicTagsUpdate={this.handleTagsUpdated}\r\n            onInitFind={this.tnInitFind}\r\n            onError={this.handleError}\r\n\r\n            showContextMenu={this.handleShowContextMenu}\r\n            />\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default injectIntl(TinodeWeb);\r\n","// Put all packages together.\r\n// Used to generate umd/index.prod.js\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\n\r\nimport allMessages from './messages.json';\r\nimport TinodeWeb from './views/tinode-web.jsx';\r\nimport HashNavigation from './lib/navigation.js';\r\n\r\n// Detect human language to use in the UI:\r\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\r\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\r\nconst language = (params && params.hl) ||\r\n  (navigator.languages && navigator.languages[0]) ||\r\n  navigator.language ||\r\n  navigator.userLanguage ||\r\n  'en';\r\n\r\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\r\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\r\n\r\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\r\nconst messages =\r\n  allMessages[language] ||\r\n  allMessages[baseLanguage] ||\r\n  allMessages.en;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\r\n      <TinodeWeb />\r\n    </IntlProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('mountPoint')\r\n);\r\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[213](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageDataUrl","photo","data","type","startsWith","ref","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","indexOf","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","authorizeURL","sanitizeImageUrl","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","navigateTo","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","findMessage","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","token","id_device","hostName","persist","handleTokenChange","handleIdDeviceChange","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","token_prompt","id_device_prompt","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","reset","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","error","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","access_token","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"sourceRoot":""}